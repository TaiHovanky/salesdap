{"version":3,"sources":["components/file-selection-field/index.tsx","state/actions/document/index.ts","state/actions/alert/index.ts","state/actions/loading/index.ts","utils/validate-file-type.ts","utils/spreadsheet.utils.ts","containers/file-selection-field/index.tsx","components/pinned-file-chip/index.tsx","containers/pinned-file-chip/index.tsx","components/file-source-radio/index.tsx","containers/file-source-radio/index.tsx","utils/update-comparison-columns.ts","state/reducers/document/index.ts","components/comparison-column-autocomplete/index.tsx","containers/comparison-column-autocomplete/index.tsx","components/upload-document-column/index.tsx","containers/upload-document-column/index.tsx","components/upload-document-form/index.tsx","state/actions/step-progress/index.ts","containers/upload-document-form/index.tsx","components/duplicates-table/index.tsx","containers/duplicates-table/index.tsx","components/email-template/index.tsx","state/actions/email-template/index.ts","containers/email-template/index.tsx","components/stepper-footer/index.tsx","containers/stepper-footer/index.tsx","pages/home/index.tsx","containers/home/index.tsx","pages/register/index.tsx","state/actions/user/index.ts","containers/register/index.tsx","pages/email-capture/index.tsx","containers/email-capture/index.tsx","pages/login/index.tsx","containers/login/index.tsx","pages/profile/index.tsx","containers/profile/index.tsx","pages/password-reset/index.tsx","containers/password-reset/index.tsx","pages/forgot-password/index.tsx","containers/forgot-password/index.tsx","components/private-route/index.tsx","components/nav-bar/index.tsx","state/reducers/user/index.ts","containers/nav-bar/index.tsx","components/routes/index.tsx","containers/routes/index.tsx","state/reducers/step-progress/index.ts","state/reducers/email-template/index.ts","state/reducers/alert/index.ts","state/reducers/loading/index.ts","state/reducers/index.ts","index.tsx"],"names":["FileSelectionField","selectedDocument","validateAndSetFileSelection","index","inputFileRef","useRef","Fab","variant","sx","margin","onClick","current","click","AttachFile","mr","type","ref","className","onChange","event","name","style","height","marginTop","Typography","UPLOAD_DOCUMENT_SUCCESS","SELECT_DOCUMENT","CHANGE_COMPARISON_COLUMN","PIN_FILE_SUCCESS","SET_FILE_SOURCE","SET_COMPARISON_COLUMNS_ERROR","SET_ALL_COLUMNS","selectDocument","document","payload","columnChooserGridData","length","slice","changeComparisonColumn","value","SHOW_ERROR","HIDE_ERROR","SHOW_SUCCESS","HIDE_SUCCESS","showError","errorMessage","hideError","showSuccess","successMessage","hideSuccess","SET_IS_LOADING","setIsLoading","isLoading","acceptedFileTypes","checkIsValidFileType","fileName","fileNameArray","split","fileExtension","includes","toLowerCase","createJSONFromSpreadsheet","a","arrayBuffer","data","workbook","read","sheetName","SheetNames","worksheet","Sheets","utils","sheet_to_json","downloadSpreadsheetFromJSON","worksheetData","columns","forEach","row","Array","from","Object","keys","push","rowArr","map","rowProp","aoa_to_sheet","book_new","book_append_sheet","writeFile","createFileLink","pinnedFileName","url","window","URL","createObjectURL","Blob","link","createElement","href","setAttribute","body","appendChild","getPinnedFile","pinnedFileId","axios","get","responseType","params","connect","dispatch","message","wsDataObj","filename","target","files","PinnedFileChip","user","handlePinnedFileClick","Chip","icon","Attachment","label","state","pinnedFileData","console","log","FileSourceRadio","fileSource","handleFileTypeChange","FormControl","RadioGroup","marginBottom","FormControlLabel","control","Radio","setFileSource","pinnedFileBlob","setTimeout","updateComparisonColumns","comparisonColumns","updatedCol","newValue","indexOfCol","indexOf","splice","addMessageToErrorList","errorList","removeMessageFromErrorList","errMsgIndex","initialState","duplicatesData","selectedDocument1","allColumns","selectedDocument2","comparisonColumns1","comparisonColumns2","fileSource1","fileSource2","comparisonColumns1Error","comparisonColumns2Error","MISMATCHED_COLUMNS_ERR","TOO_MANY_COLUMNS_ERR","REQUIRED_ERR","CheckBoxOutlineBlank","fontSize","checkedIcon","CheckBox","ComparisonColumnAutocomplete","comparisonColumnsError","handleComparisonColumnsBlur","handleComparisonColumnFieldChange","autocompleteOptions","Autocomplete","multiple","disableCloseOnSelect","options","width","renderOption","props","option","selected","Checkbox","marginRight","checked","renderInput","TextField","required","error","onBlur","helperText","color","join","setComparisonColumnsError","_","UploadDocumentColumn","renderGridCell","handleColumnClick","column","dataField","UploadDocumentForm","setAllColumns","handleUploadAndCompare","dataGrid1","dataGrid2","useEffect","isSubmitBtnEnabled","Grid","container","spacing","direction","justifyContent","alignItems","item","xs","p","id","dataSource","allowColumnReordering","allowColumnResizing","columnAutoWidth","showBorders","colProps","colIdx","headerCellRender","defaultPageSize","visible","displayMode","showPageSizeSelector","showInfo","showNavigationButtons","disabled","Upload","CHANGE_STEP","changeStep","newStep","activeStep","stepProgress","step","uploadDocumentSuccess","col","formData","FormData","docBlob1","JSON","stringify","append","docBlob2","post","then","res","catch","err","DuplicatesTable","customizeColumns","useCallback","caption","isBand","cssClass","i","ownerBand","padding","md","showColumnLines","rowAlternationEnabled","mode","enabled","allowSearch","groupIndex","sortOrder","fixed","fixedPosition","calculateCellValue","firstname","lastname","colName","colIndex","replace","EmailTemplate","template","handleTemplateChange","handleCopyEmailTemplate","textAreaRef","multiline","rows","defaultValue","ContentCopy","Download","UPDATE_EMAIL_TEMPLATE","emailTemplate","updateEmailTemplate","successMsg","navigator","clipboard","writeText","StepperFooter","steps","handleBack","handleNext","Paper","position","bottom","left","right","zIndex","display","flexDirection","elevation","Button","Box","flex","Home","Stepper","nonLinear","marginLeft","Step","StepButton","Container","paddingBottom","maxWidth","Register","onSubmit","formik","useFormik","initialValues","email","password","confirmPassword","firstName","lastName","company","validate","values","errors","test","touched","handleBlur","handleChange","handleSubmit","isSubmitButtonDisabled","to","UPDATE_USER","updateUser","history","useHistory","headers","EmailCapture","onClose","AppBar","Toolbar","IconButton","edge","Close","Login","useState","isEmailCaptureModalOpen","setIsEmailCaptureModalOpen","handleClose","Dialog","open","Profile","validateFileSelection","pinFileSuccess","fileMetadata","handleFilePinning","file","PasswordReset","useParams","token","ForgotPassword","PrivateRoute","location","useLocation","pathname","NavBar","handleLogout","React","anchorEl","setAnchorEl","handleHomeClick","flexGrow","size","Handshake","currentTarget","AccountCircle","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","Boolean","MenuItem","textDecoration","Routes","alert","loading","handleAlertClose","exact","path","component","HomeContainer","LoginContainer","RegisterContainer","ProfileContainer","ForgotPasswordContainer","PasswordResetContainer","isOpen","Alert","severity","alertType","transform","borderRadius","flexWrap","Backdrop","CircularProgress","rootReducer","combineReducers","action","errorMsg1","errorMsg2","errorMsg","pinned_filename","pinned_file_id","store","createStore","applyMiddleware","logger","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ec757091.chunk.js","sourcesContent":["import React, { useRef } from 'react';\r\nimport { AttachFile } from '@mui/icons-material';\r\nimport {\r\n  Fab,\r\n  Typography,\r\n} from '@mui/material';\r\n\r\ninterface Props {\r\n  validateAndSetFileSelection: any;\r\n  selectedDocument: any;\r\n  index: number;\r\n}\r\n\r\nconst FileSelectionField = ({ selectedDocument, validateAndSetFileSelection, index }: Props) => {\r\n  const inputFileRef: any = useRef( null );\r\n  \r\n  /**\r\n   * Triggers the clicking of the hidden input (type=file) button\r\n   */\r\n   const handleFileSelectionBtnClick = () => {\r\n    /*Collecting node-element and performing click*/\r\n    if (inputFileRef&& inputFileRef.current) {\r\n      inputFileRef.current.click();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Fab\r\n        variant=\"extended\"\r\n        aria-label=\"add\"\r\n        sx={{ margin: '0 auto' }}\r\n        onClick={handleFileSelectionBtnClick}\r\n      >\r\n        <AttachFile sx={{ mr: 1 }} />\r\n        Select File\r\n      </Fab>\r\n      <input\r\n        type=\"file\"\r\n        ref={inputFileRef}\r\n        className=\"file-input\"\r\n        onChange={(event: any) => validateAndSetFileSelection(event, index)}\r\n        name=\"sales_file\"\r\n      />\r\n      <div style={{ height: '2rem', marginTop: '1rem' }}>\r\n        {selectedDocument && selectedDocument.name &&\r\n          <Typography variant=\"subtitle1\">\r\n            {selectedDocument.name}\r\n          </Typography>\r\n        }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default FileSelectionField;","export const UPLOAD_DOCUMENT_SUCCESS = 'UPLOAD_DOCUMENT_SUCCESS';\r\nexport const SELECT_DOCUMENT = 'SELECT_DOCUMENT';\r\nexport const CHANGE_COMPARISON_COLUMN = 'CHANGE_COMPARISON_COLUMN';\r\nexport const CHANGE_RESULT_COLUMNS = 'CHANGE_RESULT_COLUMNS';\r\nexport const PIN_FILE_SUCCESS = 'PIN_FILE_SUCCESS';\r\nexport const SET_FILE_SOURCE = 'SET_FILE_SOURCE';\r\nexport const SET_COMPARISON_COLUMNS_ERROR = 'SET_COMPARISON_COLUMNS_ERROR';\r\nexport const SET_ALL_COLUMNS = 'SET_ALL_COLUMNS';\r\n\r\nexport const uploadDocumentSuccess = (duplicatesData: any) => ({\r\n  type: UPLOAD_DOCUMENT_SUCCESS,\r\n  payload: duplicatesData\r\n});\r\n\r\nexport const selectDocument = (\r\n  document: any,\r\n  index: number,\r\n  name: string\r\n) => {\r\n  return {\r\n    type: SELECT_DOCUMENT,\r\n    payload: document,\r\n    index,\r\n    name,\r\n    columnChooserGridData: document.length > 2 ?\r\n      document.slice(0, 2) :\r\n      document\r\n  };\r\n}\r\n\r\nexport const changeComparisonColumn = (value: Array<string>, index: number) => ({\r\n  type: CHANGE_COMPARISON_COLUMN,\r\n  payload: value,\r\n  index\r\n});\r\n\r\nexport const pinFileSuccess = (fileMetadata: any) => ({\r\n  type: PIN_FILE_SUCCESS,\r\n  payload: fileMetadata\r\n});\r\n\r\nexport const setFileSource = (index: number, value: string) => ({\r\n  type: SET_FILE_SOURCE,\r\n  index,\r\n  payload: value\r\n});\r\n\r\nexport const setComparisonColumnsError = (value: Array<string>, index: number) => {\r\n  return {\r\n    type: SET_COMPARISON_COLUMNS_ERROR,\r\n    payload: value,\r\n    index\r\n  }\r\n}\r\n\r\nexport const setAllColumns = (columns: Array<string>, index: number) => ({\r\n  type: SET_ALL_COLUMNS,\r\n  payload: columns,\r\n  index\r\n});","export const SHOW_ERROR = 'SHOW_ERROR';\r\nexport const HIDE_ERROR = 'HIDE_ERROR';\r\nexport const SHOW_SUCCESS = 'SHOW_SUCCESS';\r\nexport const HIDE_SUCCESS = 'HIDE_SUCCESS';\r\n\r\nexport const showError = (errorMessage: string) => ({\r\n  type: SHOW_ERROR,\r\n  payload: errorMessage\r\n});\r\n\r\nexport const hideError = () => ({\r\n  type: HIDE_ERROR\r\n});\r\n\r\nexport const showSuccess = (successMessage: string) => ({\r\n  type: SHOW_SUCCESS,\r\n  payload: successMessage\r\n});\r\n\r\nexport const hideSuccess = () => ({\r\n  type: HIDE_ERROR\r\n});","export const SET_IS_LOADING = 'SET_IS_LOADING';\r\n\r\nexport const setIsLoading = (isLoading: boolean) => ({\r\n  type: SET_IS_LOADING,\r\n  payload: isLoading\r\n});","const acceptedFileTypes = ['xls', 'xlsx', 'csv'];\r\n\r\nexport const checkIsValidFileType = (fileName: string): boolean => {\r\n  const fileNameArray: Array<string> = fileName.split('.');\r\n  const fileExtension: string = fileNameArray[fileNameArray.length - 1];\r\n  return acceptedFileTypes.includes(fileExtension.toLowerCase());\r\n}","import { WorkSheet, WorkBook, utils, read, writeFile } from 'xlsx';\r\nimport axios from 'axios';\r\n\r\nexport const createJSONFromSpreadsheet = async (document: any) => {\r\n  const data = await document.arrayBuffer();\r\n  const workbook = read(data);\r\n  const sheetName: string = workbook.SheetNames[0];\r\n  const worksheet: WorkSheet | null = workbook && workbook.Sheets ?\r\n    workbook.Sheets[sheetName as any] : null;\r\n\r\n  if (worksheet) {\r\n    return utils.sheet_to_json(worksheet);\r\n  }\r\n  return [];\r\n}\r\n\r\nexport const downloadSpreadsheetFromJSON = async (data: Array<any>) => {\r\n  const worksheetData: Array<Array<any>> = [];\r\n  let columns: Array<string> = [];\r\n  data.forEach((row: any, index: number) => {\r\n    if (index === 0) {\r\n      columns = Array.from(Object.keys(row));\r\n      worksheetData.push(columns);\r\n    }\r\n    const rowArr = columns.map((rowProp: string) => row[rowProp]);\r\n    worksheetData.push(rowArr);\r\n  });\r\n  const worksheet: WorkSheet = utils.aoa_to_sheet(worksheetData);\r\n  const workbook: WorkBook = utils.book_new();\r\n  utils.book_append_sheet(workbook, worksheet, 'Sheet1');\r\n  writeFile(workbook, 'account-mapping.xls');\r\n}\r\n\r\nexport const createFileLink = (data: any, pinnedFileName: string) => {\r\n  const url = window.URL.createObjectURL(new Blob([data]));\r\n  const link = document.createElement('a');\r\n  link.href = url;\r\n  link.setAttribute('download', pinnedFileName);\r\n  document.body.appendChild(link);\r\n  link.click();\r\n}\r\n\r\nexport const getPinnedFile = (pinnedFileId: string) => {\r\n  return axios.get('/api/v1/viewpinnedfile',\r\n    {\r\n      responseType: 'blob',\r\n      params: { pinnedFileId }\r\n    }\r\n  );\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport FileSelectionField from '../../components/file-selection-field';\r\nimport { selectDocument } from '../../state/actions/document';\r\nimport { showError, hideError } from '../../state/actions/alert';\r\nimport { setIsLoading } from '../../state/actions/loading';\r\nimport { checkIsValidFileType } from '../../utils/validate-file-type';\r\nimport { createJSONFromSpreadsheet } from '../../utils/spreadsheet.utils';\r\n\r\ninterface Props {\r\n  selectedDocument: any;\r\n  showError: any;\r\n  hideError: any;\r\n  setIsLoading: any;\r\n  selectDocument: any;\r\n  index: number;\r\n}\r\n\r\nconst FileSelectionFieldContainer = ({\r\n  selectedDocument,\r\n  showError,\r\n  hideError,\r\n  setIsLoading,\r\n  selectDocument,\r\n  index\r\n}: Props) => {\r\n\r\n  /**\r\n   * When the user selects a document, validate the file type\r\n   * @param event \r\n   */\r\n   const validateAndSetFileSelection = async (event: any, index: number) => {\r\n    setIsLoading(true);\r\n    const document: any = event && event.target && event.target.files ?\r\n      event.target.files[0] :\r\n      null;\r\n    const isValidDocType: boolean = document && document.name ?\r\n      checkIsValidFileType(document.name) : false;\r\n\r\n    if (isValidDocType) {\r\n      hideError();\r\n      const wsDataObj: Array<any> = await createJSONFromSpreadsheet(document);\r\n      selectDocument(wsDataObj, index, document.name);\r\n      setIsLoading(false);\r\n    } else {\r\n      showError('Invalid file type. Only .xls, .xlsx, or .csv files can be processed.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FileSelectionField\r\n      selectedDocument={selectedDocument}\r\n      validateAndSetFileSelection={validateAndSetFileSelection}\r\n      index={index}\r\n    />\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  showError: (message: string) => dispatch(showError(message)),\r\n  hideError: () => dispatch(hideError()),\r\n  setIsLoading: (isLoading: boolean) => dispatch(setIsLoading(isLoading)),\r\n  selectDocument: (wsDataObj: any, index: number, filename: string) => dispatch(selectDocument(wsDataObj, index, filename)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(FileSelectionFieldContainer);","import React from 'react';\r\nimport {\r\n  Typography,\r\n  Chip,\r\n} from '@mui/material';\r\nimport { Attachment } from '@mui/icons-material';\r\nimport { UserState } from '../../state/reducers/user';\r\n\r\ninterface Props {\r\n  user: UserState;\r\n  handlePinnedFileClick: any;\r\n}\r\n\r\nconst PinnedFileChip = ({ user, handlePinnedFileClick }: Props) => {\r\n  return (\r\n    <>\r\n      <Typography variant=\"subtitle1\">Pinned File:</Typography>\r\n      <Chip onClick={handlePinnedFileClick} icon={<Attachment />} label={user.pinnedFileName} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PinnedFileChip;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PinnedFileChip from '../../components/pinned-file-chip';\r\nimport { hideError, showError } from '../../state/actions/alert';\r\nimport { UserState } from '../../state/reducers/user';\r\nimport { createFileLink, getPinnedFile } from '../../utils/spreadsheet.utils';\r\n\r\ninterface Props {\r\n  user: UserState;\r\n  showError: any;\r\n  hideError: any;\r\n}\r\n\r\nconst PinnedFileChipContainer = ({ user, showError, hideError }: Props) => {\r\n  const handlePinnedFileClick = async () => {\r\n    try {\r\n      const pinnedFileData = await getPinnedFile(user.pinnedFileId);\r\n      createFileLink(pinnedFileData.data, user.pinnedFileName);\r\n    } catch (err: any) {\r\n      console.log('err', err);\r\n      showError('Failed to download pinned file.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PinnedFileChip user={user} handlePinnedFileClick={handlePinnedFileClick} />\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  user: state.user,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  showError: (message: string) => dispatch(showError(message)),\r\n  hideError: () => dispatch(hideError()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PinnedFileChipContainer);","import React from 'react';\r\nimport {\r\n  FormControlLabel,\r\n  FormControl,\r\n  Radio,\r\n  RadioGroup\r\n} from '@mui/material';\r\n\r\ninterface Props {\r\n  fileSource: string;\r\n  handleFileTypeChange: any;\r\n  index: number;\r\n}\r\n\r\nconst FileSourceRadio = ({ fileSource, handleFileTypeChange, index }: Props) => {\r\n  return (\r\n    <FormControl>\r\n      <RadioGroup\r\n        aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n        name=\"controlled-radio-buttons-group\"\r\n        value={fileSource}\r\n        onChange={(event: any) => handleFileTypeChange(event, index)}\r\n        sx={{ marginBottom: '1rem' }}\r\n      >\r\n        <FormControlLabel value=\"upload\" control={<Radio />} label=\"Upload a file\" />\r\n        <FormControlLabel value=\"pinned\" control={<Radio />} label=\"Use your pinned file\" />\r\n      </RadioGroup>\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nexport default FileSourceRadio;","import React from 'react';\r\nimport FileSourceRadio from '../../components/file-source-radio';\r\nimport { connect } from 'react-redux';\r\nimport { selectDocument, setFileSource } from '../../state/actions/document';\r\nimport { showError, hideError } from '../../state/actions/alert';\r\nimport { setIsLoading } from '../../state/actions/loading';\r\nimport { createJSONFromSpreadsheet, getPinnedFile } from '../../utils/spreadsheet.utils';\r\nimport { UserState } from '../../state/reducers/user';\r\n\r\ninterface Props {\r\n  showError: any;\r\n  hideError: any;\r\n  setIsLoading: any;\r\n  selectDocument: any;\r\n  setFileSource: any;\r\n  fileSource: string;\r\n  user: UserState;\r\n  index: number;\r\n}\r\n\r\nconst FileSourceRadioContainer = ({\r\n  showError,\r\n  hideError,\r\n  setIsLoading,\r\n  selectDocument,\r\n  setFileSource,\r\n  fileSource,\r\n  user,\r\n  index\r\n}: Props) => {\r\n\r\n  const handleFileTypeChange = async (event: any, index: number) => {\r\n    setFileSource(index, event.target.value);\r\n    if (event.target.value === 'pinned') {\r\n      setIsLoading(true);\r\n      try {\r\n        const pinnedFileBlob = await getPinnedFile(user.pinnedFileId);\r\n        const wsDataObj: Array<any> = await createJSONFromSpreadsheet(pinnedFileBlob.data);\r\n        selectDocument(wsDataObj, index, user.pinnedFileId);\r\n        hideError();\r\n        setIsLoading(false);\r\n      } catch (err: any) {\r\n        console.log('err', err);\r\n        showError('Failed to get pinned file for user.');\r\n        setIsLoading(false);\r\n        setTimeout(() => {\r\n          hideError();\r\n        }, 5000);\r\n      }\r\n    } else {\r\n      selectDocument([], index, '');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <FileSourceRadio\r\n      handleFileTypeChange={handleFileTypeChange}\r\n      fileSource={fileSource}\r\n      index={index}\r\n    />\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  user: state.user\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  showError: (message: string) => dispatch(showError(message)),\r\n  hideError: () => dispatch(hideError()),\r\n  setIsLoading: (isLoading: boolean) => dispatch(setIsLoading(isLoading)),\r\n  selectDocument: (wsDataObj: any, index: number, filename: string) => dispatch(selectDocument(wsDataObj, index, filename)),\r\n  setFileSource: (index: number, event: any) => dispatch(setFileSource(index, event))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FileSourceRadioContainer);","export const updateComparisonColumns = (comparisonColumns: Array<string>, updatedCol: string) => {\r\n  let newValue: Array<string> = [];\r\n  const indexOfCol = comparisonColumns.indexOf(updatedCol);\r\n  if (indexOfCol === -1) {\r\n    newValue = [...comparisonColumns, updatedCol];\r\n  } else {\r\n    newValue = [...comparisonColumns];\r\n    newValue.splice(indexOfCol, 1);\r\n  }\r\n  return newValue;\r\n}\r\n\r\nexport const addMessageToErrorList = (\r\n  errorList: Array<string>,\r\n  errorMessage: string,\r\n) => {\r\n  const errMsgIndex = errorList.indexOf(errorMessage);\r\n  if (errMsgIndex === -1) errorList.push(errorMessage);\r\n}\r\n\r\nexport const removeMessageFromErrorList = (\r\n  errorList: Array<string>,\r\n  errorMessage: string,\r\n) => {\r\n  const errMsgIndex = errorList.indexOf(errorMessage);\r\n  if (errMsgIndex > -1) errorList.splice(errMsgIndex, 1);\r\n}","import {\r\n  UPLOAD_DOCUMENT_SUCCESS,\r\n  SELECT_DOCUMENT,\r\n  CHANGE_COMPARISON_COLUMN,\r\n  SET_FILE_SOURCE,\r\n  SET_COMPARISON_COLUMNS_ERROR,\r\n  SET_ALL_COLUMNS\r\n} from '../../actions/document';\r\nimport { addMessageToErrorList, removeMessageFromErrorList } from '../../../utils/update-comparison-columns';\r\n\r\ninterface SelectedDocument {\r\n  data: Array<any>;\r\n  name: string;\r\n  allColumns: Array<string>;\r\n  columnChooserGridData: Array<any>;\r\n}\r\n\r\nexport interface DocumentState {\r\n  duplicatesData: Array<any>;\r\n  selectedDocument1: SelectedDocument;\r\n  selectedDocument2: SelectedDocument;\r\n  comparisonColumns1: Array<string>;\r\n  comparisonColumns2: Array<string>;\r\n  fileSource1: string;\r\n  fileSource2: string;\r\n  comparisonColumns1Error: Array<string>;\r\n  comparisonColumns2Error: Array<string>;\r\n}\r\n\r\nconst initialState: DocumentState = {\r\n  duplicatesData: [],\r\n  selectedDocument1: {\r\n    data: [],\r\n    name: '',\r\n    allColumns: [],\r\n    columnChooserGridData: []\r\n  },\r\n  selectedDocument2: {\r\n    data: [],\r\n    name: '',\r\n    allColumns: [],\r\n    columnChooserGridData: []\r\n  },\r\n  comparisonColumns1: [],\r\n  comparisonColumns2: [],\r\n  fileSource1: 'upload',\r\n  fileSource2: 'upload',\r\n  comparisonColumns1Error: [],\r\n  comparisonColumns2Error: [],\r\n};\r\n\r\nexport const COMPARISON_COLUMNS_LIMIT: number = 5;\r\nexport const MISMATCHED_COLUMNS_ERR: string = 'The number of selected columns for each file needs to match.';\r\nexport const TOO_MANY_COLUMNS_ERR: string = `Limit of ${COMPARISON_COLUMNS_LIMIT} columns exceeded.`;\r\nexport const REQUIRED_ERR: string = 'At least 1 column is required';\r\n\r\nexport const documentReducer = (state = initialState, action: any) => {\r\n  switch (action.type) {\r\n    case CHANGE_COMPARISON_COLUMN:\r\n      const { payload, index } = action;\r\n      let errorMsg1 = [...state.comparisonColumns1Error];\r\n      let errorMsg2 = [...state.comparisonColumns2Error];\r\n\r\n      if (\r\n        (index === 0 && !!state.comparisonColumns2.length && payload.length !== state.comparisonColumns2.length) ||\r\n        (index === 1 && !!state.comparisonColumns1.length && payload.length !== state.comparisonColumns1.length)\r\n      ) {\r\n        addMessageToErrorList(errorMsg1, MISMATCHED_COLUMNS_ERR);\r\n        addMessageToErrorList(errorMsg2, MISMATCHED_COLUMNS_ERR);\r\n      } else if (\r\n        (index === 0 && payload.length === state.comparisonColumns2.length) ||\r\n        (index === 1 && payload.length === state.comparisonColumns1.length)\r\n      ) {\r\n        removeMessageFromErrorList(errorMsg1, MISMATCHED_COLUMNS_ERR);\r\n        removeMessageFromErrorList(errorMsg2, MISMATCHED_COLUMNS_ERR);\r\n      }\r\n      if (index === 0) {\r\n        if (payload.length > COMPARISON_COLUMNS_LIMIT) {\r\n          addMessageToErrorList(errorMsg1, TOO_MANY_COLUMNS_ERR);\r\n        } else {\r\n          removeMessageFromErrorList(errorMsg1, TOO_MANY_COLUMNS_ERR);\r\n        }\r\n        if (payload.length === 0) {\r\n          addMessageToErrorList(errorMsg1, REQUIRED_ERR);\r\n        } else {\r\n          removeMessageFromErrorList(errorMsg1, REQUIRED_ERR);\r\n        }\r\n      } else if (index === 1) {\r\n        if (payload.length > COMPARISON_COLUMNS_LIMIT) {\r\n          addMessageToErrorList(errorMsg2, TOO_MANY_COLUMNS_ERR);\r\n        } else {\r\n          removeMessageFromErrorList(errorMsg2, TOO_MANY_COLUMNS_ERR);\r\n        }\r\n        if (payload.length === 0) {\r\n          addMessageToErrorList(errorMsg2, REQUIRED_ERR);\r\n        } else {\r\n          removeMessageFromErrorList(errorMsg2, REQUIRED_ERR);\r\n        }\r\n      }\r\n\r\n      if (action.index === 0) {\r\n        return {\r\n          ...state,\r\n          comparisonColumns1: action.payload,\r\n          comparisonColumns1Error: errorMsg1,\r\n          comparisonColumns2Error: errorMsg2\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          comparisonColumns2: action.payload,\r\n          comparisonColumns1Error: errorMsg1,\r\n          comparisonColumns2Error: errorMsg2\r\n        };\r\n      }\r\n    case SET_COMPARISON_COLUMNS_ERROR:\r\n      const errorMsg = action.index === 0 ? [...state.comparisonColumns1Error] : [...state.comparisonColumns2Error];\r\n      if (action.payload.length === 0) {\r\n        addMessageToErrorList(errorMsg, REQUIRED_ERR);\r\n      }\r\n      if (action.index === 0) {\r\n        return {\r\n          ...state,\r\n          comparisonColumns1Error: errorMsg\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          comparisonColumns2Error: errorMsg\r\n        }\r\n      }\r\n    case SELECT_DOCUMENT:\r\n      if (action.index === 0) {\r\n        return {\r\n          ...state,\r\n          selectedDocument1: {\r\n            data: action.payload,\r\n            name: action.name,\r\n            columnChooserGridData: action.columnChooserGridData\r\n          }\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          selectedDocument2: {\r\n            data: action.payload,\r\n            name: action.name,\r\n            columnChooserGridData: action.columnChooserGridData\r\n          }\r\n        };\r\n      }\r\n    case SET_ALL_COLUMNS:\r\n      if (action.index === 0) {\r\n        return {\r\n          ...state,\r\n          selectedDocument1: {\r\n            ...state.selectedDocument1,\r\n            allColumns: action.payload\r\n          }\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          selectedDocument2: {\r\n            ...state.selectedDocument2,\r\n            allColumns: action.payload\r\n          }\r\n        };\r\n      }\r\n    case SET_FILE_SOURCE:\r\n      if (action.index === 0) {\r\n        return {\r\n          ...state,\r\n          fileSource1: action.payload\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          fileSource2: action.payload\r\n        };\r\n      }\r\n    case UPLOAD_DOCUMENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        duplicatesData: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}","import React from 'react';\r\nimport { TextField, Autocomplete, Typography, Checkbox } from '@mui/material';\r\nimport { CheckBoxOutlineBlank, CheckBox } from '@mui/icons-material';\r\nimport { COMPARISON_COLUMNS_LIMIT } from '../../state/reducers/document';\r\n\r\ninterface Props {\r\n  selectedDocument: any;\r\n  comparisonColumns: Array<string>;\r\n  comparisonColumnsError: Array<string>;\r\n  handleComparisonColumnsBlur: any;\r\n  handleComparisonColumnFieldChange: any;\r\n  index: number;\r\n}\r\n\r\nconst icon = <CheckBoxOutlineBlank fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBox fontSize=\"small\" />;\r\n\r\nconst ComparisonColumnAutocomplete = ({\r\n  selectedDocument,\r\n  comparisonColumns,\r\n  comparisonColumnsError,\r\n  handleComparisonColumnsBlur,\r\n  handleComparisonColumnFieldChange,\r\n  index\r\n}: Props) => {\r\n  const autocompleteOptions: Array<string> = selectedDocument && selectedDocument.data && selectedDocument.data[0] ?\r\n    Array.from(Object.keys(selectedDocument.data[0])) :\r\n    [];\r\n\r\n  return (\r\n    <>\r\n      <Autocomplete\r\n        multiple={true}\r\n        disableCloseOnSelect={true}\r\n        options={autocompleteOptions}\r\n        onChange={handleComparisonColumnFieldChange}\r\n        value={comparisonColumns}\r\n        sx={{ width: '100%', margin: '2.5rem 0 1.5rem 0' }}\r\n        renderOption={(props, option, { selected }) => (\r\n          <li {...props}>\r\n            <Checkbox\r\n              icon={icon}\r\n              checkedIcon={checkedIcon}\r\n              style={{ marginRight: 8 }}\r\n              checked={selected}\r\n            />\r\n            {option}\r\n          </li>\r\n        )}\r\n        renderInput={(params: any) => (<TextField\r\n          {...params}\r\n          variant=\"standard\"\r\n          required={true}\r\n          error={!!comparisonColumnsError.length}\r\n          onBlur={handleComparisonColumnsBlur}\r\n          helperText={`Columns from file ${index === 0 ? 'A' : 'B'} that will be compared with columns\r\n          from file ${index === 0 ? 'B' : 'A'} to determine match. Limit: ${COMPARISON_COLUMNS_LIMIT} columns. Hint: the more unique a column's value is\r\n          to a company, the better (DUNS number, company website, etc.).`}\r\n        />)}\r\n      />\r\n      {!!comparisonColumnsError.length && <Typography variant=\"caption\" sx={{ color: '#d32f2f' }}>{comparisonColumnsError.join('\\n')}</Typography>}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ComparisonColumnAutocomplete;","import React from 'react';\r\nimport ComparisonColumnAutocomplete from '../../components/comparison-column-autocomplete';\r\nimport { connect } from 'react-redux';\r\nimport { changeComparisonColumn, setComparisonColumnsError } from '../../state/actions/document';\r\n\r\ninterface Props {\r\n  selectedDocument: any;\r\n  comparisonColumns: Array<string>;\r\n  changeComparisonColumn: any;\r\n  comparisonColumnsError: Array<string>;\r\n  setComparisonColumnsError: any;\r\n  index: number;\r\n}\r\n\r\nconst ComparisonColumnAutocompleteContainer = ({\r\n  selectedDocument,\r\n  comparisonColumns,\r\n  changeComparisonColumn,\r\n  comparisonColumnsError,\r\n  setComparisonColumnsError,\r\n  index\r\n}: Props) => {\r\n  const handleComparisonColumnFieldChange = (_: any, newValue: Array<string>) => {\r\n    changeComparisonColumn(newValue, index);\r\n    // setComparisonColumnsError(newValue, index)\r\n  };\r\n\r\n  const handleComparisonColumnsBlur = () => {\r\n    setComparisonColumnsError(comparisonColumns, index)\r\n  };\r\n\r\n  return (\r\n    <ComparisonColumnAutocomplete\r\n      selectedDocument={selectedDocument}\r\n      comparisonColumns={comparisonColumns}\r\n      comparisonColumnsError={comparisonColumnsError}\r\n      handleComparisonColumnsBlur={handleComparisonColumnsBlur}\r\n      handleComparisonColumnFieldChange={handleComparisonColumnFieldChange}\r\n      index={index}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  changeComparisonColumn: (newValue: Array<string>, index: number) => dispatch(changeComparisonColumn(newValue, index)),\r\n  setComparisonColumnsError: (newValue: Array<string>, index: number) => dispatch(setComparisonColumnsError(newValue, index))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ComparisonColumnAutocompleteContainer);","import React from 'react';\r\nimport { Typography } from '@mui/material';\r\nimport { UserState } from '../../state/reducers/user';\r\nimport FileSelectionFieldContainer from '../../containers/file-selection-field';\r\nimport PinnedFileChipContainer from '../../containers/pinned-file-chip';\r\nimport FileSourceRadioContainer from '../../containers/file-source-radio';\r\nimport ComparisonColumnAutocompleteContainer from '../../containers/comparison-column-autocomplete';\r\n\r\ninterface UploadDocumentColumnProps {\r\n  selectedDocument: any;\r\n  comparisonColumns: Array<string>;\r\n  comparisonColumnsError: Array<string>;\r\n  fileSource: string;\r\n  index: number;\r\n  user: UserState;\r\n}\r\n\r\nconst UploadDocumentColumn = ({\r\n  selectedDocument,\r\n  comparisonColumns,\r\n  comparisonColumnsError,\r\n  fileSource,\r\n  index,\r\n  user,\r\n}: UploadDocumentColumnProps) => {\r\n  return (\r\n    <>\r\n      <Typography variant='h6' sx={{ marginTop: '2rem', marginBottom: '1rem' }}>\r\n        {index === 0 ? 'My accounts' : 'Partner\\'s accounts'}\r\n      </Typography>\r\n      {!!user.pinnedFileName && index === 0 && <FileSourceRadioContainer\r\n        fileSource={fileSource}\r\n        index={index}\r\n      />}\r\n      <div style={{ height: '80px' }}>\r\n        {fileSource === 'upload' ?\r\n          <FileSelectionFieldContainer selectedDocument={selectedDocument} index={index} /> :\r\n          <PinnedFileChipContainer />\r\n        }\r\n      </div>\r\n      <ComparisonColumnAutocompleteContainer\r\n        selectedDocument={selectedDocument}\r\n        comparisonColumns={comparisonColumns}\r\n        comparisonColumnsError={comparisonColumnsError}\r\n        index={index}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UploadDocumentColumn;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { UserState } from '../../state/reducers/user';\r\nimport UploadDocumentColumn from '../../components/upload-document-column';\r\n\r\ninterface Props {\r\n  user: UserState;\r\n  selectedDocument: any;\r\n  comparisonColumns: Array<string>;\r\n  comparisonColumnsError: Array<string>;\r\n  fileSource: string;\r\n  index: number;\r\n}\r\n\r\nconst UploadDocumentColumnContainer = ({\r\n  user,\r\n  selectedDocument,\r\n  comparisonColumns,\r\n  comparisonColumnsError,\r\n  fileSource,\r\n  index\r\n}: Props) => {\r\n  return (\r\n    <UploadDocumentColumn\r\n      selectedDocument={selectedDocument}\r\n      comparisonColumns={comparisonColumns}\r\n      comparisonColumnsError={comparisonColumnsError}\r\n      fileSource={fileSource}\r\n      user={user}\r\n      index={index}\r\n    />\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  user: state.user\r\n});\r\n\r\nexport default connect(mapStateToProps)(UploadDocumentColumnContainer);","import React, { useRef, useEffect } from 'react';\r\nimport UploadDocumentColumnContainer from '../../containers/upload-document-column';\r\nimport DataGrid, { Paging, Pager, Column } from 'devextreme-react/data-grid';\r\nimport { Grid, Fab, Typography, Checkbox } from '@mui/material';\r\nimport { Upload } from '@mui/icons-material';\r\nimport { DocumentState } from '../../state/reducers/document';\r\n\r\ninterface UploadDocumentFormProps {\r\n  document: DocumentState;\r\n  setAllColumns: any;\r\n  handleColumnClick: any;\r\n  handleUploadAndCompare: any;\r\n}\r\n\r\nconst renderGridCell = (\r\n  data: any,\r\n  handleColumnClick: any,\r\n  comparisonColumns: Array<string>,\r\n  index: number\r\n) => {\r\n  return (\r\n    <div>\r\n      {data.column? data.column.dataField : data}\r\n      <Checkbox\r\n        onClick={() => {\r\n          handleColumnClick(data, index)\r\n        }}\r\n        checked={comparisonColumns.indexOf(data) > -1}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst UploadDocumentForm = ({\r\n  document,\r\n  setAllColumns,\r\n  handleColumnClick,\r\n  handleUploadAndCompare\r\n}: UploadDocumentFormProps): any => {\r\n  const dataGrid1 = useRef<any>(null);\r\n  const dataGrid2 = useRef<any>(null);\r\n\r\n  const {\r\n    selectedDocument1,\r\n    selectedDocument2,\r\n    comparisonColumns1,\r\n    comparisonColumns2,\r\n    comparisonColumns1Error,\r\n    comparisonColumns2Error,\r\n    fileSource1,\r\n    fileSource2\r\n  } = document;\r\n\r\n  useEffect(() => {\r\n    if (selectedDocument1.data && selectedDocument1.data[0]) {\r\n      setAllColumns(Array.from(Object.keys(selectedDocument1.data[0])), 0);\r\n    }\r\n    if (selectedDocument2.data && selectedDocument2.data[0]) {\r\n      setAllColumns(Array.from(Object.keys(selectedDocument2.data[0])), 1);\r\n    }\r\n  }, [selectedDocument1.data, selectedDocument2.data, setAllColumns]);\r\n\r\n  /* Validation for whether the Submit button should be enabled or disabled. If documents\r\n  and columns haven't been selected, the button should be disabled. */\r\n  const isSubmitBtnEnabled: boolean = selectedDocument1 && selectedDocument2 &&\r\n    !!comparisonColumns1.length && !!comparisonColumns2.length &&\r\n    !comparisonColumns1Error.length && !comparisonColumns2Error.length;\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        spacing={2}\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"start\"\r\n      >\r\n        <Grid\r\n          item\r\n          container\r\n          xs={8}\r\n          p={0}\r\n          sx={{ height: '100%' }}\r\n          direction=\"column\"\r\n          justifyContent=\"start\"\r\n          alignItems=\"center\"\r\n        >\r\n          <UploadDocumentColumnContainer\r\n            comparisonColumns={comparisonColumns1}\r\n            comparisonColumnsError={comparisonColumns1Error}\r\n            selectedDocument={selectedDocument1}\r\n            fileSource={fileSource1}\r\n            index={0}\r\n          />\r\n          <div style={{ width: '100%'}}>\r\n            <Typography variant=\"subtitle1\" sx={{ margin: '2.5rem 0 0 0'}}>\r\n              This grid helps visualize the file that was uploaded with 2 example rows. Columns for comparison can be selected by clicking the column headers.\r\n            </Typography>\r\n            <DataGrid\r\n              id=\"gridContainer\"\r\n              dataSource={selectedDocument1.columnChooserGridData}\r\n              allowColumnReordering={true}\r\n              allowColumnResizing={true}\r\n              columnAutoWidth={true}\r\n              showBorders={true}\r\n              ref={dataGrid1}\r\n            >\r\n              {selectedDocument1.allColumns ? selectedDocument1.allColumns.map((colProps: any, colIdx: number) => {\r\n                return (\r\n                  <Column\r\n                    dataField={colProps}\r\n                    key={`col-${colIdx}-0`}\r\n                    headerCellRender={() => renderGridCell(colProps, handleColumnClick, comparisonColumns1, 0)}\r\n                  />\r\n                );\r\n              }) : []}\r\n              <Paging defaultPageSize={2} />\r\n              <Pager\r\n                visible={true}\r\n                displayMode={\"full\"}\r\n                showPageSizeSelector={false}\r\n                showInfo={true}\r\n                showNavigationButtons={true}\r\n              />\r\n            </DataGrid>\r\n          </div>\r\n          <UploadDocumentColumnContainer\r\n            comparisonColumns={comparisonColumns2}\r\n            comparisonColumnsError={comparisonColumns2Error}\r\n            selectedDocument={selectedDocument2}\r\n            fileSource={fileSource2}\r\n            index={1}\r\n          />\r\n          <div style={{ width: '100%'}}>\r\n            <Typography variant=\"subtitle1\" sx={{ margin: '2.5rem 0 0 0'}}>\r\n              This grid helps visualize the file that was uploaded with 2 example rows. Columns for comparison can be selected by clicking the column headers.\r\n            </Typography>\r\n            <DataGrid\r\n              id=\"gridContainer\"\r\n              dataSource={selectedDocument2.columnChooserGridData}\r\n              allowColumnReordering={true}\r\n              allowColumnResizing={true}\r\n              columnAutoWidth={true}\r\n              showBorders={true}\r\n              ref={dataGrid2}\r\n            >\r\n              {selectedDocument2.allColumns ? selectedDocument2.allColumns.map((colProps: any, colIdx: number) => {\r\n                return (\r\n                  <Column\r\n                    dataField={colProps}\r\n                    key={`col-${colIdx}-1`}\r\n                    headerCellRender={() => renderGridCell(colProps, handleColumnClick, comparisonColumns2, 1)}\r\n                  />\r\n                );\r\n              }) : []}\r\n              <Paging defaultPageSize={2} />\r\n              <Pager\r\n                visible={true}\r\n                displayMode={\"full\"}\r\n                showPageSizeSelector={false}\r\n                showInfo={true}\r\n                showNavigationButtons={true}\r\n              />\r\n            </DataGrid>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid\r\n        container\r\n        justifyContent=\"space-around\"\r\n        alignItems=\"center\"\r\n        sx={{ marginBottom: '4.5rem' }}\r\n      >\r\n        <Grid\r\n          item\r\n          container\r\n          xs={4}\r\n          direction=\"column\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Fab\r\n            variant=\"extended\"\r\n            color=\"primary\"\r\n            aria-label=\"add\"\r\n            sx={{ marginTop: '2rem' }}\r\n            disabled={!isSubmitBtnEnabled}\r\n            onClick={handleUploadAndCompare}\r\n          >\r\n            <Upload sx={{ mr: 1 }} />\r\n            Upload and Compare\r\n          </Fab>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UploadDocumentForm;","export const CHANGE_STEP = 'CHANGE_STEP';\r\n\r\nexport const changeStep = (newStep: number) => ({\r\n  type: CHANGE_STEP,\r\n  payload: newStep\r\n});","import React from 'react';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport UploadDocumentForm from '../../components/upload-document-form';\r\nimport { DocumentState } from '../../state/reducers/document';\r\nimport { uploadDocumentSuccess, setAllColumns, changeComparisonColumn } from '../../state/actions/document';\r\nimport { changeStep } from '../../state/actions/step-progress';\r\nimport { showError, hideError } from '../../state/actions/alert';\r\nimport { setIsLoading } from '../../state/actions/loading';\r\nimport { updateComparisonColumns } from '../../utils/update-comparison-columns';\r\n\r\ninterface Props {\r\n  activeStep: number;\r\n  document: DocumentState;\r\n  showError: any;\r\n  hideError: any;\r\n  uploadDocumentSuccess: any;\r\n  setIsLoading: any;\r\n  changeStep: any;\r\n  setAllColumns: any;\r\n  changeComparisonColumn: any;\r\n}\r\n\r\nconst UploadDocumentFormContainer = ({\r\n  activeStep,\r\n  document,\r\n  showError,\r\n  hideError,\r\n  uploadDocumentSuccess,\r\n  setIsLoading,\r\n  changeStep,\r\n  setAllColumns,\r\n  changeComparisonColumn\r\n}: Props) => {\r\n  /**\r\n   * When the user selects a column (by clicking a checkbox next to the column name in the data grid\r\n   * or using the autocomplete), this function updates the array of column names\r\n   * @param col Column in the selected file. Is represented in the DataGrid and\r\n   * can be selected by clicking the checkbox next to the column name\r\n   * @param index Number that indicates which file is the user selecting columns for\r\n   */\r\n  const handleColumnClick = (col: any, index: number) => {\r\n    const { comparisonColumns1, comparisonColumns2 } = document;\r\n    let newValue: Array<string> = [];\r\n    if (index === 0) {\r\n      newValue = updateComparisonColumns(comparisonColumns1, col);\r\n    } else {\r\n      newValue = updateComparisonColumns(comparisonColumns2, col);\r\n    }\r\n\r\n    changeComparisonColumn(newValue, index);\r\n  };\r\n\r\n  /**\r\n   * Puts the selected file and column name into a FormData instance,\r\n   * sends it to the server, and then changes to the next step where\r\n   * the duplicates will be displayed\r\n   */\r\n  const handleUploadAndCompare = () => {\r\n    const { selectedDocument1, selectedDocument2, comparisonColumns1, comparisonColumns2 } = document;\r\n    setIsLoading(true);\r\n    const formData = new FormData();\r\n    if (selectedDocument1 && selectedDocument1.name) {\r\n      const docBlob1 = new Blob([JSON.stringify(selectedDocument1.data)], { type: 'application/json' });\r\n      formData.append(\"sales_file1\", docBlob1, selectedDocument1.name);\r\n    }\r\n\r\n    if (selectedDocument2 && selectedDocument2.name) {\r\n      const docBlob2 = new Blob([JSON.stringify(selectedDocument2.data)], { type: 'application/json' });\r\n      formData.append(\"sales_file2\", docBlob2, selectedDocument2.name);\r\n    }\r\n\r\n    formData.append('comparisonColumns1', comparisonColumns1.join());\r\n    formData.append('comparisonColumns2', comparisonColumns2.join());\r\n\r\n    axios.post('/api/v1/uploadfile', formData)\r\n      .then((res: any) => {\r\n        hideError();\r\n        uploadDocumentSuccess(res.data);\r\n        setIsLoading(false);\r\n        changeStep(activeStep += 1);\r\n      })\r\n      .catch((err: any) => {\r\n        console.log('err', err);\r\n        setIsLoading(false);\r\n        showError('File upload and comparison failed.');\r\n        setTimeout(() => {\r\n          hideError();\r\n        }, 5000)\r\n      });\r\n  };\r\n\r\n  return (\r\n    <UploadDocumentForm\r\n      document={document}\r\n      setAllColumns={setAllColumns}\r\n      handleColumnClick={handleColumnClick}\r\n      handleUploadAndCompare={handleUploadAndCompare}\r\n    />\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  activeStep: state.stepProgress.step,\r\n  document: state.document\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  showError: (message: string) => dispatch(showError(message)),\r\n  hideError: () => dispatch(hideError()),\r\n  uploadDocumentSuccess: (data: any) => dispatch(uploadDocumentSuccess(data)),\r\n  setIsLoading: (isLoading: boolean) => dispatch(setIsLoading(isLoading)),\r\n  changeStep: (activeStep: number) => dispatch(changeStep(activeStep)),\r\n  setAllColumns: (columns: Array<string>, index: number) => dispatch(setAllColumns(columns, index)),\r\n  changeComparisonColumn: (newValue: Array<string>, index: number) => dispatch(changeComparisonColumn(newValue, index)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UploadDocumentFormContainer);","import React, { useCallback } from 'react';\r\nimport DataGrid, { Paging, Pager, Column, ColumnChooser } from 'devextreme-react/data-grid';\r\nimport { Grid } from '@mui/material';\r\nimport { UserState } from '../../state/reducers/user';\r\n\r\ninterface Props {\r\n  duplicatesData: Array<any>;\r\n  comparisonColumns1: Array<string>;\r\n  comparisonColumns2: Array<string>;\r\n  user: UserState;\r\n}\r\n\r\nconst DuplicatesTable = ({\r\n  duplicatesData,\r\n  comparisonColumns1,\r\n  comparisonColumns2,\r\n  user\r\n}: Props) => {\r\n  const customizeColumns = useCallback((columns) => {\r\n    columns.push({\r\n        caption: \"My accounts\",\r\n        isBand: true,\r\n        cssClass: 'my-accounts'\r\n    });\r\n    columns.push({\r\n      caption: \"Partner's accounts\",\r\n      isBand: true,\r\n      cssClass: 'their-accounts'\r\n    });\r\n    const comparisonColumns = [...comparisonColumns1, ...comparisonColumns2];\r\n\r\n    for (let i = 3; i < columns.length - 1; i++) {\r\n      if (comparisonColumns[i - 3] === columns[i].caption && i < comparisonColumns1.length + 3) {\r\n        columns[i].ownerBand = columns.length - 2;\r\n        columns[i].cssClass = 'my-accounts'\r\n      } else if (comparisonColumns[i - 3] === columns[i].caption) {\r\n        columns[i].ownerBand = columns.length - 1;\r\n        columns[i].cssClass = 'their-accounts'\r\n      }\r\n    }\r\n  }, [comparisonColumns1, comparisonColumns2]);\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      sx={{ height: '100%', margin: '3.5rem 0 4.5rem 0', padding: '0 1rem' }}\r\n    >\r\n      <Grid\r\n        item\r\n        container\r\n        xs={12}\r\n        md={12}\r\n        p={0}\r\n        sx={{ height: '100%', width: '100%' }}\r\n        direction=\"column\"\r\n        justifyContent=\"start\"\r\n        alignItems=\"center\"\r\n      >\r\n        <DataGrid\r\n          id=\"gridContainer\"\r\n          dataSource={duplicatesData}\r\n          customizeColumns={customizeColumns}\r\n          showColumnLines={true}\r\n          allowColumnReordering={true}\r\n          allowColumnResizing={true}\r\n          columnAutoWidth={true}\r\n          showBorders={true}\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          rowAlternationEnabled={true}\r\n        >\r\n          <ColumnChooser mode=\"select\" enabled={true} allowSearch={true} />\r\n          <Column dataField=\"precision\" groupIndex={0} sortOrder=\"desc\" name=\"Precision of match\" visible={false} />\r\n          <Column fixed={true} fixedPosition=\"left\" width={150} calculateCellValue={() => `${user.firstname} ${user.lastname}`} caption=\"Current User\" />\r\n          {duplicatesData && duplicatesData[0] && Array.from(Object.keys(duplicatesData[0]))\r\n            .map((colName: string, colIndex: number) => (\r\n              <Column dataField={colName} key={colIndex} caption={colName.replace('--2', '')} visible={colIndex !== 0} />\r\n            ))}\r\n          <Paging defaultPageSize={25} />\r\n          <Pager\r\n            visible={true}\r\n            displayMode={\"full\"}\r\n            showPageSizeSelector={false}\r\n            showInfo={true}\r\n            showNavigationButtons={true}\r\n          />\r\n        </DataGrid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default DuplicatesTable;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport DuplicatesTable from '../../components/duplicates-table';\r\nimport { UserState } from '../../state/reducers/user';\r\n\r\ninterface Props {\r\n  duplicatesData: Array<any>;\r\n  comparisonColumns1: Array<string>;\r\n  comparisonColumns2: Array<string>;\r\n  user: UserState;\r\n}\r\n\r\nconst DuplicatesTableContainer = ({\r\n  duplicatesData,\r\n  comparisonColumns1,\r\n  comparisonColumns2,\r\n  user\r\n}: Props) => {\r\n  return (\r\n    <DuplicatesTable\r\n      duplicatesData={duplicatesData}\r\n      comparisonColumns1={comparisonColumns1}\r\n      comparisonColumns2={comparisonColumns2}\r\n      user={user}\r\n    />\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  duplicatesData: state.document.duplicatesData,\r\n  comparisonColumns1: state.document.comparisonColumns1,\r\n  comparisonColumns2: state.document.comparisonColumns2,\r\n  user: state.user\r\n});\r\n\r\nexport default connect(mapStateToProps)(DuplicatesTableContainer);","import React, { useRef } from 'react';\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Fab\r\n} from '@mui/material';\r\nimport { Download, ContentCopy } from '@mui/icons-material';\r\nimport { downloadSpreadsheetFromJSON } from '../../utils/spreadsheet.utils';\r\n\r\ninterface Props {\r\n  duplicatesData: Array<any>;\r\n  template: string;\r\n  handleTemplateChange: any;\r\n  handleCopyEmailTemplate: any;\r\n}\r\n\r\nconst EmailTemplate = ({\r\n  duplicatesData,\r\n  template,\r\n  handleTemplateChange,\r\n  handleCopyEmailTemplate\r\n}: Props) => {\r\n  const textAreaRef = useRef<any>(null);\r\n\r\n  const handleResultsDownload = () => {\r\n    downloadSpreadsheetFromJSON(duplicatesData);\r\n  }\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={2}\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      sx={{ height: '100%', width: '100%', marginTop: '3.5rem' }}\r\n    >\r\n      <Grid\r\n        item\r\n        container\r\n        xs={8}\r\n        sx={{ height: '100%', width: '100%' }}\r\n        direction=\"column\"\r\n        justifyContent=\"start\"\r\n        alignItems=\"center\"\r\n      >\r\n        <TextField\r\n          id=\"email-template-multiline\"\r\n          label=\"Modify and then Copy/Paste this email template\"\r\n          multiline\r\n          ref={textAreaRef}\r\n          rows={9}\r\n          defaultValue={template}\r\n          variant=\"filled\"\r\n          sx={{ width: '100%' }}\r\n          onChange={handleTemplateChange}\r\n        />\r\n        <Fab\r\n          variant=\"extended\"\r\n          aria-label=\"add\"\r\n          sx={{ marginTop: '2.5rem' }}\r\n          onClick={handleCopyEmailTemplate}\r\n        >\r\n          <ContentCopy sx={{ mr: 1 }} />\r\n          Copy Template\r\n        </Fab>\r\n        <Fab\r\n          variant=\"extended\"\r\n          aria-label=\"add\"\r\n          sx={{ marginTop: '2.5rem' }}\r\n          onClick={handleResultsDownload}\r\n        >\r\n          <Download sx={{ mr: 1 }} />\r\n          Download Results\r\n        </Fab>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default EmailTemplate;","export const UPDATE_EMAIL_TEMPLATE = 'UPDATE_EMAIL_TEMPLATE';\r\n\r\nexport const updateEmailTemplate = (updatedTemplate: string) => ({\r\n  type: UPDATE_EMAIL_TEMPLATE,\r\n  payload: updatedTemplate\r\n});","import React, { ChangeEvent } from 'react';\r\nimport EmailTemplate from '../../components/email-template';\r\nimport { connect } from 'react-redux';\r\nimport { updateEmailTemplate } from '../../state/actions/email-template';\r\nimport { showSuccess, showError, hideError, hideSuccess } from '../../state/actions/alert';\r\n\r\ninterface Props {\r\n  duplicatesData: Array<any>;\r\n  template: string;\r\n  updateEmailTemplate: any;\r\n  showSuccess: any;\r\n  hideSuccess: any;\r\n  showError: any;\r\n  hideError: any;\r\n}\r\n\r\nconst EmailTemplateContainer = ({\r\n  duplicatesData,\r\n  template,\r\n  updateEmailTemplate,\r\n  showSuccess,\r\n  hideSuccess,\r\n  showError,\r\n  hideError\r\n}: Props) => {\r\n  const handleTemplateChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    updateEmailTemplate(event.target.value);\r\n  }\r\n\r\n  const handleCopyEmailTemplate = async () => {\r\n    try {\r\n      await navigator.clipboard.writeText(template);\r\n      hideError();\r\n      showSuccess('Copied email template');\r\n      setTimeout(() => {\r\n        hideSuccess();\r\n      }, 5000);\r\n    } catch (err) {\r\n      showError('Failed to copy email template');\r\n      setTimeout(() => {\r\n        hideError();\r\n      }, 5000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <EmailTemplate\r\n      duplicatesData={duplicatesData}\r\n      template={template}\r\n      handleTemplateChange={handleTemplateChange}\r\n      handleCopyEmailTemplate={handleCopyEmailTemplate}\r\n    />\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  duplicatesData: state.document.duplicatesData,\r\n  template: state.emailTemplate.template\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  updateEmailTemplate: (value: string) => dispatch(updateEmailTemplate(value)),\r\n  showSuccess: (successMsg: string) => dispatch(showSuccess(successMsg)),\r\n  hideSuccess: () => dispatch(hideSuccess()),\r\n  showError: (message: string) => dispatch(showError(message)),\r\n  hideError: () => dispatch(hideError()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EmailTemplateContainer);","import React from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Paper\r\n} from '@mui/material';\r\n\r\ninterface StepperFooterProps {\r\n  steps: Array<string>;\r\n  handleNext: any;\r\n  handleBack: any;\r\n  activeStep: number;\r\n}\r\n\r\nconst StepperFooter = ({\r\n  steps,\r\n  activeStep,\r\n  handleBack,\r\n  handleNext\r\n}: StepperFooterProps) => {\r\n  return (\r\n    <Paper sx={{\r\n      position: 'fixed',\r\n      bottom: 0,\r\n      left: 0,\r\n      right: 0,\r\n      zIndex: 1510,\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      padding: '0.75rem'\r\n    }} elevation={3}>\r\n      <Button\r\n        disabled={activeStep === 0}\r\n        onClick={handleBack}\r\n        sx={{ mr: 1 }}\r\n      >\r\n        Back\r\n      </Button>\r\n      <Box sx={{ flex: '1 1 auto' }} />\r\n      <Button\r\n        disabled={activeStep === steps.length - 1}\r\n        onClick={handleNext}\r\n      >\r\n        Next\r\n      </Button>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default StepperFooter;","import React from 'react';\r\nimport StepperFooter from '../../components/stepper-footer';\r\nimport { connect } from 'react-redux';\r\nimport { changeStep } from '../../state/actions/step-progress';\r\n\r\ninterface Props {\r\n  steps: Array<string>;\r\n  activeStep: number;\r\n  changeStep: any;\r\n}\r\n\r\nconst StepperFooterContainer = ({ steps, activeStep, changeStep }: Props) => {\r\n  const handleNext = () => {\r\n    changeStep(activeStep += 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    changeStep(activeStep -= 1);\r\n  };\r\n\r\n  return (\r\n    <StepperFooter\r\n      activeStep={activeStep}\r\n      steps={steps}\r\n      handleNext={handleNext}\r\n      handleBack={handleBack}\r\n    />\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  activeStep: state.stepProgress.step\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  changeStep: (newStep: number) => dispatch(changeStep(newStep))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(StepperFooterContainer);","import * as React from 'react';\r\nimport {\r\n  Box,\r\n  Stepper,\r\n  Step,\r\n  StepButton,\r\n  Container,\r\n} from '@mui/material';\r\n\r\nimport UploadDocumentFormContainer from '../../containers/upload-document-form';\r\nimport DuplicatesTableContainer from '../../containers/duplicates-table';\r\nimport EmailTemplateContainer from '../../containers/email-template';\r\nimport StepperFooterContainer from '../../containers/stepper-footer';\r\n\r\nconst steps = ['Upload document', 'View duplicates', 'Email customers'];\r\n\r\ninterface Props {\r\n  activeStep: number;\r\n  changeStep: any;\r\n}\r\n\r\nconst Home = ({ activeStep, changeStep }: Props) => {\r\n  return (\r\n    <>\r\n      <Box sx={{ width: '100%', height: '100%', marginTop: '3.5vh' }}>\r\n        <Stepper nonLinear={true} activeStep={activeStep} sx={{ marginLeft: '25%', marginRight: '25%'}}>\r\n          {steps.map((label: string, index: number) => {\r\n            const stepProps: { completed?: boolean } = {};\r\n            const labelProps: {\r\n              optional?: React.ReactNode;\r\n            } = {};\r\n            return (\r\n              <Step key={label} {...stepProps}>\r\n                <StepButton onClick={() => changeStep(index)} {...labelProps}>{label}</StepButton>\r\n              </Step>\r\n            );\r\n          })}\r\n        </Stepper>\r\n        {activeStep === 0 &&\r\n          <React.Fragment>\r\n            <Container sx={{ height: '100%', paddingBottom: '2rem' }}>\r\n              <UploadDocumentFormContainer />\r\n            </Container>\r\n          </React.Fragment>\r\n        }\r\n        {activeStep === 1 &&\r\n          <React.Fragment>\r\n            <Container sx={{ height: '100%', width: '100%', maxWidth: '100%' }} maxWidth={false}>\r\n              <DuplicatesTableContainer />\r\n            </Container>\r\n          </React.Fragment>\r\n        }\r\n        {activeStep === 2 &&\r\n          <React.Fragment>\r\n            <Container sx={{ height: '100%', width: '100%' }}>\r\n              <EmailTemplateContainer />\r\n            </Container>\r\n          </React.Fragment>\r\n        }\r\n      </Box>\r\n      <StepperFooterContainer steps={steps} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport Home from '../../pages/home';\r\nimport { connect } from 'react-redux';\r\nimport { changeStep } from '../../state/actions/step-progress';\r\n\r\ninterface Props {\r\n  activeStep: number;\r\n  changeStep: any;\r\n}\r\n\r\nconst HomeContainer = ({ activeStep, changeStep }: Props) => {\r\n  return (\r\n    <Home activeStep={activeStep} changeStep={changeStep} />\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  activeStep: state.stepProgress.step\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  changeStep: (newStep: number) => dispatch(changeStep(newStep))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeContainer);","import React from 'react';\r\nimport {\r\n  Box,\r\n  Fab,\r\n  TextField,\r\n  Grid,\r\n  Typography,\r\n} from '@mui/material';\r\nimport { Link } from 'react-router-dom';\r\nimport { useFormik } from 'formik';\r\n\r\ninterface Props {\r\n  onSubmit: any;\r\n}\r\n\r\nconst Register = ({ onSubmit }: Props) => {\r\n\r\n  const validate = (values: any) => {\r\n    const errors: any = {};\r\n    if (!values.password) {\r\n      errors.password = 'Required';\r\n    } else if (values.password.length < 8) {\r\n      errors.password = 'Must be 8 characters or more';\r\n    }\r\n  \r\n    if (!values.confirmPassword) {\r\n      errors.confirmPassword = 'Required';\r\n    } else if (values.confirmPassword !== values.password) {\r\n      errors.confirmPassword = 'Must match password';\r\n    }\r\n  \r\n    if (!values.email) {\r\n      errors.email = 'Required';\r\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n      errors.email = 'Invalid email address';\r\n    }\r\n  \r\n    return errors;\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n      password: '',\r\n      confirmPassword: '',\r\n      firstName: '',\r\n      lastName: '',\r\n      company: ''\r\n    },\r\n    validate,\r\n    onSubmit\r\n  });\r\n\r\n  const { values, errors, touched, handleBlur, handleChange, handleSubmit } = formik;\r\n\r\n  const isSubmitButtonDisabled = !!errors.email || !!errors.password || !!errors.confirmPassword\r\n    || !values.email || !values.password || !values.confirmPassword;\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{ width: '100%', height: '85vh', marginTop: '3.5vh' }}>\r\n        <Grid\r\n          container\r\n          spacing={2}\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          sx={{ height: '100%' }}\r\n        >\r\n          <Grid\r\n            item\r\n            container\r\n            xs={4}\r\n            p={0}\r\n            sx={{ height: '100%' }}\r\n            direction=\"column\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Typography variant=\"h5\" sx={{ marginBottom: '2rem' }}>Register</Typography>\r\n            <form onSubmit={handleSubmit}>\r\n              <TextField\r\n                required\r\n                id=\"standard-basic\"\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                variant=\"standard\"\r\n                sx={{ width: '100%', marginBottom: '1.5rem' }}\r\n                error={touched.email && !!errors.email}\r\n                helperText={errors.email ? errors.email : null}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                value={values.email}\r\n              />\r\n              <TextField\r\n                required\r\n                id=\"standard-basic\"\r\n                label=\"Password\"\r\n                name=\"password\"\r\n                variant=\"standard\"\r\n                type=\"password\"\r\n                sx={{ width: '100%', marginBottom: '1.5rem' }}\r\n                error={touched.password && !!errors.password}\r\n                helperText={errors.password ? errors.password : null}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                value={values.password}\r\n              />\r\n              <TextField\r\n                required\r\n                id=\"standard-basic\"\r\n                label=\"Confirm Password\"\r\n                name=\"confirmPassword\"\r\n                variant=\"standard\"\r\n                type=\"password\"\r\n                sx={{ width: '100%', marginBottom: '1.5rem' }}\r\n                error={touched.confirmPassword && !!errors.confirmPassword}\r\n                helperText={errors.confirmPassword ? errors.confirmPassword : null}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                value={values.confirmPassword}\r\n              />\r\n              <TextField\r\n                id=\"standard-basic\"\r\n                label=\"First Name\"\r\n                name=\"firstName\"\r\n                variant=\"standard\"\r\n                sx={{ width: '100%', marginBottom: '1.5rem' }}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                value={values.firstName}\r\n              />\r\n              <TextField\r\n                id=\"standard-basic\"\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                variant=\"standard\"\r\n                sx={{ width: '100%', marginBottom: '1.5rem' }}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                value={values.lastName}\r\n              />\r\n              <TextField\r\n                id=\"standard-basic\"\r\n                label=\"Company\"\r\n                name=\"company\"\r\n                variant=\"standard\"\r\n                sx={{ width: '100%' }}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                value={values.company}\r\n              />\r\n              <Grid\r\n                container\r\n                spacing={2}\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Grid\r\n                  item\r\n                  container\r\n                  xs={4}\r\n                  p={0}\r\n                  direction=\"column\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\"\r\n                >\r\n                  <Fab\r\n                    variant=\"extended\"\r\n                    aria-label=\"add\"\r\n                    sx={{ marginTop: '2.5rem', marginLeft: 'auto', marginRight: 'auto' }}\r\n                    type=\"submit\"\r\n                    disabled={isSubmitButtonDisabled}\r\n                  >\r\n                    Submit\r\n                  </Fab>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n            <Typography sx={{ marginTop: '2rem' }}>\r\n              Already have an account? <Link to=\"/\">Sign in</Link>\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Register;","export const UPDATE_USER = 'UPDATE_USER';\r\n\r\nexport const updateUser = (user: any) => ({\r\n  type: UPDATE_USER,\r\n  payload: user\r\n});","import React from 'react';\r\nimport axios from 'axios';\r\nimport Register from '../../pages/register';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { updateUser } from '../../state/actions/user';\r\nimport { showError, hideError } from '../../state/actions/alert';\r\nimport { setIsLoading } from '../../state/actions/loading';\r\n\r\ninterface Props {\r\n  setIsLoading: any;\r\n  showError: any;\r\n  hideError: any;\r\n  updateUser: any;\r\n}\r\n\r\nconst RegisterContainer = ({\r\n  setIsLoading,\r\n  showError,\r\n  hideError,\r\n  updateUser\r\n}: Props) => {\r\n  const history = useHistory();\r\n\r\n  const onSubmit = (values: any) => {\r\n    setIsLoading(true);\r\n    const formData = new FormData();\r\n    formData.append('email', values.email);\r\n    formData.append('password', values.password);\r\n    formData.append('firstname', values.firstName);\r\n    formData.append('lastname', values.lastName);\r\n    formData.append('company', values.company);\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    };\r\n    axios.post('/api/v1/register', formData, config)\r\n      .then((res) => {\r\n        hideError();\r\n        updateUser(res.data);\r\n        setIsLoading(false);\r\n        history.push('/home');\r\n      })\r\n      .catch((err: any) => {\r\n        console.log('err', err);\r\n        setIsLoading(false);\r\n        showError('Registration failed.');\r\n        setTimeout(() => {\r\n          hideError();\r\n        }, 5000)\r\n      });\r\n  }\r\n\r\n  return (\r\n    <Register onSubmit={onSubmit} />\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  showError: (message: string) => dispatch(showError(message)),\r\n  hideError: () => dispatch(hideError()),\r\n  setIsLoading: (isLoading: boolean) => dispatch(setIsLoading(isLoading)),\r\n  updateUser: (user: any) => dispatch(updateUser(user))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(RegisterContainer);","import React from 'react';\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Typography,\r\n  TextField,\r\n  Fab,\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n} from '@mui/material';\r\nimport { Close } from '@mui/icons-material';\r\nimport { useFormik } from 'formik';\r\n\r\ninterface Props {\r\n  onClose: any;\r\n  onSubmit: any;\r\n}\r\n\r\nconst EmailCapture = ({ onClose, onSubmit }: Props) => {\r\n\r\n  const validate = (values: any) => {\r\n    const errors: any = {};\r\n\r\n    if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n      errors.email = 'Invalid email address';\r\n    }\r\n  \r\n    return errors;\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: ''\r\n    },\r\n    validate,\r\n    onSubmit\r\n  });\r\n\r\n  const { values, errors, touched, handleBlur, handleChange, handleSubmit } = formik;\r\n\r\n  return (\r\n    <Box sx={{ width: '100%', height: '100%', padding: '0 0 3rem 0' }}>\r\n      <AppBar sx={{ position: 'relative', marginBottom: '3rem' }}>\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"end\"\r\n            color=\"inherit\"\r\n            onClick={onClose}\r\n            aria-label=\"close\"\r\n          >\r\n            <Close />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Grid\r\n        container\r\n        spacing={3}\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        sx={{ height: '100%', width: '100%' }}\r\n      >\r\n        <Grid\r\n          item\r\n          container\r\n          xs={10}\r\n          p={0}\r\n          sx={{ height: '100%' }}\r\n          direction=\"column\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <form onSubmit={handleSubmit}>\r\n            <Typography variant=\"h5\" sx={{ marginBottom: '2rem' }}>Join the waitlist for Salesdap</Typography>\r\n            <TextField\r\n              label=\"email address\"\r\n              variant=\"standard\"\r\n              name=\"email\"\r\n              sx={{ width: '100%' }}\r\n              error={touched.email && !!errors.email}\r\n              helperText={errors.email ? errors.email : null}\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              value={values.email}\r\n            />\r\n            <Fab\r\n              variant=\"extended\"\r\n              aria-label=\"add\"\r\n              sx={{ marginTop: '2.5rem' }}\r\n              type=\"submit\"\r\n            >\r\n              submit\r\n            </Fab>\r\n          </form>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default EmailCapture;","import React from 'react';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport { setIsLoading } from '../../state/actions/loading';\r\nimport { showError, hideError, showSuccess, hideSuccess } from '../../state/actions/alert';\r\nimport EmailCapture from '../../pages/email-capture';\r\n\r\ninterface Props {\r\n  onClose: any;\r\n  showError: any;\r\n  hideError: any;\r\n  showSuccess: any;\r\n  hideSuccess: any;\r\n  setIsLoading: any;\r\n}\r\n\r\nconst EmailCaptureContainer = ({\r\n  onClose,\r\n  showError,\r\n  hideError,\r\n  showSuccess,\r\n  hideSuccess,\r\n  setIsLoading\r\n}: Props) => {\r\n  const onSubmit = (values: any) => {\r\n    setIsLoading(true);\r\n    const formData = new FormData();\r\n    formData.append('email', values.email);\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    };\r\n\r\n    axios.post('/api/v1/email', formData, config)\r\n      .then(() => {\r\n        hideError();\r\n        setIsLoading(false);\r\n        onClose();\r\n        showSuccess('Successfully registered to waitlist!');\r\n        setTimeout(() => {\r\n          hideSuccess();\r\n        }, 5000);\r\n      })\r\n      .catch((err: any) => {\r\n        console.log('email err', err);\r\n        setIsLoading(false);\r\n        showError('Waitlist registration failed. Please try again.');\r\n        setTimeout(() => {\r\n          hideError();\r\n        }, 5000)\r\n      });\r\n  }\r\n\r\n  return (\r\n    <EmailCapture onSubmit={onSubmit} onClose={onClose} />\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  showError: (message: string) => dispatch(showError(message)),\r\n  hideError: () => dispatch(hideError()),\r\n  showSuccess: (successMsg: string) => dispatch(showSuccess(successMsg)),\r\n  hideSuccess: () => dispatch(hideSuccess()),\r\n  setIsLoading: (isLoading: boolean) => dispatch(setIsLoading(isLoading)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(EmailCaptureContainer);","import React, { useState } from 'react';\r\nimport EmailCaptureContainer from '../../containers/email-capture';\r\nimport {\r\n  Box,\r\n  Fab,\r\n  TextField,\r\n  Grid,\r\n  Typography,\r\n  Dialog\r\n} from '@mui/material';\r\nimport { Link } from 'react-router-dom';\r\nimport { useFormik } from 'formik';\r\n\r\ninterface Props {\r\n  onSubmit: any;\r\n}\r\n\r\nconst Login = ({ onSubmit }: Props) => {\r\n  const [isEmailCaptureModalOpen, setIsEmailCaptureModalOpen] = useState(true);\r\n\r\n  const handleClose = (event: any) => {\r\n    setIsEmailCaptureModalOpen(false);\r\n  }\r\n\r\n  const validate = (values: any) => {\r\n    const errors: any = {};\r\n    if (!values.password) {\r\n      errors.password = 'Required';\r\n    }\r\n  \r\n    if (!values.email) {\r\n      errors.email = 'Required';\r\n    }\r\n  \r\n    return errors;\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n      password: ''\r\n    },\r\n    validate,\r\n    onSubmit\r\n  });\r\n\r\n  const { values, errors, touched, handleBlur, handleChange, handleSubmit } = formik;\r\n\r\n  const isSubmitButtonDisabled = !!errors.email || !!errors.password ||\r\n    !values.email || !values.password;\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{ width: '100%', height: '80vh', marginTop: '3.5vh' }}>\r\n        <Grid\r\n          container\r\n          spacing={2}\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          sx={{ height: '100%' }}\r\n        >\r\n          <Grid\r\n            item\r\n            container\r\n            xs={4}\r\n            p={0}\r\n            sx={{ height: '100%' }}\r\n            direction=\"column\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Typography variant=\"h5\" sx={{ marginBottom: '2rem' }}>Login</Typography>\r\n            <form onSubmit={handleSubmit}>\r\n              <TextField\r\n                required\r\n                id=\"standard-basic\"\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                variant=\"standard\"\r\n                sx={{ width: '100%', marginBottom: '1.5rem' }}\r\n                error={touched.email && !!errors.email}\r\n                helperText={errors.email ? errors.email : null}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                value={values.email}\r\n              />\r\n              <TextField\r\n                required\r\n                id=\"standard-basic\"\r\n                label=\"Password\"\r\n                name=\"password\"\r\n                variant=\"standard\"\r\n                type=\"password\"\r\n                sx={{ width: '100%', marginBottom: '1.5rem' }}\r\n                error={touched.password && !!errors.password}\r\n                helperText={errors.password ? errors.password : null}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                value={values.password}\r\n              />\r\n              <Grid\r\n                container\r\n                spacing={2}\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Grid\r\n                  item\r\n                  container\r\n                  xs={4}\r\n                  p={0}\r\n                  direction=\"column\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\"\r\n                >\r\n                  <Fab\r\n                    variant=\"extended\"\r\n                    aria-label=\"add\"\r\n                    sx={{ marginTop: '2.5rem', marginLeft: 'auto', marginRight: 'auto' }}\r\n                    type=\"submit\"\r\n                    disabled={isSubmitButtonDisabled}\r\n                  >\r\n                    Submit\r\n                  </Fab>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n            <Typography sx={{ marginTop: '2rem' }}>\r\n              Don't have an account?  <Link to=\"/register\">Sign up now!</Link>\r\n            </Typography>\r\n            <Typography sx={{ marginTop: '0.5rem' }}>\r\n              Forgot your password?  <Link to=\"/forgot-password\">Reset your password</Link>\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n\r\n      <Dialog open={isEmailCaptureModalOpen} onClose={handleClose}>\r\n        <EmailCaptureContainer onClose={handleClose} />\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;","import React from 'react';\r\nimport axios from 'axios';\r\nimport Login from '../../pages/login';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { updateUser } from '../../state/actions/user';\r\nimport { showError, hideError } from '../../state/actions/alert';\r\nimport { setIsLoading } from '../../state/actions/loading';\r\n\r\ninterface Props {\r\n  setIsLoading: any;\r\n  showError: any;\r\n  hideError: any;\r\n  updateUser: any;\r\n}\r\n\r\nconst LoginContainer = ({\r\n  setIsLoading,\r\n  showError,\r\n  hideError,\r\n  updateUser\r\n}: Props) => {\r\n  const history = useHistory();\r\n\r\n  const onSubmit = (values: any) => {\r\n    setIsLoading(true);\r\n    const formData = new FormData();\r\n    formData.append('email', values.email);\r\n    formData.append('password', values.password);\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    };\r\n\r\n    axios.post('/api/v1/login', formData, config)\r\n      .then((res: any) => {\r\n        hideError();\r\n        updateUser(res.data);\r\n        setIsLoading(false);\r\n        history.push('/home');\r\n      })\r\n      .catch((err: any) => {\r\n        console.log('err', err);\r\n        setIsLoading(false);\r\n        showError('Wrong email or password');\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Login onSubmit={onSubmit} />\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  showError: (message: string) => dispatch(showError(message)),\r\n  hideError: () => dispatch(hideError()),\r\n  setIsLoading: (isLoading: boolean) => dispatch(setIsLoading(isLoading)),\r\n  updateUser: (user: any) => dispatch(updateUser(user))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(LoginContainer);","import React, { useRef } from 'react';\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Typography,\r\n  Paper,\r\n  Chip,\r\n  Fab,\r\n} from '@mui/material';\r\nimport { Attachment, Upload } from '@mui/icons-material';\r\nimport { UserState } from '../../state/reducers/user';\r\n\r\ninterface Props {\r\n  user: UserState;\r\n  validateFileSelection: any;\r\n  handlePinnedFileClick: any;\r\n}\r\n\r\nconst Profile = ({\r\n  user,\r\n  validateFileSelection,\r\n  handlePinnedFileClick\r\n}: Props) => {\r\n  const inputFileRef: any = useRef(null);\r\n\r\n  const handleFileSelectionBtnClick = () => {\r\n    /*Collecting node-element and performing click*/\r\n    if (inputFileRef&& inputFileRef.current) {\r\n      inputFileRef.current.click();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{ width: '100%', height: '80vh', marginTop: '3.5vh' }}>\r\n        <Grid\r\n          container\r\n          spacing={2}\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          sx={{ height: '100%' }}\r\n        >\r\n          <Grid\r\n            item\r\n            container\r\n            xs={8}\r\n            p={0}\r\n            sx={{ height: '100%' }}\r\n            direction=\"column\"\r\n            justifyContent=\"start\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Paper elevation={3} sx={{ width: '100%', padding: '3rem 0 3rem 3rem', marginTop: '3rem' }}>\r\n              <Typography variant=\"h5\" sx={{ marginBottom: '2rem' }}>Profile</Typography>\r\n              <Typography variant=\"subtitle1\" sx={{ marginBottom: '2rem' }}>Name: {user.firstname} {user.lastname}</Typography>\r\n              <Typography variant=\"subtitle1\" sx={{ marginBottom: '2rem' }}>Email: {user.email}</Typography>\r\n              <Typography variant=\"subtitle1\" sx={{ marginBottom: '2rem' }}>Company: {user.company}</Typography>\r\n              <Typography variant=\"subtitle1\">Pinned File:</Typography>\r\n              <Chip onClick={handlePinnedFileClick} icon={<Attachment />} label={user.pinnedFileName} />\r\n              <Grid\r\n                item\r\n                container\r\n                xs={6}\r\n                p={0}\r\n                direction=\"column\"\r\n                justifyContent=\"start\"\r\n                alignItems=\"start\"\r\n              >\r\n                <Fab\r\n                  variant=\"extended\"\r\n                  aria-label=\"add\"\r\n                  sx={{ marginTop: '2.5rem' }}\r\n                  onClick={handleFileSelectionBtnClick}\r\n                >\r\n                  <Upload sx={{ mr: 1 }} />\r\n                  Select New Pinned File\r\n                </Fab>\r\n                <input\r\n                  type=\"file\"\r\n                  ref={inputFileRef}\r\n                  className=\"file-input\"\r\n                  onChange={validateFileSelection}\r\n                  name=\"sales_file\"\r\n                />\r\n              </Grid>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport axios from 'axios';\r\nimport Profile from '../../pages/profile';\r\nimport {\r\n  createFileLink,\r\n  getPinnedFile\r\n} from '../../utils/spreadsheet.utils';\r\nimport { connect } from 'react-redux';\r\nimport { pinFileSuccess } from '../../state/actions/document';\r\nimport { UserState } from '../../state/reducers/user';\r\nimport { checkIsValidFileType } from '../../utils/validate-file-type';\r\nimport { showError, hideError } from '../../state/actions/alert';\r\nimport { setIsLoading } from '../../state/actions/loading';\r\n\r\ninterface Props {\r\n  user: UserState;\r\n  setIsLoading: any;\r\n  showError: any;\r\n  hideError: any;\r\n  pinFileSuccess: any;\r\n}\r\n\r\nconst ProfileContainer = ({\r\n  user,\r\n  setIsLoading,\r\n  showError,\r\n  hideError,\r\n  pinFileSuccess\r\n}: Props) => {\r\n  const handlePinnedFileClick = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const pinnedFileData = await getPinnedFile(user.pinnedFileId);\r\n      setIsLoading(false);\r\n      createFileLink(pinnedFileData.data, user.pinnedFileName);\r\n    } catch (err: any) {\r\n      console.log('err', err);\r\n      setIsLoading(false);\r\n      showError('Failed to download pinned file.');\r\n    }\r\n  };\r\n\r\n  const validateFileSelection = (event: any) => {\r\n    const document: any = event && event.target && event.target.files ?\r\n      event.target.files[0] :\r\n      null;\r\n    const isValidDocType: boolean = document && document.name ?\r\n      checkIsValidFileType(document.name) : false;\r\n\r\n    if (isValidDocType) {\r\n      hideError();\r\n      handleFilePinning(document);\r\n    } else {\r\n      showError('Invalid file type. Only pin .xls, .xlsx, or .csv');\r\n    }\r\n  };\r\n\r\n  const handleFilePinning = (file: any) => {\r\n    setIsLoading(true);\r\n    const formData = new FormData();\r\n    if (\r\n      file &&\r\n      file.name\r\n    ) {\r\n      formData.append(\r\n        'sales_file',\r\n        file,\r\n        file.name\r\n      );\r\n      formData.append(\r\n        'email',\r\n        user.email\r\n      );\r\n    }\r\n    axios.post('/api/v1/pinfile', formData)\r\n      .then((res: any) => {\r\n        pinFileSuccess(res.data);\r\n        hideError();\r\n        setIsLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setIsLoading(false);\r\n        showError('Failed to pin file.');\r\n        setTimeout(() => {\r\n          hideError();\r\n        }, 5000)\r\n      });\r\n  }\r\n\r\n  return (\r\n    <Profile\r\n      user={user}\r\n      validateFileSelection={validateFileSelection}\r\n      handlePinnedFileClick={handlePinnedFileClick}\r\n    />\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  user: state.user\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  showError: (message: string) => dispatch(showError(message)),\r\n  hideError: () => dispatch(hideError()),\r\n  setIsLoading: (isLoading: boolean) => dispatch(setIsLoading(isLoading)),\r\n  pinFileSuccess: (fileMetadata: any) => dispatch(pinFileSuccess(fileMetadata))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileContainer);","import React from 'react';\r\nimport {\r\n  Box,\r\n  Fab,\r\n  TextField,\r\n  Grid,\r\n  Typography,\r\n} from '@mui/material';\r\nimport { useFormik } from 'formik';\r\n\r\ninterface Props {\r\n  onSubmit: any;\r\n}\r\n\r\nconst PasswordReset = ({ onSubmit }: Props) => {\r\n  const validate = (values: any) => {\r\n    const errors: any = {};\r\n    if (!values.email) {\r\n      errors.email = 'Required';\r\n    }\r\n\r\n    if (!values.password) {\r\n      errors.password = 'Required';\r\n    } else if (values.password.length < 8) {\r\n      errors.password = 'Must be 8 characters or more';\r\n    }\r\n  \r\n    if (!values.confirmPassword) {\r\n      errors.confirmPassword = 'Required';\r\n    } else if (values.confirmPassword !== values.password) {\r\n      errors.confirmPassword = 'Must match password';\r\n    }\r\n  \r\n    return errors;\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n      password: '',\r\n      confirmPassword: '',\r\n    },\r\n    validate,\r\n    onSubmit\r\n  });\r\n\r\n  const { values, errors, touched, handleBlur, handleChange, handleSubmit } = formik;\r\n\r\n  const isSubmitButtonDisabled = !!errors.email || !!errors.password || !!errors.confirmPassword\r\n    || !values.email || !values.password || !values.confirmPassword;\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{ width: '100%', height: '80vh', marginTop: '3.5vh' }}>\r\n        <Grid\r\n          container\r\n          spacing={2}\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          sx={{ height: '100%' }}\r\n        >\r\n          <Grid\r\n            item\r\n            container\r\n            xs={4}\r\n            p={0}\r\n            sx={{ height: '100%' }}\r\n            direction=\"column\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Typography variant=\"h5\" sx={{ marginBottom: '2rem' }}>Reset your password</Typography>\r\n            <form onSubmit={handleSubmit}>\r\n              <TextField\r\n                required\r\n                id=\"standard-basic\"\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                variant=\"standard\"\r\n                sx={{ width: '100%', marginBottom: '1.5rem' }}\r\n                error={touched.email && !!errors.email}\r\n                helperText={errors.email ? errors.email : null}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                value={values.email}\r\n              />\r\n              <TextField\r\n                required\r\n                id=\"standard-basic\"\r\n                label=\"Password\"\r\n                name=\"password\"\r\n                variant=\"standard\"\r\n                type=\"password\"\r\n                sx={{ width: '100%', marginBottom: '1.5rem' }}\r\n                error={touched.password && !!errors.password}\r\n                helperText={errors.password ? errors.password : null}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                value={values.password}\r\n              />\r\n              <TextField\r\n                required\r\n                id=\"standard-basic\"\r\n                label=\"Confirm Password\"\r\n                name=\"confirmPassword\"\r\n                variant=\"standard\"\r\n                type=\"password\"\r\n                sx={{ width: '100%', marginBottom: '1.5rem' }}\r\n                error={touched.confirmPassword && !!errors.confirmPassword}\r\n                helperText={errors.confirmPassword ? errors.confirmPassword : null}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                value={values.confirmPassword}\r\n              />\r\n              <Grid\r\n                container\r\n                spacing={2}\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Grid\r\n                  item\r\n                  container\r\n                  xs={8}\r\n                  p={0}\r\n                  direction=\"column\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\"\r\n                >\r\n                  <Fab\r\n                    variant=\"extended\"\r\n                    aria-label=\"add\"\r\n                    sx={{ marginTop: '2.5rem', marginLeft: 'auto', marginRight: 'auto' }}\r\n                    type=\"submit\"\r\n                    disabled={isSubmitButtonDisabled}\r\n                  >\r\n                    Reset Password\r\n                  </Fab>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PasswordReset;","import React, { useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport PasswordReset from '../../pages/password-reset';\r\nimport { connect } from 'react-redux';\r\nimport { hideError, showError } from '../../state/actions/alert';\r\nimport { setIsLoading } from '../../state/actions/loading';\r\n\r\ninterface Props {\r\n  setIsLoading: any;\r\n  showError: any;\r\n  hideError: any;\r\n}\r\n\r\nconst PasswordResetContainer = ({ setIsLoading, showError, hideError }: Props) => {\r\n  const history = useHistory();\r\n  const params: any = useParams();\r\n\r\n  useEffect(() => {\r\n    axios.post('/api/v1/resetpassword', { token: params.token })\r\n      .catch((err) => {\r\n        history.push('/');\r\n      });\r\n  }, [params, history]);\r\n\r\n  const onSubmit = (values: any) => {\r\n    const formData = new FormData();\r\n    formData.append('email', values.email);\r\n    formData.append('password', values.password);\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    };\r\n    setIsLoading(true);\r\n    axios.post('/api/v1/updatepassword', formData, config)\r\n      .then(() => {\r\n        hideError();\r\n        setIsLoading(false);\r\n        history.push('/');\r\n      })\r\n      .catch((err: any) => {\r\n        console.log('err', err);\r\n        setIsLoading(false);\r\n        showError('Password reset failed. Please try again.');\r\n        setTimeout(() => {\r\n          hideError();\r\n        }, 5000);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <PasswordReset onSubmit={onSubmit} />\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  showError: (message: string) => dispatch(showError(message)),\r\n  hideError: () => dispatch(hideError()),\r\n  setIsLoading: (isLoading: boolean) => dispatch(setIsLoading(isLoading)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(PasswordResetContainer);","import React from 'react';\r\nimport {\r\n  Box,\r\n  Fab,\r\n  TextField,\r\n  Grid,\r\n  Typography,\r\n} from '@mui/material';\r\nimport { useFormik } from 'formik';\r\n\r\ninterface Props {\r\n  onSubmit: any;\r\n}\r\n\r\nconst ForgotPassword = ({ onSubmit }: Props) => {\r\n  const validate = (values: any) => {\r\n    const errors: any = {};\r\n  \r\n    if (!values.email) {\r\n      errors.email = 'Required';\r\n    }\r\n  \r\n    return errors;\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n    },\r\n    validate,\r\n    onSubmit\r\n  });\r\n\r\n  const { values, errors, touched, handleBlur, handleChange, handleSubmit } = formik;\r\n\r\n  const isSubmitButtonDisabled = !!errors.email || !values.email;\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{ width: '100%', height: '80vh', marginTop: '3.5vh' }}>\r\n        <Grid\r\n          container\r\n          spacing={2}\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          sx={{ height: '100%' }}\r\n        >\r\n          <Grid\r\n            item\r\n            container\r\n            xs={4}\r\n            p={0}\r\n            sx={{ height: '100%' }}\r\n            direction=\"column\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Typography variant=\"h5\" sx={{ marginBottom: '0.5rem' }}>Forgot my password</Typography>\r\n            <Typography variant=\"subtitle1\" sx={{ marginBottom: '2rem' }}>\r\n              Enter your email, and then you'll receive a verification code at that address. Use that code to reset your password.\r\n            </Typography>\r\n            <form onSubmit={handleSubmit}>\r\n              <TextField\r\n                required\r\n                id=\"standard-basic\"\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                variant=\"standard\"\r\n                sx={{ width: '100%', marginBottom: '1.5rem' }}\r\n                error={touched.email && !!errors.email}\r\n                helperText={errors.email ? errors.email : null}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                value={values.email}\r\n              />\r\n              <Grid\r\n                container\r\n                spacing={2}\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Grid\r\n                  item\r\n                  container\r\n                  xs={12}\r\n                  p={0}\r\n                  direction=\"column\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\"\r\n                >\r\n                  <Fab\r\n                    variant=\"extended\"\r\n                    aria-label=\"add\"\r\n                    sx={{ marginTop: '2.5rem', marginLeft: 'auto', marginRight: 'auto' }}\r\n                    type=\"submit\"\r\n                    disabled={isSubmitButtonDisabled}\r\n                  >\r\n                    Send Password Reset Email\r\n                  </Fab>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;","import React from 'react';\r\nimport axios from 'axios';\r\nimport ForgotPassword from '../../pages/forgot-password';\r\nimport { connect } from 'react-redux';\r\nimport { hideError, showError } from '../../state/actions/alert';\r\nimport { setIsLoading } from '../../state/actions/loading';\r\n\r\ninterface Props {\r\n  setIsLoading: any;\r\n  showError: any;\r\n  hideError: any;\r\n}\r\n\r\nconst ForgotPasswordContainer = ({ setIsLoading, showError, hideError }: Props) => {\r\n  const onSubmit = (values: any) => {\r\n    const formData = new FormData();\r\n    formData.append('email', values.email);\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    };\r\n    setIsLoading(true);\r\n    axios.post('/api/v1/forgotpassword', formData, config)\r\n      .then(() => {\r\n        setIsLoading(false);\r\n        hideError();\r\n      })\r\n      .catch((err: any) => {\r\n        console.log('err', err);\r\n        setIsLoading(false);\r\n        showError('Wrong email or password');\r\n      });\r\n  };\r\n\r\n  return (\r\n    <ForgotPassword onSubmit={onSubmit} />\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  showError: (message: string) => dispatch(showError(message)),\r\n  hideError: () => dispatch(hideError()),\r\n  setIsLoading: (isLoading: boolean) => dispatch(setIsLoading(isLoading)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ForgotPasswordContainer);","import React from 'react';\r\nimport { Route, Redirect, useLocation } from 'react-router-dom';\r\n\r\nconst PrivateRoute = (props: any) => {\r\n  const location = useLocation();\r\n\r\n  return props.user && props.user.email ? (\r\n    <Route {...props} />\r\n  ) : (\r\n    <Redirect\r\n      to={{\r\n        pathname: \"/\",\r\n        state: { from: location }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;","import * as React from 'react';\r\nimport {\r\n  AppBar,\r\n  Box,\r\n  Toolbar,\r\n  Typography,\r\n  IconButton,\r\n  Menu,\r\n  MenuItem,\r\n  Button\r\n} from '@mui/material';\r\nimport { Handshake, AccountCircle } from '@mui/icons-material';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { UserState } from '../../state/reducers/user';\r\n\r\ninterface Props {\r\n  user: UserState;\r\n  handleLogout: any;\r\n  hideError: any;\r\n}\r\n\r\nconst NavBar = ({ user, handleLogout, hideError }: Props) => {\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const history = useHistory();\r\n\r\n  const handleMenu = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    hideError();\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleHomeClick = () => {\r\n    hideError();\r\n    history.push('/home');\r\n  }\r\n\r\n  const logoutAndClose = () => {\r\n    handleClose();\r\n    handleLogout();\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            size=\"large\"\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            sx={{ mr: 2 }}\r\n            onClick={handleHomeClick}\r\n          >\r\n            <Handshake />\r\n          </IconButton>\r\n          <Button variant=\"text\" onClick={handleHomeClick}>\r\n            <Typography variant=\"h6\" sx={{ flexGrow: 1, color: 'white' }}>\r\n              Salesdap\r\n            </Typography>\r\n          </Button>\r\n\r\n          {user && user.email && <>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls=\"menu-appbar\"\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMenu}\r\n              color=\"inherit\"\r\n              sx={{ marginLeft: 'auto' }}\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n            <Menu\r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorEl}\r\n              anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n              }}\r\n              open={Boolean(anchorEl)}\r\n              onClose={handleClose}\r\n            >\r\n              <MenuItem onClick={handleClose}>\r\n                <Link style={{ color: 'black', textDecoration: 'none' }} to=\"/profile\">Profile</Link>\r\n              </MenuItem>\r\n              <MenuItem onClick={logoutAndClose}>Logout</MenuItem>\r\n            </Menu>\r\n          </>}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default NavBar;","import { UPDATE_USER } from '../../actions/user';\r\nimport { PIN_FILE_SUCCESS } from '../../actions/document';\r\n\r\nexport interface UserState {\r\n  firstname: string;\r\n  lastname: string;\r\n  email: string;\r\n  company: string;\r\n  pinnedFileName: string;\r\n  pinnedFileId: string;\r\n}\r\n\r\nexport const initialState: UserState = {\r\n  firstname: '',\r\n  lastname: '',\r\n  email: '',\r\n  company: '',\r\n  pinnedFileName: '',\r\n  pinnedFileId: ''\r\n}\r\n\r\nexport const userReducer = (state = initialState, action: any) => {\r\n  switch (action.type) {\r\n    case UPDATE_USER:\r\n      return {\r\n        ...state,\r\n        email: action.payload.email,\r\n        firstname: action.payload.firstname,\r\n        lastname: action.payload.lastname,\r\n        company: action.payload.company,\r\n        pinnedFileName: action.payload.pinned_filename,\r\n        pinnedFileId: action.payload.pinned_file_id\r\n      };\r\n    case PIN_FILE_SUCCESS:\r\n      console.log('action payload pin', action.payload);\r\n      return {\r\n        ...state,\r\n        pinnedFileName: action.payload.pinned_filename,\r\n        pinnedFileId: action.payload.pinned_file_id\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}","import React from 'react';\r\n// import axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { updateUser } from '../../state/actions/user';\r\nimport { showError, hideError } from '../../state/actions/alert';\r\nimport NavBar from '../../components/nav-bar';\r\nimport { UserState, initialState } from '../../state/reducers/user';\r\n\r\ninterface Props {\r\n  user: UserState;\r\n  hideError: any;\r\n  updateUser: any;\r\n}\r\n\r\nconst NavBarContainer = ({ user, hideError, updateUser }: Props) => {\r\n  const history = useHistory();\r\n\r\n  const handleLogout = () => {\r\n    // axios.post('/api/v1/logout') <-- until AWS Redis stuff gets setup, keep this commented\r\n    //   .then(() => {\r\n        // hideError();\r\n        updateUser({...initialState});\r\n        history.push('/');\r\n      // })\r\n      // .catch((err) => {\r\n      //   console.log('logout err', err);\r\n      //   showError('Failed to logout');\r\n      //   setTimeout(() => {\r\n      //     hideError();\r\n      //   }, 5000);\r\n      // });\r\n  }\r\n\r\n  return (\r\n    <NavBar user={user} handleLogout={handleLogout} hideError={hideError} />\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  showError: (message: string) => dispatch(showError(message)),\r\n  hideError: () => dispatch(hideError()),\r\n  updateUser: (user: any) => dispatch(updateUser(user))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(NavBarContainer);","import HomeContainer from '../../containers/home';\r\nimport RegisterContainer from '../../containers/register';\r\nimport LoginContainer from '../../containers/login';\r\nimport ProfileContainer from '../../containers/profile';\r\nimport PasswordResetContainer from '../../containers/password-reset';\r\nimport ForgotPasswordContainer from '../../containers/forgot-password';\r\nimport PrivateRoute from '../private-route'; // set everything to private after testing\r\nimport NavBarContainer from '../../containers/nav-bar';\r\nimport {\r\n  Alert,\r\n  Backdrop,\r\n  CircularProgress\r\n} from '@mui/material';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport { AlertState } from '../../state/reducers/alert';\r\nimport { UserState } from '../../state/reducers/user';\r\n\r\ninterface Props {\r\n  alert: AlertState;\r\n  loading: boolean;\r\n  user: UserState;\r\n  handleAlertClose: any;\r\n}\r\n\r\nconst Routes = ({\r\n  alert,\r\n  loading,\r\n  user,\r\n  handleAlertClose\r\n}: Props) => {\r\n  return (\r\n    <BrowserRouter>\r\n      <main>\r\n        <NavBarContainer user={user} />\r\n        <Switch>\r\n          <Route exact path=\"/home\" component={HomeContainer} />\r\n          <Route exact path=\"/\" component={LoginContainer} />\r\n          <Route exact path=\"/register\" component={RegisterContainer} />\r\n          <PrivateRoute exact path=\"/profile\" component={ProfileContainer} user={user} />\r\n          <Route exact path=\"/forgot-password\" component={ForgotPasswordContainer} />\r\n          <Route path=\"/password-reset/:token\" component={PasswordResetContainer} />\r\n        </Switch>\r\n        {alert.isOpen && <Alert\r\n          variant=\"standard\"\r\n          severity={alert.alertType || \"error\"}\r\n          onClose={handleAlertClose}\r\n          sx={{\r\n            position: 'fixed',\r\n            bottom: '-2%',\r\n            left: '50%',\r\n            transform: 'translate(-50%, -50%)',\r\n            zIndex: 1570,\r\n            borderRadius: '10px',\r\n            width: 'fit-content',\r\n            maxWidth: '33%',\r\n            flexWrap: 'wrap'\r\n          }}\r\n        >\r\n          {alert.message}\r\n        </Alert>}\r\n        <Backdrop open={loading} sx={{ zIndex: 1550 }}>\r\n          <CircularProgress color=\"inherit\" />\r\n        </Backdrop>\r\n      </main>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default Routes;\r\n","import Routes from '../../components/routes';\r\nimport { connect } from 'react-redux';\r\nimport { AlertState } from '../../state/reducers/alert';\r\nimport { UserState } from '../../state/reducers/user';\r\nimport { hideError, hideSuccess } from '../../state/actions/alert';\r\n\r\ninterface Props {\r\n  alert: AlertState;\r\n  loading: boolean;\r\n  user: UserState;\r\n  hideError: any;\r\n  hideSuccess: any;\r\n}\r\n\r\nconst RoutesContainer = ({\r\n  alert,\r\n  loading,\r\n  user,\r\n  hideError,\r\n  hideSuccess\r\n}: Props) => {\r\n  const handleAlertClose = () => {\r\n    if (alert.alertType === 'error') {\r\n      hideError();\r\n    } else if (alert.alertType === 'success') {\r\n      hideSuccess();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Routes\r\n      alert={alert}\r\n      loading={loading}\r\n      user={user}\r\n      handleAlertClose={handleAlertClose}\r\n    />\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  alert: state.alert,\r\n  loading: state.loading.isLoading,\r\n  user: state.user\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  hideError: () => dispatch(hideError()),\r\n  hideSuccess: () => dispatch(hideSuccess())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RoutesContainer);\r\n","import { CHANGE_STEP } from '../../actions/step-progress';\r\n\r\ninterface StepProgressState {\r\n  step: number;\r\n}\r\n\r\nconst initialState: StepProgressState = {\r\n  step: 0\r\n}\r\n\r\nexport const stepProgressReducer = (state = initialState, action: any) => {\r\n  switch (action.type) {\r\n    case CHANGE_STEP:\r\n      return {\r\n        ...state,\r\n        step: action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}","import { UPDATE_EMAIL_TEMPLATE } from '../../actions/email-template';\r\n\r\nconst EMAIL_DEFAULT_TEXT = `[insert name],\r\n\r\nThanks for sending over your account list.\r\n\r\nAttached you’ll find a list that maps both our account teams to one another. \r\n\r\nRegards,\r\n\r\n[insert your signature]\r\n`;\r\n\r\nconst initialState = {\r\n  template: EMAIL_DEFAULT_TEXT\r\n};\r\n\r\nexport const emailTemplateReducer = (state = initialState, action: any) => {\r\n  switch(action.type) {\r\n    case UPDATE_EMAIL_TEMPLATE:\r\n      console.log('updating template?', action.payload);\r\n      return { ...state, template: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}","import { SHOW_ERROR, HIDE_ERROR, SHOW_SUCCESS, HIDE_SUCCESS } from '../../actions/alert';\r\nimport { CHANGE_STEP } from '../../actions/step-progress';\r\n\r\nexport interface AlertState {\r\n  isOpen: boolean;\r\n  alertType: any;\r\n  message: string;\r\n};\r\n\r\nconst initialState = {\r\n  isOpen: false,\r\n  alertType: '',\r\n  message: ''\r\n}\r\n\r\nexport const alertReducer = (state: AlertState = initialState, action: any) => {\r\n  switch(action.type) {\r\n    case SHOW_ERROR:\r\n      return {\r\n        ...state,\r\n        isOpen: true,\r\n        alertType: 'error',\r\n        message: action.payload\r\n      };\r\n    case HIDE_ERROR:\r\n    case CHANGE_STEP:\r\n      return {\r\n        ...state,\r\n        isOpen: false,\r\n        alertType: '',\r\n        message: ''\r\n      };\r\n    case SHOW_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isOpen: true,\r\n        alertType: 'success',\r\n        message: action.payload\r\n      };\r\n    case HIDE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isOpen: false,\r\n        alertType: '',\r\n        message: ''\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}","import { SET_IS_LOADING } from '../../actions/loading';\r\n\r\nexport interface LoadingState {\r\n  isLoading: boolean;\r\n};\r\n\r\nconst initialState = {\r\n  isLoading: false\r\n}\r\n\r\nexport const loadingReducer = (state: LoadingState = initialState, action: any) => {\r\n  switch(action.type) {\r\n    case SET_IS_LOADING:\r\n      return { ...state, isLoading: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from 'redux';\r\nimport { documentReducer } from './document';\r\nimport { stepProgressReducer } from './step-progress';\r\nimport { userReducer } from './user';\r\nimport { emailTemplateReducer } from './email-template';\r\nimport { alertReducer } from './alert';\r\nimport { loadingReducer } from './loading';\r\n\r\nexport const rootReducer = combineReducers({\r\n  stepProgress: stepProgressReducer,\r\n  document: documentReducer,\r\n  user: userReducer,\r\n  emailTemplate: emailTemplateReducer,\r\n  alert: alertReducer,\r\n  loading: loadingReducer\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport logger from 'redux-logger';\r\nimport RoutesContainer from './containers/routes';\r\nimport { applyMiddleware, createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport { rootReducer } from './state/reducers';\r\nimport 'devextreme/dist/css/dx.light.css';\r\nimport './index.css';\r\nimport './App.css';\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(logger));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <RoutesContainer />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}