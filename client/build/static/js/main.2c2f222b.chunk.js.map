{"version":3,"sources":["components/file-selection-field/index.tsx","state/actions/document/index.ts","state/actions/alert/index.ts","state/actions/loading/index.ts","utils/validate-file-type.ts","utils/spreadsheet.utils.ts","containers/file-selection-field/index.tsx","components/pinned-file-chip/index.tsx","containers/pinned-file-chip/index.tsx","components/file-source-radio/index.tsx","containers/file-source-radio/index.tsx","components/comparison-column-autocomplete/index.tsx","containers/comparison-column-autocomplete/index.tsx","components/file-structure-help-modal/index.tsx","components/file-structure-radio/index.tsx","containers/file-structure-radio/index.tsx","components/unformatted-data-textfield/index.tsx","containers/unformatted-data-textfield-container/index.tsx","components/partner-name-textfield/index.tsx","containers/partner-name-textfield/index.tsx","components/partner-company-textfield/index.tsx","containers/partner-company-textfield/index.tsx","components/file-data-preview-table/index.tsx","components/choose-column-help-modal/index.tsx","components/file-source-help-modal/index.tsx","components/upload-document-column/index.tsx","containers/upload-document-column/index.tsx","utils/results-preview.utils.ts","components/results-preview-modal/index.tsx","containers/results-preview-modal/index.tsx","utils/duplicates-table.utils.ts","components/upload-document-form/index.tsx","state/actions/step-progress/index.ts","utils/update-comparison-columns.ts","containers/upload-document-form/index.tsx","components/duplicates-table/index.tsx","containers/duplicates-table/index.tsx","components/email-template/index.tsx","state/actions/email-template/index.ts","containers/email-template/index.tsx","components/stepper-footer/index.tsx","containers/stepper-footer/index.tsx","pages/home/index.tsx","containers/home/index.tsx","pages/register/index.tsx","state/actions/user/index.ts","containers/register/index.tsx","pages/email-capture/index.tsx","containers/email-capture/index.tsx","pages/login/index.tsx","containers/login/index.tsx","pages/profile/index.tsx","containers/profile/index.tsx","pages/password-reset/index.tsx","containers/password-reset/index.tsx","pages/forgot-password/index.tsx","containers/forgot-password/index.tsx","components/private-route/index.tsx","components/nav-bar/index.tsx","state/reducers/user/index.ts","containers/nav-bar/index.tsx","components/routes/index.tsx","containers/routes/index.tsx","state/reducers/document/index.ts","state/reducers/step-progress/index.ts","state/reducers/email-template/index.ts","state/reducers/alert/index.ts","state/reducers/loading/index.ts","state/reducers/index.ts","index.tsx"],"names":["FileSelectionField","selectedDocument","validateAndSetFileSelection","index","inputFileRef","useRef","Fab","variant","sx","margin","onClick","current","click","AttachFile","mr","type","ref","className","onChange","event","name","Typography","marginTop","UPLOAD_DOCUMENT_SUCCESS","SELECT_DOCUMENT","CHANGE_COMPARISON_COLUMN","PIN_FILE_SUCCESS","SET_FILE_SOURCE","SET_FILE_STRUCTURE","SET_COMPARISON_COLUMNS_ERROR","SET_ALL_COLUMNS","CHANGE_UNFORMATTED_DATA","CHANGE_PARTNER_NAME","CHANGE_PARTNER_COMPANY","UNFORMATTED_DATA","FORMATTED_DATA","selectDocument","document","payload","columnChooserGridData","length","slice","changeComparisonColumn","value","SHOW_ERROR","HIDE_ERROR","SHOW_SUCCESS","HIDE_SUCCESS","showError","errorMessage","hideError","showSuccess","successMessage","hideSuccess","SET_IS_LOADING","setIsLoading","isLoading","acceptedFileTypes","checkIsValidFileType","fileName","fileNameArray","split","fileExtension","includes","toLowerCase","createJSONFromSpreadsheet","a","arrayBuffer","data","workbook","read","sheetName","SheetNames","worksheet","Sheets","utils","sheet_to_json","downloadSpreadsheetFromJSON","worksheetData","columns","forEach","row","Array","from","Object","keys","push","rowArr","map","rowProp","aoa_to_sheet","book_new","book_append_sheet","writeFile","createFileLink","pinnedFileName","url","window","URL","createObjectURL","Blob","link","createElement","href","setAttribute","body","appendChild","getPinnedFile","pinnedFileId","axios","get","responseType","params","withCredentials","connect","dispatch","message","wsDataObj","filename","target","files","PinnedFileChip","user","handlePinnedFileClick","Chip","icon","Attachment","label","state","pinnedFileData","console","log","FileSourceRadio","fileSource","handleFileTypeChange","FormControl","RadioGroup","marginBottom","FormControlLabel","control","Radio","setFileSource","pinnedFileBlob","setTimeout","CheckBoxOutlineBlank","fontSize","checkedIcon","CheckBox","ComparisonColumnAutocomplete","comparisonColumns","comparisonColumnsError","handleComparisonColumnsBlur","handleComparisonColumnFieldChange","autocompleteOptions","Autocomplete","multiple","disableCloseOnSelect","options","width","renderOption","props","option","selected","Checkbox","style","marginRight","checked","renderInput","TextField","required","error","onBlur","color","join","newValue","setComparisonColumnsError","_","formattedData","Website","DUNS","unformattedData","FileStructureHelpModal","isHelpModalOpen","handleOpenHelpModal","Dialog","open","onClose","DialogTitle","DialogContent","dividers","DialogContentText","id","dataSource","showColumnLines","columnAutoWidth","showBorders","height","caption","calculateCellValue","FileStructureRadio","fileStructure","handleFileStructureChange","useState","setIsHelpModalOpen","FormLabel","IconButton","Help","setFileStructure","UnformattedDataTextField","handleUnformattedDataChange","multiline","maxRows","helperText","changeUnformattedData","PartnerNameTextfield","partnerName","changePartnerName","PartnerCompanyTextfield","partnerCompany","changePartnerCompany","FileDataPreviewTable","handleColumnClick","allowColumnReordering","allowColumnResizing","allColumns","colProps","colIdx","dataField","allowSorting","headerCellRender","column","indexOf","renderGridCell","defaultPageSize","visible","displayMode","showPageSizeSelector","showInfo","showNavigationButtons","ChooseColumnHelpModal","FileSourceHelpModal","UploadDocumentColumn","setAllColumns","isChooseColumnHelpModalOpen","setIsChooseColumnHelpModalOpen","isSelectFileSourceHelpModalOpen","setIsSelectFileSourceHelpModalOpen","useEffect","handleOpenFileSourceHelpModal","handleOpenChooseColumnHelpModal","createDocumentSampleRows","updateColumnsForDocument","documentNumber","concat","ResultsPreviewModal","isPreviewModalOpen","handleClosePreview","resultsData","setResultsData","selectedDocument1","selectedDocument2","comparisonColumns1","comparisonColumns2","fileStructure1","fileStructure2","unformattedData1","unformattedData2","doc1SampleData","doc2SampleData","updatedResultsData","i","reduce","rowObj","col","checkOnePersonsAccountData","capitalizeFirstLetterOfWord","word","toUpperCase","substring","UploadDocumentForm","handleUploadAndCompare","setIsPreviewModalOpen","comparisonColumns1Error","comparisonColumns2Error","fileSource1","fileSource2","isSubmitBtnEnabled","isUserAccountDataValid","isPartnerAccountDataValid","isSubmitButtonEnabled","Grid","container","spacing","direction","justifyContent","alignItems","item","xs","p","Divider","borderColor","Preview","disabled","Upload","CHANGE_STEP","changeStep","newStep","updateComparisonColumns","updatedCol","indexOfCol","splice","addMessageToErrorList","errorList","removeMessageFromErrorList","errMsgIndex","activeStep","stepProgress","step","uploadDocumentSuccess","formData","FormData","docBlob1","JSON","stringify","append","docBlob2","post","then","res","catch","err","DuplicatesTable","duplicatesData","dataGridRef","handleColumnChooserOpen","instance","showColumnChooser","padding","md","customizeColumns","capitalizedUserName","firstname","lastname","capitalizedFirstName","capitalizedLastName","createCapitalizedUserName","capitalizedPartnerCompany","createCapitalizedPartnerCompany","capitalizedPartnerName","createCapitalizedPartnerName","isBand","cssClass","userAccountColumnCount","ownerBand","mode","title","enabled","allowSearch","groupIndex","calculateGroupValue","rowData","accuracy","groupCellRender","displayValue","showInColumnChooser","sortOrder","colName","colIndex","replace","location","locateInMenu","render","component","Button","EmailTemplate","template","handleTemplateChange","handleCopyEmailTemplate","textAreaRef","rows","defaultValue","ContentCopy","Download","UPDATE_EMAIL_TEMPLATE","emailTemplate","updateEmailTemplate","successMsg","navigator","clipboard","writeText","StepperFooter","steps","handleBack","handleNext","Paper","position","bottom","left","right","zIndex","display","flexDirection","elevation","Box","flex","Home","Stepper","nonLinear","marginLeft","Step","StepButton","Container","paddingBottom","maxWidth","Register","onSubmit","formik","useFormik","initialValues","email","password","confirmPassword","firstName","lastName","company","validate","values","errors","test","touched","handleBlur","handleChange","handleSubmit","isSubmitButtonDisabled","to","UPDATE_USER","updateUser","history","useHistory","headers","EmailCapture","AppBar","Toolbar","edge","Close","Login","isEmailCaptureModalOpen","setIsEmailCaptureModalOpen","handleClose","Profile","validateFileSelection","minWidth","pinFileSuccess","fileMetadata","handleFilePinning","file","PasswordReset","useParams","token","ForgotPassword","PrivateRoute","useLocation","pathname","NavBar","handleLogout","React","anchorEl","setAnchorEl","handleHomeClick","flexGrow","size","Handshake","currentTarget","AccountCircle","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","Boolean","MenuItem","textDecoration","initialState","Routes","alert","loading","handleAlertClose","exact","path","HomeContainer","LoginContainer","RegisterContainer","ProfileContainer","ForgotPasswordContainer","PasswordResetContainer","isOpen","Alert","severity","alertType","transform","borderRadius","flexWrap","Backdrop","CircularProgress","MISMATCHED_COLUMNS_ERR","TOO_MANY_COLUMNS_ERR","REQUIRED_ERR","rootReducer","combineReducers","action","errorMsg1","errorMsg2","errorMsg","pinned_filename","pinned_file_id","store","createStore","applyMiddleware","logger","ReactDOM","getElementById"],"mappings":"sWAqDeA,EAxCY,SAAC,GAAqE,IAAnEC,EAAkE,EAAlEA,iBAAkBC,EAAgD,EAAhDA,4BAA6BC,EAAmB,EAAnBA,MACrEC,EAAoBC,iBAAQ,MAYlC,OACE,qCACE,eAACC,EAAA,EAAD,CACEC,QAAQ,WACR,aAAW,MACXC,GAAI,CAAEC,OAAQ,iBACdC,QAb+B,WAE/BN,GAAeA,EAAaO,SAC9BP,EAAaO,QAAQC,SAMrB,UAME,cAACC,EAAA,EAAD,CAAYL,GAAI,CAAEM,GAAI,KANxB,iBASA,uBACEC,KAAK,OACLC,IAAKZ,EACLa,UAAU,aACVC,SAAU,SAACC,GAAD,OAAgBjB,EAA4BiB,EAAOhB,IAC7DiB,KAAK,eAENnB,GAAoBA,EAAiBmB,MACpC,cAACC,EAAA,EAAD,CAAYd,QAAQ,YAAYC,GAAI,CAAEc,UAAW,QAAjD,SACGrB,EAAiBmB,WC9CfG,EAA0B,0BAC1BC,EAAkB,kBAClBC,EAA2B,2BAE3BC,EAAmB,mBACnBC,EAAkB,kBAClBC,EAAqB,qBACrBC,EAA+B,+BAC/BC,EAAkB,kBAClBC,EAA0B,0BAC1BC,EAAsB,sBACtBC,EAAyB,yBAGzBC,EAAmB,mBACnBC,EAAiB,iBAOjBC,EAAiB,SAC5BC,EACAlC,EACAiB,GAEA,MAAO,CACLL,KAAMS,EACNc,QAASD,EACTlC,QACAiB,OACAmB,sBAAuBF,EAASG,OAAS,EACvCH,EAASI,MAAM,EAAG,GAClBJ,IAIOK,EAAyB,SAACC,EAAsBxC,GAAvB,MAA0C,CAC9EY,KAAMU,EACNa,QAASK,EACTxC,UCzCWyC,EAAa,aACbC,EAAa,aACbC,EAAe,eACfC,EAAe,eAEfC,EAAY,SAACC,GAAD,MAA2B,CAClDlC,KAAM6B,EACNN,QAASW,IAGEC,EAAY,iBAAO,CAC9BnC,KAAM8B,IAGKM,EAAc,SAACC,GAAD,MAA6B,CACtDrC,KAAM+B,EACNR,QAASc,IAGEC,EAAc,iBAAO,CAChCtC,KAAM8B,ICpBKS,EAAiB,iBAEjBC,EAAe,SAACC,GAAD,MAAyB,CACnDzC,KAAMuC,EACNhB,QAASkB,ICJLC,EAAoB,CAAC,MAAO,OAAQ,OAE7BC,GAAuB,SAACC,GACnC,IAAMC,EAA+BD,EAASE,MAAM,KAC9CC,EAAwBF,EAAcA,EAAcpB,OAAS,GACnE,OAAOiB,EAAkBM,SAASD,EAAcE,gB,SCFrCC,GAAyB,uCAAG,WAAO5B,GAAP,qBAAA6B,EAAA,sEACpB7B,EAAS8B,cADW,UACjCC,EADiC,OAEjCC,EAAWC,aAAKF,GAChBG,EAAoBF,EAASG,WAAW,KACxCC,EAA8BJ,GAAYA,EAASK,OACvDL,EAASK,OAAOH,GAAoB,MALC,yCAQ9BI,KAAMC,cAAcH,IARU,gCAUhC,IAVgC,2CAAH,sDAazBI,GAA2B,uCAAG,WAAOT,GAAP,qBAAAF,EAAA,sDACnCY,EAAmC,GACrCC,EAAyB,GAC7BX,EAAKY,SAAQ,SAACC,EAAU9E,GACR,IAAVA,IACF4E,EAAUG,MAAMC,KAAKC,OAAOC,KAAKJ,IACjCH,EAAcQ,KAAKP,IAErB,IAAMQ,EAASR,EAAQS,KAAI,SAACC,GAAD,OAAqBR,EAAIQ,MACpDX,EAAcQ,KAAKC,MAEfd,EAAuBE,KAAMe,aAAaZ,GAC1CT,EAAqBM,KAAMgB,WACjChB,KAAMiB,kBAAkBvB,EAAUI,EAAW,UAC7CoB,aAAUxB,EAAU,uBAdqB,2CAAH,sDAiB3ByB,GAAiB,SAAC1B,EAAW2B,GACxC,IAAMC,EAAMC,OAAOC,IAAIC,gBAAgB,IAAIC,KAAK,CAAChC,KAC3CiC,EAAOhE,SAASiE,cAAc,KACpCD,EAAKE,KAAOP,EACZK,EAAKG,aAAa,WAAYT,GAC9B1D,SAASoE,KAAKC,YAAYL,GAC1BA,EAAKzF,SAGM+F,GAAgB,SAACC,GAC5B,OAAOC,IAAMC,IAAI,yBACf,CACEC,aAAc,OACdC,OAAQ,CAAEJ,gBACVK,iBAAiB,KCkBRC,eAAQ,MAPI,SAACC,GAAD,MAAoB,CAC7CnE,UAAW,SAACoE,GAAD,OAAqBD,EAASnE,EAAUoE,KACnDlE,UAAW,kBAAMiE,EAASjE,MAC1BK,aAAc,SAACC,GAAD,OAAwB2D,EAAS5D,EAAaC,KAC5DpB,eAAgB,SAACiF,EAAgBlH,EAAemH,GAAhC,OAAqDH,EAAS/E,EAAeiF,EAAWlH,EAAOmH,QAGlGJ,EA/CqB,SAAC,GAOvB,IANZjH,EAMW,EANXA,iBACA+C,EAKW,EALXA,UACAE,EAIW,EAJXA,UACAK,EAGW,EAHXA,aACAnB,EAEW,EAFXA,eACAjC,EACW,EADXA,MAOOD,EAA2B,uCAAG,WAAOiB,EAAYhB,GAAnB,iBAAA+D,EAAA,yDACnCX,GAAa,GACPlB,EAAgBlB,GAASA,EAAMoG,QAAUpG,EAAMoG,OAAOC,MAC1DrG,EAAMoG,OAAOC,MAAM,GACnB,UAC8BnF,IAAYA,EAASjB,OACnDsC,GAAqBrB,EAASjB,OANG,wBASjC8B,IATiC,SAUGe,GAA0B5B,GAV7B,OAU3BgF,EAV2B,OAWjCjF,EAAeiF,EAAWlH,EAAOkC,EAASjB,MAC1CmC,GAAa,GAZoB,wBAcjCP,EAAU,wEAduB,4CAAH,wDAkBlC,OACE,cAAC,EAAD,CACE/C,iBAAkBA,EAClBC,4BAA6BA,EAC7BC,MAAOA,O,oBC/BEsH,GATQ,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,sBAC9B,OACE,qCACE,cAACtG,EAAA,EAAD,CAAYd,QAAQ,YAApB,0BACA,cAACqH,GAAA,EAAD,CAAMlH,QAASiH,EAAuBE,KAAM,cAACC,GAAA,EAAD,IAAgBC,MAAOL,EAAK3B,qBCqB/DmB,gBATS,SAACc,GAAD,MAAiB,CACvCN,KAAMM,EAAMN,SAGa,SAACP,GAAD,MAAoB,CAC7CnE,UAAW,SAACoE,GAAD,OAAqBD,EAASnE,EAAUoE,KACnDlE,UAAW,kBAAMiE,EAASjE,SAGbgE,EAzBiB,SAAC,GAA2C,IAAzCQ,EAAwC,EAAxCA,KAAM1E,EAAkC,EAAlCA,UACjC2E,GADmE,EAAvBzE,UACvB,uCAAG,4BAAAgB,EAAA,+EAEGyC,GAAce,EAAKd,cAFtB,OAEpBqB,EAFoB,OAG1BnC,GAAemC,EAAe7D,KAAMsD,EAAK3B,gBAHf,gDAK1BmC,QAAQC,IAAI,MAAZ,MACAnF,EAAU,mCANgB,yDAAH,sDAU3B,OACE,cAAC,GAAD,CAAgB0E,KAAMA,EAAMC,sBAAuBA,O,wCCOxCS,GAlBS,SAAC,GAAwD,IAAtDC,EAAqD,EAArDA,WAAYC,EAAyC,EAAzCA,qBAAsBnI,EAAmB,EAAnBA,MAC3D,OACE,cAACoI,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,CACE,kBAAgB,sCAChBpH,KAAK,iCACL6D,KAAG,EACHtC,MAAO0F,EACPnH,SAAU,SAACC,GAAD,OAAgBmH,EAAqBnH,EAAOhB,IACtDK,GAAI,CAAEiI,aAAc,QANtB,UAQE,cAACC,GAAA,EAAD,CAAkB/F,MAAM,SAASgG,QAAS,cAACC,GAAA,EAAD,IAAWb,MAAM,kBAC3D,cAACW,GAAA,EAAD,CAAkB/F,MAAM,SAASgG,QAAS,cAACC,GAAA,EAAD,IAAWb,MAAM,+BCiDpDb,gBAZS,SAACc,GAAD,MAAiB,CACvCN,KAAMM,EAAMN,SAGa,SAACP,GAAD,MAAoB,CAC7CnE,UAAW,SAACoE,GAAD,OAAqBD,EAASnE,EAAUoE,KACnDlE,UAAW,kBAAMiE,EAASjE,MAC1BK,aAAc,SAACC,GAAD,OAAwB2D,EAAS5D,EAAaC,KAC5DpB,eAAgB,SAACiF,EAAgBlH,EAAemH,GAAhC,OAAqDH,EAAS/E,EAAeiF,EAAWlH,EAAOmH,KAC/GuB,cAAe,SAAC1I,EAAegB,GAAhB,OAA+BgG,ETvBnB,SAAChH,EAAewC,GAAhB,MAAmC,CAC9D5B,KAAMY,EACNxB,QACAmC,QAASK,GSoB8CkG,CAAc1I,EAAOgB,QAG/D+F,EAvDkB,SAAC,GASpB,IARZlE,EAQW,EARXA,UACAE,EAOW,EAPXA,UACAK,EAMW,EANXA,aACAnB,EAKW,EALXA,eACAyG,EAIW,EAJXA,cACAR,EAGW,EAHXA,WACAX,EAEW,EAFXA,KACAvH,EACW,EADXA,MAGMmI,EAAoB,uCAAG,WAAOnH,EAAYhB,GAAnB,iBAAA+D,EAAA,yDAC3B2E,EAAc1I,EAAOgB,EAAMoG,OAAO5E,OACP,WAAvBxB,EAAMoG,OAAO5E,MAFU,wBAGzBY,GAAa,GAHY,kBAKMoD,GAAce,EAAKd,cALzB,cAKjBkC,EALiB,gBAMa7E,GAA0B6E,EAAe1E,MANtD,OAMjBiD,EANiB,OAOvBjF,EAAeiF,EAAWlH,EAAOuH,EAAKd,cACtC1D,IACAK,GAAa,GATU,kDAWvB2E,QAAQC,IAAI,MAAZ,MACAnF,EAAU,uCACVO,GAAa,GACbwF,YAAW,WACT7F,MACC,KAhBoB,gCAmBzBd,EAAe,GAAIjC,EAAO,IAnBD,0DAAH,wDAuB1B,OACE,cAAC,GAAD,CACEmI,qBAAsBA,EACtBD,WAAYA,EACZlI,MAAOA,O,kDC7CP0H,GAAO,cAACmB,GAAA,EAAD,CAAsBC,SAAS,UACtCC,GAAc,cAACC,GAAA,EAAD,CAAUF,SAAS,UA8CxBG,GA5CsB,SAAC,GAMxB,IALZnJ,EAKW,EALXA,iBACAoJ,EAIW,EAJXA,kBACAC,EAGW,EAHXA,uBACAC,EAEW,EAFXA,4BACAC,EACW,EADXA,kCAEMC,EAAqCxJ,GAAoBA,EAAiBmE,MAAQnE,EAAiBmE,KAAK,GAC5Gc,MAAMC,KAAKC,OAAOC,KAAKpF,EAAiBmE,KAAK,KAC7C,GAEF,OACE,qCACE,cAACsF,GAAA,EAAD,CACEC,UAAU,EACVC,sBAAsB,EACtBC,QAASJ,EACTvI,SAAUsI,EACV7G,MAAO0G,EACP7I,GAAI,CAAEsJ,MAAO,QACbC,aAAc,SAACC,EAAOC,EAAR,OAAkBC,EAAlB,EAAkBA,SAAlB,OACZ,+CAAQF,GAAR,cACE,cAACG,GAAA,EAAD,CACEtC,KAAMA,GACNqB,YAAaA,GACbkB,MAAO,CAAEC,YAAa,GACtBC,QAASJ,IAEVD,OAGLM,YAAa,SAACvD,GAAD,OAAkB,cAACwD,GAAA,EAAD,2BACzBxD,GADyB,IAE7BzG,QAAQ,WACRkK,UAAU,EACVC,QAASpB,EAAuB9G,OAChCmI,OAAQpB,UAGTD,EAAuB9G,QAAU,cAACnB,EAAA,EAAD,CAAYd,QAAQ,UAAUC,GAAI,CAAEoK,MAAO,WAA3C,SAAyDtB,EAAuBuB,KAAK,YCPhH3D,eAAQ,MALI,SAACC,GAAD,MAAoB,CAC7CzE,uBAAwB,SAACoI,EAAyB3K,GAA1B,OAA4CgH,EAASzE,EAAuBoI,EAAU3K,KAC9G4K,0BAA2B,SAACD,EAAyB3K,GAA1B,OAA4CgH,EXsBhC,SAACxE,EAAsBxC,GAC9D,MAAO,CACLY,KAAMc,EACNS,QAASK,EACTxC,SW1B8E4K,CAA0BD,EAAU3K,QAGvG+G,EAlC+B,SAAC,GAOjC,IANZjH,EAMW,EANXA,iBACAoJ,EAKW,EALXA,kBACA3G,EAIW,EAJXA,uBACA4G,EAGW,EAHXA,uBACAyB,EAEW,EAFXA,0BACA5K,EACW,EADXA,MAWA,OACE,cAAC,GAAD,CACEF,iBAAkBA,EAClBoJ,kBAAmBA,EACnBC,uBAAwBA,EACxBC,4BATgC,WAClCwB,EAA0B1B,EAAmBlJ,IAS3CqJ,kCAfsC,SAACwB,EAAQF,GACjDpI,EAAuBoI,EAAU3K,IAe/BA,MAAOA,O,sEC5BP8K,GAAgB,CACpB,CAAE,eAAgB,YAAaC,QAAS,YAAa,kBAAmB,eAAgBC,KAAM,QAC9F,CAAE,eAAgB,YAAaD,QAAS,gBAAiB,kBAAmB,gBAAiBC,KAAM,QACnG,CAAE,eAAgB,WAAYD,QAAS,eAAgB,kBAAmB,SAAUC,KAAM,SAGtFC,GAAkB,CACtB,YACA,YACA,YAkDaC,GA1CgB,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,gBAAiBC,EAAiC,EAAjCA,oBACjD,OACE,mCACE,eAACC,GAAA,EAAD,CACEC,KAAMH,EACNI,QAASH,EAFX,UAIE,cAACI,GAAA,EAAD,6CACA,eAACC,GAAA,EAAD,CAAeC,UAAU,EAAzB,UACA,cAACC,GAAA,EAAD,sCACA,cAAC,KAAD,CACEC,GAAG,yBACHC,WAAYf,GACZgB,iBAAiB,EACjBC,iBAAiB,EACjBC,aAAa,EACbrC,MAAM,OACNsC,OAAO,SAET,cAAC/K,EAAA,EAAD,CAAYd,QAAQ,QAApB,8FAEA,cAACuL,GAAA,EAAD,CAAmBtL,GAAI,CAAEc,UAAW,UAApC,uCACA,cAAC,KAAD,CACEyK,GAAG,2BACHC,WAAYZ,GACZa,iBAAiB,EACjBC,iBAAiB,EACjBC,aAAa,EACbrC,MAAM,OACNsC,OAAO,OAPT,SASE,cAAC,UAAD,CAAQC,QAAQ,GAAGC,mBAAoB,SAAClI,GAAD,OAAeA,OAExD,cAAC/C,EAAA,EAAD,CAAYd,QAAQ,QAApB,yQCdOgM,GA3BY,SAAC,GAAgE,IAA9DC,EAA6D,EAA7DA,cAAeC,EAA8C,EAA9CA,0BAA2BtM,EAAmB,EAAnBA,MACtE,EAA8CuM,oBAAS,GAAvD,mBAAOpB,EAAP,KAAwBqB,EAAxB,KAEMpB,EAAsB,WAC1BoB,GAAoBrB,IAGtB,OACE,qCACE,eAAC/C,GAAA,EAAD,WACE,eAACqE,EAAA,EAAD,qDAAkD,cAACC,EAAA,EAAD,CAAYnM,QAAS6K,EAArB,SAA0C,cAACuB,GAAA,EAAD,SAC5F,eAACtE,GAAA,EAAD,CACEvD,KAAG,EACH,kBAAgB,sCAChB7D,KAAK,iCACLuB,MAAO6J,EACPtL,SAAU,SAACC,GAAD,OAAgBsL,EAA0BtL,EAAOhB,IAL7D,UAOE,cAACuI,GAAA,EAAD,CAAkB/F,MAAOR,EAAgBwG,QAAS,cAACC,GAAA,EAAD,IAAWb,MAAM,cACnE,cAACW,GAAA,EAAD,CAAkB/F,MAAOT,EAAkByG,QAAS,cAACC,GAAA,EAAD,IAAWb,MAAM,sBAGzE,cAAC,GAAD,CAAwBuD,gBAAiBA,EAAiBC,oBAAqBA,QCHtErE,eAAQ,MAJI,SAACC,GAAD,MAAoB,CAC7C4F,iBAAkB,SAAC5M,EAAegB,GAAhB,OAA+BgG,EdoBnB,SAAChH,EAAewC,GAAhB,MAAmC,CACjE5B,KAAMa,EACNzB,QACAmC,QAASK,GcvBiDoK,CAAiB5M,EAAOgB,QAGrE+F,EA3BqB,SAAC,GAIvB,IAHZ6F,EAGW,EAHXA,iBACAP,EAEW,EAFXA,cACArM,EACW,EADXA,MAMA,OACE,cAAC,GAAD,CACEsM,0BAN8B,SAACtL,EAAYhB,GAC7C4M,EAAiB5M,EAAOgB,EAAMoG,OAAO5E,QAMnC6J,cAAeA,EACfrM,MAAOA,OCCE6M,GAjBkB,SAAC,GAGpB,IAFZ5B,EAEW,EAFXA,gBACA6B,EACW,EADXA,4BAEA,OACE,cAACzC,GAAA,EAAD,CACE0C,WAAS,EACTC,QAAS,EACT5M,QAAQ,WACRC,GAAI,CAAEsJ,MAAO,QACbsD,WAAW,mBACXzK,MAAOyI,EACPlK,SAAU+L,KCYD/F,eAAQ,MAJI,SAACC,GAAD,MAAoB,CAC7CkG,sBAAuB,SAAClN,EAAewC,GAAhB,OAAkCwE,EhBgCtB,SAAChH,EAAewC,GAAhB,MAAmC,CACtE5B,KAAMgB,EACN5B,QACAmC,QAASK,GgBnCyD0K,CAAsBlN,EAAOwC,QAGlFuE,EArB2B,SAAC,GAI7B,IAHZkE,EAGW,EAHXA,gBACAjL,EAEW,EAFXA,MACAkN,EACW,EADXA,sBAMA,OACE,cAAC,GAAD,CACEJ,4BANgC,SAAC9L,GACnCkM,EAAsBlN,EAAOgB,EAAMoG,OAAO5E,QAMxCyI,gBAAiBA,OCERkC,GAjBc,SAAC,GAGhB,IAFZC,EAEW,EAFXA,YACAC,EACW,EADXA,kBAEA,OACE,mCACE,cAAChD,GAAA,EAAD,CACE4C,WAAW,yBACX7M,QAAQ,WACRC,GAAI,CAAEsJ,MAAO,QACbnH,MAAO4K,EACPrM,SAAUsM,OCQHtG,gBARS,SAACc,GAAD,MAAiB,CACvCuF,YAAavF,EAAM3F,SAASkL,gBAGH,SAACpG,GAAD,MAAoB,CAC7CqG,kBAAmB,SAACrM,GAAD,OAAgBgG,GlByDHxE,EkBzD8BxB,EAAMoG,OAAO5E,MlByDxB,CACnD5B,KAAMiB,EACNM,QAASK,KAFsB,IAACA,MkBtDnBuE,EAjBuB,SAAC,GAGzB,IAFZqG,EAEW,EAFXA,YACAC,EACW,EADXA,kBAEA,OACE,cAAC,GAAD,CAAsBD,YAAaA,EAAaC,kBAAmBA,OCUxDC,GAjBiB,SAAC,GAGnB,IAFZC,EAEW,EAFXA,eACAC,EACW,EADXA,qBAEA,OACE,mCACE,cAACnD,GAAA,EAAD,CACE4C,WAAW,kBACX7M,QAAQ,WACRC,GAAI,CAAEsJ,MAAO,QACbnH,MAAO+K,EACPxM,SAAUyM,OCQHzG,gBARS,SAACc,GAAD,MAAiB,CACvC0F,eAAgB1F,EAAM3F,SAASqL,mBAGN,SAACvG,GAAD,MAAoB,CAC7CwG,qBAAsB,SAACxM,GAAD,OAAgBgG,GpB8DHxE,EoB9DiCxB,EAAMoG,OAAO5E,MpB8D3B,CACtD5B,KAAMkB,EACNK,QAASK,KAFyB,IAACA,MoB3DtBuE,EAjB0B,SAAC,GAG5B,IAFZwG,EAEW,EAFXA,eACAC,EACW,EADXA,qBAEA,OACE,cAAC,GAAD,CAAyBD,eAAgBA,EAAgBC,qBAAsBA,OCyDpEC,GAzCc,SAAC,GAKhB,IAJZ3N,EAIW,EAJXA,iBACA4N,EAGW,EAHXA,kBACAxE,EAEW,EAFXA,kBACAlJ,EACW,EADXA,MAEA,OACE,qCACE,cAACkB,EAAA,EAAD,CAAYd,QAAQ,YAAYC,GAAI,CAAEC,OAAQ,cAE9C,eAAC,YAAD,CACEsL,GAAG,gBACHC,WAAY/L,EAAiBsC,sBAC7BuL,uBAAuB,EACvBC,qBAAqB,EACrB7B,iBAAiB,EACjBC,aAAa,EANf,UAQGlM,EAAiB+N,WAAa/N,EAAiB+N,WAAWxI,KAAI,SAACyI,EAAeC,GAC7E,OACE,cAAC,UAAD,CACEC,UAAWF,EACXG,cAAc,EAEdC,iBAAkB,kBA3CT,SACrBjK,EACAyJ,EACAxE,EACAlJ,GAEA,OACE,gCACGiE,EAAKkK,OAAQlK,EAAKkK,OAAOH,UAAY/J,EACtC,cAAC+F,GAAA,EAAD,CACEzJ,QAAS,WACPmN,EAAkBzJ,EAAMjE,IAE1BmK,QAASjB,EAAkBkF,QAAQnK,IAAS,OA8BdoK,CAAeP,EAAUJ,EAAmBxE,EAAmBlJ,KAJzF,cAGc+N,EAHd,UAOC,GACL,cAAC,UAAD,CAAQO,gBAAiB,IACzB,cAAC,SAAD,CACEC,SAAS,EACTC,YAAa,OACbC,sBAAsB,EACtBC,UAAU,EACVC,uBAAuB,WC1BlBC,GAzBe,SAAC,GAAqD,IAAnDzD,EAAkD,EAAlDA,gBAAiBC,EAAiC,EAAjCA,oBAChD,OACE,mCACE,eAACC,GAAA,EAAD,CACEC,KAAMH,EACNI,QAASH,EAFX,UAIE,cAACI,GAAA,EAAD,4EACA,eAACC,GAAA,EAAD,CAAeC,UAAU,EAAzB,UACA,cAACxK,EAAA,EAAD,CAAYd,QAAQ,QAApB,4OAGA,cAACuL,GAAA,EAAD,CAAmBtL,GAAI,CAAEc,UAAW,UAApC,mCACA,cAACD,EAAA,EAAD,CAAYd,QAAQ,QAApB,0NAGA,cAACuL,GAAA,EAAD,CAAmBtL,GAAI,CAAEc,UAAW,UAApC,kCACA,cAACD,EAAA,EAAD,CAAYd,QAAQ,QAApB,8JCIOyO,GArBa,SAAC,GAAqD,IAAnD1D,EAAkD,EAAlDA,gBAAiBC,EAAiC,EAAjCA,oBAC9C,OACE,mCACE,eAACC,GAAA,EAAD,CACEC,KAAMH,EACNI,QAASH,EAFX,UAIE,cAACI,GAAA,EAAD,oEACA,eAACC,GAAA,EAAD,CAAeC,UAAU,EAAzB,UACA,cAACC,GAAA,EAAD,CAAmBtL,GAAI,CAAEc,UAAW,UAApC,+CACA,cAACD,EAAA,EAAD,CAAYd,QAAQ,QAApB,iEACA,cAACuL,GAAA,EAAD,CAAmBtL,GAAI,CAAEc,UAAW,UAApC,gCACA,cAACD,EAAA,EAAD,CAAYd,QAAQ,QAApB,yPC2FO0O,GAtFc,SAAC,GAWI,IAVhChP,EAU+B,EAV/BA,iBACAoJ,EAS+B,EAT/BA,kBACAC,EAQ+B,EAR/BA,uBACAjB,EAO+B,EAP/BA,WACAlI,EAM+B,EAN/BA,MAEA+O,GAI+B,EAL/BxH,KAK+B,EAJ/BwH,eACArB,EAG+B,EAH/BA,kBACArB,EAE+B,EAF/BA,cACApB,EAC+B,EAD/BA,gBAEA,EAAsEsB,oBAAS,GAA/E,mBAAOyC,EAAP,KAAoCC,EAApC,KACA,EAA8E1C,oBAAS,GAAvF,mBAAO2C,EAAP,KAAwCC,EAAxC,KAEAC,qBAAU,WACJtP,EAAiBmE,MAAQnE,EAAiBmE,KAAK,IACjD8K,EAAchK,MAAMC,KAAKC,OAAOC,KAAKpF,EAAiBmE,KAAK,KAAMjE,KAElE,CAACF,EAAiBmE,KAAM8K,EAAe/O,IAE1C,IAAMqP,EAAgC,WACpCF,GAAoCD,IAGhCI,EAAkC,WACtCL,GAAgCD,IAGlC,OACE,qCACE,cAAC9N,EAAA,EAAD,CAAYd,QAAQ,KAAKC,GAAI,CAAEc,UAAW,OAAQmH,aAAc,QAAhE,SACa,IAAVtI,EAAc,cAAgB,uBAEjC,cAAC,GAAD,CACEA,MAAOA,EACPqM,cAAeA,IAEhBA,IAAkBrK,EACjB,qCACE,eAACyK,EAAA,EAAD,CAAWpM,GAAI,CAAEc,UAAW,OAAQmH,aAAc,WAAlD,2BAA6E,cAACoE,EAAA,EAAD,CAAYnM,QAAS8O,EAArB,SAAoD,cAAC1C,GAAA,EAAD,SACjI,cAAC,GAAD,CACEzE,WAAYA,EACZlI,MAAOA,IAET,qBAAKc,UAAU,iBAAf,SACkB,WAAfoH,EACC,cAAC,GAAD,CAA6BpI,iBAAkBA,EAAkBE,MAAOA,IACxE,cAAC,GAAD,MAGJ,eAACyM,EAAA,EAAD,CAAWpM,GAAI,CAAEc,UAAW,SAAUmH,aAAc,WAApD,iEAAqH,cAACoE,EAAA,EAAD,CAAYnM,QAAS+O,EAArB,SAAsD,cAAC3C,GAAA,EAAD,SAC3K,cAAC,GAAD,CACE7M,iBAAkBA,EAClBoJ,kBAAmBA,EACnBC,uBAAwBA,EACxBnJ,MAAOA,IAET,qBAAKiK,MAAO,CAAEN,MAAO,QAArB,SACE,cAAC,GAAD,CACE7J,iBAAkBA,EAClB4N,kBAAmBA,EACnBxE,kBAAmBA,EACnBlJ,MAAOA,SAIb,qCACE,cAACyM,EAAA,EAAD,CAAWpM,GAAI,CAAEc,UAAW,SAAUmH,aAAc,WAApD,6CACA,cAAC,GAAD,CACE2C,gBAAiBA,EACjBjL,MAAOA,OAIF,IAAVA,GAAe,qCACd,cAACyM,EAAA,EAAD,CAAWpM,GAAI,CAAEc,UAAWkL,IAAkBrK,EAAiB,SAAW,OAAQsG,aAAc,UAAhG,gCACA,cAAC,GAAD,IACA,cAAC,GAAD,OAEF,cAAC,GAAD,CAAuB6C,gBAAiB6D,EAA6B5D,oBAAqBkE,IAC1F,cAAC,GAAD,CAAqBnE,gBAAiB+D,EAAiC9D,oBAAqBiE,QC9DnFtI,gBAJS,SAACc,GAAD,MAAiB,CACvCN,KAAMM,EAAMN,QAGCR,EAhCuB,SAAC,GAWzB,IAVZQ,EAUW,EAVXA,KACAzH,EASW,EATXA,iBACAoJ,EAQW,EARXA,kBACAC,EAOW,EAPXA,uBACAjB,EAMW,EANXA,WACAlI,EAKW,EALXA,MACA0N,EAIW,EAJXA,kBACAqB,EAGW,EAHXA,cACA1C,EAEW,EAFXA,cACApB,EACW,EADXA,gBAEA,OACE,cAAC,GAAD,CACEnL,iBAAkBA,EAClBoJ,kBAAmBA,EACnBC,uBAAwBA,EACxBjB,WAAYA,EACZX,KAAMA,EACNvH,MAAOA,EACP0N,kBAAmBA,EACnBqB,cAAeA,EACf1C,cAAeA,EACfpB,gBAAiBA,O,iBCtCVsE,GAA2B,SACtCzP,EACAuM,EACApB,GAgBA,OAbIoB,IAAkBrK,EAChBlC,EAAiBmE,KAAK5B,QAAUvC,EAAiBmE,KAAK5B,OAAS,GACjDvC,EAAiBmE,KAAK3B,MAAM,EAAG,IAE9BxC,EAAiBmE,KAGhCgH,EAAgB5I,QAAU4I,EAAgB5I,OAAS,GACrC4I,EAAgBvH,MAAM,MAAMpB,MAAM,EAAG,IAEpC2I,EAAgBvH,MAAM,OAMhC8L,GAA2B,SACtCnD,EACAnD,EACAuG,GAEA,IAAI7K,EAAyB,GAM7B,OALIyH,IAAkBrK,EACpB4C,EAAUA,EAAQ8K,OAAR,aAAmBxG,IACpBmD,IAAkBtK,GAC3B6C,EAAQO,KAAR,2BAAiCsK,IAE5B7K,GCsDM+K,GA7Ea,SAAC,GAIf,IAHZC,EAGW,EAHXA,mBACAC,EAEW,EAFXA,mBACA3N,EACW,EADXA,SAEA,EAAsCqK,mBAAqB,IAA3D,mBAAOuD,EAAP,KAAoBC,EAApB,KAEEC,EAQE9N,EARF8N,kBACAC,EAOE/N,EAPF+N,kBACAC,EAMEhO,EANFgO,mBACAC,EAKEjO,EALFiO,mBACAC,EAIElO,EAJFkO,eACAC,EAGEnO,EAHFmO,eACAC,EAEEpO,EAFFoO,iBACAC,EACErO,EADFqO,iBAyCF,OAtCAnB,qBAAU,WACR,IAAMoB,EAA6BjB,GAAyBS,EAAmBI,EAAgBE,GACzFG,EAA6BlB,GAAyBU,EAAmBI,EAAgBE,GAE3F3L,EAAsB,GAC1BA,EAAU4K,GAAyBY,EAAgBF,EAAoB,GACvEtL,EAAO,uBAAOA,GAAP,aAAmB4K,GAAyBa,EAAgBF,EAAoB,KAGvF,IADA,IAAMO,EAAqB,GARb,WASLC,GAEP,IAAM7L,EAAMF,EAAQgM,QAAO,SAACC,EAAaC,EAAa9Q,GACpD,OACEoQ,IAAmBpO,GACnBkO,EAAmB9B,QAAQ0C,IAAQ,GACnC9Q,EAAQkQ,EAAmB7N,OAEpB,2BAAKwO,GAAZ,mBAAqBC,EAAMN,EAAeG,GAAGG,IAAQ,OAC5CV,IAAmBrO,GAA8B,IAAV/B,EACzC,2BAAK6Q,GAAZ,IAAoB,qBAAsBL,EAAeG,IAAM,OAE/DN,IAAmBrO,GACnBmO,EAAmB/B,QAAQ0C,IAAQ,IACjCV,IAAmBpO,GAAkBhC,GAASkQ,EAAmB7N,QAClE+N,IAAmBrO,GAAoB/B,EAAQ,GAEzC,2BAAK6Q,GAAZ,mBAAqBC,EAAML,EAAeE,GAAGG,IAAQ,OAC5CT,IAAmBtO,EACrB,2BAAK8O,GAAZ,IAAoB,qBAAsBJ,EAAeE,IAAM,OAE1D,eAAKE,KACX,IACHH,EAAmBvL,KAAKL,IAvBjB6L,EAAI,EAAGA,EAAI,EAAGA,IAAM,EAApBA,GA0BTZ,EAAeW,KACd,CAACV,EAAmBI,EAAgBE,EAAkBL,EAAmBI,EAAgBE,EAAkBL,EAAoBC,IAGhI,eAAC9E,GAAA,EAAD,CACEC,KAAMsE,EACNrE,QAASsE,EAFX,UAIE,cAACrE,GAAA,EAAD,8BACA,eAACC,GAAA,EAAD,CAAeC,UAAU,EAAzB,UACE,cAACC,GAAA,EAAD,CAAmBtL,GAAI,CAAEiI,aAAc,QAAvC,yFACA,cAAC,KAAD,CACEsD,GAAG,yBACHC,WAAYiE,EACZhE,iBAAiB,EACjBC,iBAAiB,EACjBC,aAAa,EACbrC,MAAM,OACNsC,OAAO,gBCtDFlF,gBAJS,SAACc,GAAD,MAAiB,CACvC3F,SAAU2F,EAAM3F,YAGH6E,EAlBsB,SAAC,GAIxB,IAHZ6I,EAGW,EAHXA,mBACAC,EAEW,EAFXA,mBACA3N,EACW,EADXA,SAEA,OACE,cAAC,GAAD,CACE0N,mBAAoBA,EACpBC,mBAAoBA,EACpB3N,SAAUA,O,wCCgBH6O,GAA6B,SACxC1E,EACAvM,EACAoJ,EACA+B,GAEA,GAAIoB,IAAkBrK,EAAgB,CACpC,IAAKlC,IAAqBA,EAAiBmE,OAASnE,EAAiBmE,KAAK5B,OACxE,OAAO,EAET,IAAK6G,IAAsBA,EAAkB7G,OAC3C,OAAO,OAEJ,GAAIgK,IAAkBtK,KACtBkJ,IAAoBA,EAAgB5I,QACvC,OAAO,EAGX,OAAO,GA2BI2O,GAA8B,SAACC,GAAD,OAAkBA,EAAK,GAAGC,cAAgBD,EAAKE,UAAU,ICmErFC,GArIY,SAAC,GAKS,IAJnClP,EAIkC,EAJlCA,SACA6M,EAGkC,EAHlCA,cACArB,EAEkC,EAFlCA,kBACA2D,EACkC,EADlCA,uBAIA,EAAoD9E,oBAAS,GAA7D,mBAAOqD,EAAP,KAA2B0B,EAA3B,KAGEtB,EAYE9N,EAZF8N,kBACAC,EAWE/N,EAXF+N,kBACAC,EAUEhO,EAVFgO,mBACAC,EASEjO,EATFiO,mBACAoB,EAQErP,EARFqP,wBACAC,EAOEtP,EAPFsP,wBACAC,EAMEvP,EANFuP,YACAC,EAKExP,EALFwP,YACAtB,EAIElO,EAJFkO,eACAC,EAGEnO,EAHFmO,eACAC,EAEEpO,EAFFoO,iBACAC,EACErO,EADFqO,iBAaIoB,ED9C6B,SACnCvB,EACAC,EACAH,EACAC,EACAG,EACAC,EACAP,EACAC,GAEA,IAAM2B,EAAyBb,GAC7BX,EACAJ,EACAE,EACAI,GAEIuB,EAA4Bd,GAChCV,EACAJ,EACAE,EACAI,GAGF,OAAIH,IAAmBpO,GAAkBqO,IAAmBrO,GACtDkO,EAAmB7N,SAAW8N,EAAmB9N,SAKhDuP,GAA0BC,ECiBGC,CAClC1B,EACAC,EACAH,EACAC,EACAG,EACAC,EACAP,EACAC,GAGF,OACE,qCACE,cAAC8B,GAAA,EAAD,CACEC,WAAS,EACTC,QAAS,EACTC,UAAU,MACVC,eAAe,SACfC,WAAW,QALb,SAOE,eAACL,GAAA,EAAD,CACEM,MAAI,EACJL,WAAS,EACTM,GAAI,EACJC,EAAG,EACHlS,GAAI,CAAE4L,OAAQ,QACdiG,UAAU,SACVC,eAAe,QACfC,WAAW,SARb,UAUE,cAAC,GAAD,CACElJ,kBAAmBgH,EACnB/G,uBAAwBoI,EACxBzR,iBAAkBkQ,EAClB9H,WAAYuJ,EACZzR,MAAO,EACP+O,cAAeA,EACfrB,kBAAmBA,EACnBrB,cAAe+D,EACfnF,gBAAiBqF,IAEnB,cAACkC,GAAA,EAAD,CAASnS,GAAI,CAAEc,UAAW,OAAQwI,MAAO,OAAQ8I,YAAa,WAAarS,QAAQ,WACnF,cAAC,GAAD,CACE8I,kBAAmBiH,EACnBhH,uBAAwBqI,EACxB1R,iBAAkBmQ,EAClB/H,WAAYwJ,EACZ1R,MAAO,EACP+O,cAAeA,EACfrB,kBAAmBA,EACnBrB,cAAegE,EACfpF,gBAAiBsF,SAIvB,cAACwB,GAAA,EAAD,CACEC,WAAS,EACTG,eAAe,eACfC,WAAW,SACX/R,GAAI,CAAEiI,aAAc,UAJtB,SAME,eAACyJ,GAAA,EAAD,CACEM,MAAI,EACJL,WAAS,EACTM,GAAI,EACJJ,UAAU,SACVC,eAAe,SACfC,WAAW,SANb,UAQE,eAACjS,EAAA,EAAD,CACEC,QAAQ,WACR,aAAW,MACXC,GAAI,CAAEc,UAAW,OAAQmH,aAAc,UACvC/H,QAnFgB,WACxB+Q,GAAsB,IA8EhB,UAME,cAACoB,GAAA,EAAD,CAASrS,GAAI,CAAEM,GAAI,KANrB,qBASA,eAACR,EAAA,EAAD,CACEC,QAAQ,WACRqK,MAAM,UACN,aAAW,MACXkI,UAAWhB,EACXpR,QAAS8Q,EALX,UAOE,cAACuB,GAAA,EAAD,CAAQvS,GAAI,CAAEM,GAAI,KAPpB,6BAYHiP,GAAsB,cAAC,GAAD,CACrBA,mBAAoBA,EACpBC,mBAlGqB,WACzByB,GAAsB,UC7CbuB,GAAc,cAEdC,GAAa,SAACC,GAAD,MAAsB,CAC9CnS,KAAMiS,GACN1Q,QAAS4Q,ICJEC,GAA0B,SAAC9J,EAAkC+J,GACxE,IAAItI,EAA0B,GACxBuI,EAAahK,EAAkBkF,QAAQ6E,GAO7C,OANoB,IAAhBC,EACFvI,EAAQ,uBAAOzB,GAAP,CAA0B+J,KAElCtI,EAAQ,aAAOzB,IACNiK,OAAOD,EAAY,GAEvBvI,GAGIyI,GAAwB,SACnCC,EACAvQ,IAGqB,IADDuQ,EAAUjF,QAAQtL,IACduQ,EAAUlO,KAAKrC,IAG5BwQ,GAA6B,SACxCD,EACAvQ,GAEA,IAAMyQ,EAAcF,EAAUjF,QAAQtL,GAClCyQ,GAAe,GAAGF,EAAUF,OAAOI,EAAa,ICyGvCxM,gBAfS,SAACc,GAAD,MAAiB,CACvC2L,WAAY3L,EAAM4L,aAAaC,KAC/BxR,SAAU2F,EAAM3F,aAGS,SAAC8E,GAAD,MAAoB,CAC7CnE,UAAW,SAACoE,GAAD,OAAqBD,EAASnE,EAAUoE,KACnDlE,UAAW,kBAAMiE,EAASjE,MAC1B4Q,sBAAuB,SAAC1P,GAAD,OAAe+C,EjC1GuB,CAC7DpG,KAAMQ,EACNe,QiCwGqE8B,KACrEb,aAAc,SAACC,GAAD,OAAwB2D,EAAS5D,EAAaC,KAC5DyP,WAAY,SAACU,GAAD,OAAwBxM,EAAS8L,GAAWU,KACxDzE,cAAe,SAACnK,EAAwB5E,GAAzB,OAA2CgH,EjCnD/B,SAACpC,EAAwB5E,GAAzB,MAA4C,CACvEY,KAAMe,EACNQ,QAASyC,EACT5E,SiCgDmE+O,CAAcnK,EAAS5E,KAC1FuC,uBAAwB,SAACoI,EAAyB3K,GAA1B,OAA4CgH,EAASzE,EAAuBoI,EAAU3K,QAGjG+G,EA3GqB,SAAC,GAUvB,IATZyM,EASW,EATXA,WACAtR,EAQW,EARXA,SACAW,EAOW,EAPXA,UACAE,EAMW,EANXA,UACA4Q,EAKW,EALXA,sBACAvQ,EAIW,EAJXA,aACA0P,EAGW,EAHXA,WACA/D,EAEW,EAFXA,cACAxM,EACW,EADXA,uBAyEA,OACE,cAAC,GAAD,CACEL,SAAUA,EACV6M,cAAeA,EACfrB,kBApEsB,SAACoD,EAAU9Q,GACnC,IAAQkQ,EAA2ChO,EAA3CgO,mBAAoBC,EAAuBjO,EAAvBiO,mBACxBxF,EAA0B,GAE5BA,EAAWqI,GADC,IAAVhT,EACiCkQ,EAEAC,EAFoBW,GAKzDvO,EAAuBoI,EAAU3K,IA4D/BqR,uBApD2B,WAC7B,IACErB,EAQE9N,EARF8N,kBACAC,EAOE/N,EAPF+N,kBACAC,EAMEhO,EANFgO,mBACAC,EAKEjO,EALFiO,mBACAC,EAIElO,EAJFkO,eACAC,EAGEnO,EAHFmO,eACAC,EAEEpO,EAFFoO,iBACAC,EACErO,EADFqO,iBAEFnN,GAAa,GACb,IAAMwQ,EAAW,IAAIC,SACrB,GAAI7D,GAAqBA,EAAkB/O,KAAM,CAC/C,IAAM6S,EAAW,IAAI7N,KAAK,CAAC8N,KAAKC,UAAUhE,EAAkB/L,OAAQ,CAAErD,KAAM,qBAC5EgT,EAASK,OAAO,cAAeH,EAAU9D,EAAkB/O,MAG7D,GAAIgP,GAAqBA,EAAkBhP,KAAM,CAC/C,IAAMiT,EAAW,IAAIjO,KAAK,CAAC8N,KAAKC,UAAU/D,EAAkBhM,OAAQ,CAAErD,KAAM,qBAC5EgT,EAASK,OAAO,cAAeC,EAAUjE,EAAkBhP,MAG7D2S,EAASK,OAAO,qBAAsB/D,EAAmBxF,QACzDkJ,EAASK,OAAO,qBAAsB9D,EAAmBzF,QACzDkJ,EAASK,OAAO,iBAAkB7D,GAClCwD,EAASK,OAAO,iBAAkB5D,GAClCuD,EAASK,OAAO,mBAAoB3D,GACpCsD,EAASK,OAAO,mBAAoB1D,GAEpC7J,IAAMyN,KAAK,qBAAsBP,EAAU,CAAE9M,iBAAiB,IAC3DsN,MAAK,SAACC,GACLtR,IACA4Q,EAAsBU,EAAIpQ,MAC1Bb,GAAa,GACb0P,EAAWU,GAAc,MAE1Bc,OAAM,SAACC,GACNxM,QAAQC,IAAI,MAAOuM,GACnBnR,GAAa,GACbP,EAAU,sCACV+F,YAAW,WACT7F,MACC,c,UCyFIyR,GAxKS,SAAC,GASX,IARZC,EAQW,EARXA,eACAvE,EAOW,EAPXA,mBACAC,EAMW,EANXA,mBACAC,EAKW,EALXA,eACAC,EAIW,EAJXA,eACAjD,EAGW,EAHXA,YACAG,EAEW,EAFXA,eACAhG,EACW,EADXA,KAEMmN,EAAmBxU,iBAAY,MA8D/ByU,EAA0B,WAC9BD,EAAYlU,QAAQoU,SAASC,qBAe/B,OACE,cAAC9C,GAAA,EAAD,CACEC,WAAS,EACTG,eAAe,SACfC,WAAW,SACX/R,GAAI,CAAE4L,OAAQ,OAAQ3L,OAAQ,kBAAmBwU,QAAS,UAJ5D,SAME,cAAC/C,GAAA,EAAD,CACEM,MAAI,EACJL,WAAS,EACTM,GAAI,GACJyC,GAAI,GACJxC,EAAG,EACHlS,GAAI,CAAE4L,OAAQ,OAAQtC,MAAO,QAC7BuI,UAAU,SACVC,eAAe,QACfC,WAAW,SATb,SAWE,eAAC,KAAD,CACExG,GAAG,gBACHC,WAAY4I,EACZO,iBAjGiB,SAACpQ,GAExB,IAAIqQ,ELoCiC,SAAC1N,GACxC,GAAIA,GAAQA,EAAK2N,WAAa3N,EAAK4N,SAAU,CAC3C,IAAMC,EAAuBpE,GAA4BzJ,EAAK2N,WACxDG,EAAsBrE,GAA4BzJ,EAAK4N,UAC7D,MAAM,GAAN,OAAUC,EAAV,YAAkCC,GAEpC,MAAO,GK1C6BC,CAA0B/N,GACxDgO,EL2BuC,SAAChI,GAC9C,OAAIA,EAC2BA,EAAe7J,MAAM,KACrC2B,KAAI,SAAC4L,GAAD,OAAkBD,GAA4BC,MAAOvG,KAAK,KAEtE,GKhCmC8K,CAAgCjI,GACpEkI,ELmBoC,SAACrI,GAC3C,OAAIA,EACK4D,GAA4B5D,GAE9B,GKvBgCsI,CAA6BtI,GAElExI,EAAQO,KAAK,CACT+G,QAAQ,cAAD,OAAgB+I,EAAmB,YAAQA,EAAR,KAAiC,IAC3EU,QAAQ,EACRC,SAAU,gBAEdhR,EAAQO,KAAK,CACX+G,QAAQ,GAAD,OAAKqJ,EAAyB,UAAMA,GAA8B,UAAlE,oBAAuFE,EAAsB,YAAQA,EAAR,KAAoC,IACxJE,QAAQ,EACRC,SAAU,mBAIZ,IAAI1M,EAAmC,GACvCA,EAAoBsG,GAAyBY,EAAgBF,EAAoB,GACjFhH,EAAiB,uBAAOA,GAAP,aAA6BsG,GAAyBa,EAAgBF,EAAoB,KAS3G,IALA,IAAI0F,EAAyBzF,IAAmBpO,EAC9CkO,EAAmB7N,OAAS,EAIrBsO,EA3CS,EA2CUA,EAAI/L,EAAQvC,OAAS,EAAGsO,IAC9CzH,EAAkByH,EA5CN,KA4C6B/L,EAAQ+L,GAAGzE,SAAWyE,EAAIkF,EA5CvD,GA6CdjR,EAAQ+L,GAAGmF,UAAYlR,EAAQvC,OAAS,EACxCuC,EAAQ+L,GAAGiF,SAAW,eACb1M,EAAkByH,EA/Cb,KA+CoC/L,EAAQ+L,GAAGzE,UAC7DtH,EAAQ+L,GAAGmF,UAAYlR,EAAQvC,OAAS,EACxCuC,EAAQ+L,GAAGiF,SAAW,mBA+DpB9J,iBAAiB,EACjB6B,uBAAuB,EACvBC,qBAAqB,EACrB7B,iBAAiB,EACjBC,aAAa,EACbrC,MAAM,OACNsC,OAAO,OACPpL,IAAK6T,EAXP,UAaE,cAAC,iBAAD,CACEqB,KAAK,SACLC,MAAM,YACNC,SAAS,EACTC,aAAa,EACbjK,OAAQ,IACRtC,MAAO,MAET,cAAC,UAAD,CACEqE,UAAU,WACVmI,WAAY,EACZlV,KAAK,iBACLmV,oBAvEqB,SAACC,GAC9B,OAAQA,EAAQC,UACd,KAAK,EAEH,MAAM,UACR,KAAK,EACH,MAAM,aACR,KAAK,EACH,MAAM,aAgEFC,gBAhFiB,SAAC7M,GAC1B,IAAIyE,EAASzE,EAAQyE,OACjBqI,EAAuB9M,EAAQlH,MAAMkB,MAAM,KAAK,GACpD,OACI,8BAAMyK,EAAOjC,QAAU,KAAOsK,KA6E1BC,qBAAqB,EACrBC,UAAU,OACVnI,SAAS,IAEVkG,GAAkBA,EAAe,IAAM1P,MAAMC,KAAKC,OAAOC,KAAKuP,EAAe,KAC3EpP,KAAI,SAACsR,EAAiBC,GAAlB,OACH,cAAC,UAAD,CACE5I,UAAW2I,EAEXzK,QAASyK,EAAQE,QAAQ,MAAO,IAChCtI,QAAsB,IAAbqI,EACTH,oBAAiC,aAAZE,GAHhBC,MAMX,cAAC,UAAD,CAAQtI,gBAAiB,KACzB,cAAC,SAAD,CACEC,SAAS,EACTC,YAAa,OACbC,sBAAsB,EACtBC,UAAU,EACVC,uBAAuB,IAEzB,eAAC,WAAD,WACE,cAAC,QAAD,CAAMmI,SAAS,SACbC,aAAa,QACbC,OA1EQ,WAClB,OAAO,qBAAKlW,UAAU,gBAAf,SAA+B,8BAAI2T,EAAepS,OAAnB,mBA2E9B,cAAC,QAAD,CAAMpB,KAAK,sBAAsBgW,UApFf,WAC1B,OACE,cAACC,GAAA,EAAD,CAAQ9W,QAAQ,WAAWG,QAASoU,EAApC,qCCjDS5N,gBAXS,SAACc,GAAD,MAAiB,CACvC4M,eAAgB5M,EAAM3F,SAASuS,eAC/BvE,mBAAoBrI,EAAM3F,SAASgO,mBACnCC,mBAAoBtI,EAAM3F,SAASiO,mBACnCC,eAAgBvI,EAAM3F,SAASkO,eAC/BC,eAAgBxI,EAAM3F,SAASmO,eAC/BjD,YAAavF,EAAM3F,SAASkL,YAC5BG,eAAgB1F,EAAM3F,SAASqL,eAC/BhG,KAAMM,EAAMN,QAGCR,EAnCkB,SAAC,GASpB,IARZ0N,EAQW,EARXA,eACAvE,EAOW,EAPXA,mBACAC,EAMW,EANXA,mBACAC,EAKW,EALXA,eACAC,EAIW,EAJXA,eACAjD,EAGW,EAHXA,YACAG,EAEW,EAFXA,eACAhG,EACW,EADXA,KAEA,OACE,cAAC,GAAD,CACEkN,eAAgBA,EAChBvE,mBAAoBA,EACpBC,mBAAoBA,EACpBC,eAAgBA,EAChBC,eAAgBA,EAChBjD,YAAaA,EACbG,eAAgBA,EAChBhG,KAAMA,O,oBC4CG4P,GA/DO,SAAC,GAKT,IAJZ1C,EAIW,EAJXA,eACA2C,EAGW,EAHXA,SACAC,EAEW,EAFXA,qBACAC,EACW,EADXA,wBAEMC,EAAcrX,iBAAY,MAMhC,OACE,cAAC6R,GAAA,EAAD,CACEC,WAAS,EACTC,QAAS,EACTE,eAAe,SACfC,WAAW,SACX/R,GAAI,CAAE4L,OAAQ,OAAQtC,MAAO,OAAQxI,UAAW,UALlD,SAOE,eAAC4Q,GAAA,EAAD,CACEM,MAAI,EACJL,WAAS,EACTM,GAAI,EACJjS,GAAI,CAAE4L,OAAQ,OAAQtC,MAAO,QAC7BuI,UAAU,SACVC,eAAe,QACfC,WAAW,SAPb,UASE,cAAC/H,GAAA,EAAD,CACEuB,GAAG,2BACHhE,MAAM,iDACNmF,WAAS,EACTlM,IAAK0W,EACLC,KAAM,EACNC,aAAcL,EACdhX,QAAQ,SACRC,GAAI,CAAEsJ,MAAO,QACb5I,SAAUsW,IAEZ,eAAClX,EAAA,EAAD,CACEC,QAAQ,WACR,aAAW,MACXC,GAAI,CAAEc,UAAW,UACjBZ,QAAS+W,EAJX,UAME,cAACI,GAAA,EAAD,CAAarX,GAAI,CAAEM,GAAI,KANzB,mBASA,eAACR,EAAA,EAAD,CACEC,QAAQ,WACR,aAAW,MACXC,GAAI,CAAEc,UAAW,UACjBZ,QA7CsB,WAC5BmE,GAA4B+P,IAwCxB,UAME,cAACkD,GAAA,EAAD,CAAUtX,GAAI,CAAEM,GAAI,KANtB,4BCjEKiX,GAAwB,wBCoEtB7Q,gBAbS,SAACc,GAAD,MAAiB,CACvC4M,eAAgB5M,EAAM3F,SAASuS,eAC/B2C,SAAUvP,EAAMgQ,cAAcT,aAGL,SAACpQ,GAAD,MAAoB,CAC7C8Q,oBAAqB,SAACtV,GAAD,OAAmBwE,ED3DuB,CAC/DpG,KAAMgX,GACNzV,QCyDqEK,KACrEQ,YAAa,SAAC+U,GAAD,OAAwB/Q,EAAShE,EAAY+U,KAC1D7U,YAAa,kBAAM8D,EAAS9D,MAC5BL,UAAW,SAACoE,GAAD,OAAqBD,EAASnE,EAAUoE,KACnDlE,UAAW,kBAAMiE,EAASjE,SAGbgE,EApDgB,SAAC,GAQlB,IAPZ0N,EAOW,EAPXA,eACA2C,EAMW,EANXA,SACAU,EAKW,EALXA,oBACA9U,EAIW,EAJXA,YACAE,EAGW,EAHXA,YACAL,EAEW,EAFXA,UACAE,EACW,EADXA,UAMMuU,EAAuB,uCAAG,sBAAAvT,EAAA,+EAEtBiU,UAAUC,UAAUC,UAAUd,GAFR,OAG5BrU,IACAC,EAAY,yBACZ4F,YAAW,WACT1F,MACC,KAPyB,gDAS5BL,EAAU,iCACV+F,YAAW,WACT7F,MACC,KAZyB,yDAAH,qDAgB7B,OACE,cAAC,GAAD,CACE0R,eAAgBA,EAChB2C,SAAUA,EACVC,qBAxByB,SAACrW,GAC5B8W,EAAoB9W,EAAMoG,OAAO5E,QAwB/B8U,wBAAyBA,O,UCDhBa,GAnCO,SAAC,GAKI,IAJzBC,EAIwB,EAJxBA,MACA5E,EAGwB,EAHxBA,WACA6E,EAEwB,EAFxBA,WACAC,EACwB,EADxBA,WAEA,OACE,eAACC,GAAA,EAAD,CAAOlY,GAAI,CACTmY,SAAU,QACVC,OAAQ,EACRC,KAAM,EACNC,MAAO,EACPC,OAAQ,KACRC,QAAS,OACTC,cAAe,MACfhE,QAAS,WACRiE,UAAW,EATd,UAUE,cAAC7B,GAAA,EAAD,CACEvE,SAAyB,IAAfa,EACVjT,QAAS8X,EACThY,GAAI,CAAEM,GAAI,GAHZ,kBAOA,cAACqY,EAAA,EAAD,CAAK3Y,GAAI,CAAE4Y,KAAM,cACjB,cAAC/B,GAAA,EAAD,CACEvE,SAAUa,IAAe4E,EAAM/V,OAAS,EACxC9B,QAAS+X,EAFX,sBCDSvR,gBARS,SAACc,GAAD,MAAiB,CACvC2L,WAAY3L,EAAM4L,aAAaC,SAGN,SAAC1M,GAAD,MAAoB,CAC7C8L,WAAY,SAACC,GAAD,OAAqB/L,EAAS8L,GAAWC,QAGxChM,EA3BgB,SAAC,GAA8C,IAA5CqR,EAA2C,EAA3CA,MAAO5E,EAAoC,EAApCA,WAAYV,EAAwB,EAAxBA,WASnD,OACE,cAAC,GAAD,CACEU,WAAYA,EACZ4E,MAAOA,EACPE,WAZe,WACjBxF,EAAWU,GAAc,IAYvB6E,WATe,WACjBvF,EAAWU,GAAc,SCHvB4E,GAAuB,CAAC,kBAAmB,eAAgB,mBAmDlDc,GA5CF,SAAC,GAAuC,IAArC1F,EAAoC,EAApCA,WAAYV,EAAwB,EAAxBA,WAC1B,OACE,qCACE,eAACkG,EAAA,EAAD,CAAK3Y,GAAI,CAAEsJ,MAAO,OAAQsC,OAAQ,OAAQ9K,UAAW,SAArD,UACE,cAACgY,EAAA,EAAD,CAASC,WAAW,EAAM5F,WAAYA,EAAYnT,GAAI,CAAEgZ,WAAY,MAAOnP,YAAa,OAAxF,SACGkO,GAAM/S,KAAI,SAACuC,EAAe5H,GAKzB,OACE,cAACsZ,EAAA,EAAD,2BALyC,IAKzC,aACE,cAACC,EAAA,EAAD,yBAAYhZ,QAAS,kBAAMuS,EAAW9S,KAHtC,IAGA,aAA+D4H,OADtDA,QAMD,IAAf4L,GACC,cAAC,WAAD,UACE,cAACgG,EAAA,EAAD,CAAWnZ,GAAI,CAAE4L,OAAQ,OAAQwN,cAAe,QAAhD,SACE,cAAC,GAAD,QAIU,IAAfjG,GACC,cAAC,WAAD,UACE,cAACgG,EAAA,EAAD,CAAWnZ,GAAI,CAAE4L,OAAQ,OAAQtC,MAAO,OAAQ+P,SAAU,QAAUA,UAAU,EAA9E,SACE,cAAC,GAAD,QAIU,IAAflG,GACC,cAAC,WAAD,UACE,cAACgG,EAAA,EAAD,CAAWnZ,GAAI,CAAE4L,OAAQ,OAAQtC,MAAO,QAAxC,SACE,cAAC,GAAD,WAKR,cAAC,GAAD,CAAwByO,MAAOA,SCpCtBrR,gBARS,SAACc,GAAD,MAAiB,CACvC2L,WAAY3L,EAAM4L,aAAaC,SAGN,SAAC1M,GAAD,MAAoB,CAC7C8L,WAAY,SAACC,GAAD,OAAqB/L,EAAS8L,GAAWC,QAGxChM,EAdO,SAAC,GAAuC,IAArCyM,EAAoC,EAApCA,WAAYV,EAAwB,EAAxBA,WACnC,OACE,cAAC,GAAD,CAAMU,WAAYA,EAAYV,WAAYA,O,kBC8K/B6G,GA3KE,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAyBZC,EAASC,aAAU,CACvBC,cAAe,CACbC,MAAO,GACPC,SAAU,GACVC,gBAAiB,GACjBC,UAAW,GACXC,SAAU,GACVC,QAAS,IAEXC,SAhCe,SAACC,GAChB,IAAMC,EAAc,GAmBpB,OAlBKD,EAAON,SAEDM,EAAON,SAAS5X,OAAS,IAClCmY,EAAOP,SAAW,gCAFlBO,EAAOP,SAAW,WAKfM,EAAOL,gBAEDK,EAAOL,kBAAoBK,EAAON,WAC3CO,EAAON,gBAAkB,uBAFzBM,EAAON,gBAAkB,WAKtBK,EAAOP,MAEA,4CAA4CS,KAAKF,EAAOP,SAClEQ,EAAOR,MAAQ,yBAFfQ,EAAOR,MAAQ,WAKVQ,GAaPZ,aAGMW,EAAoEV,EAApEU,OAAQC,EAA4DX,EAA5DW,OAAQE,EAAoDb,EAApDa,QAASC,EAA2Cd,EAA3Cc,WAAYC,EAA+Bf,EAA/Be,aAAcC,EAAiBhB,EAAjBgB,aAErDC,IAA2BN,EAAOR,SAAWQ,EAAOP,YAAcO,EAAON,kBACzEK,EAAOP,QAAUO,EAAON,WAAaM,EAAOL,gBAElD,OACE,mCACE,cAAClB,EAAA,EAAD,CAAK3Y,GAAI,CAAEsJ,MAAO,OAAQxI,UAAW,SAArC,SACE,cAAC4Q,GAAA,EAAD,CACEC,WAAS,EACTC,QAAS,EACTE,eAAe,SACf9R,GAAI,CAAE4L,OAAQ,QAJhB,SAME,eAAC8F,GAAA,EAAD,CACEM,MAAI,EACJL,WAAS,EACTM,GAAI,EACJC,EAAG,EACHlS,GAAI,CAAE4L,OAAQ,QACdiG,UAAU,SACVE,WAAW,SAPb,UASE,cAAClR,EAAA,EAAD,CAAYd,QAAQ,KAAKC,GAAI,CAAEiI,aAAc,QAA7C,sBACA,uBAAMsR,SAAUiB,EAAe5Q,MAAO,CAAEN,MAAO,QAA/C,UACE,cAACU,GAAA,EAAD,CACEC,UAAQ,EACRsB,GAAG,iBACHhE,MAAM,QACN3G,KAAK,QACLb,QAAQ,WACRC,GAAI,CAAEsJ,MAAO,OAAQrB,aAAc,UACnCiC,MAAOmQ,EAAQV,SAAWQ,EAAOR,MACjC/M,WAAYyN,EAAQV,OAAWQ,EAAOR,MAAQQ,EAAOR,MAAQ,KAC7DxP,OAAQmQ,EACR5Z,SAAU6Z,EACVpY,MAAO+X,EAAOP,QAEhB,cAAC3P,GAAA,EAAD,CACEC,UAAQ,EACRsB,GAAG,iBACHhE,MAAM,WACN3G,KAAK,WACLb,QAAQ,WACRQ,KAAK,WACLP,GAAI,CAAEsJ,MAAO,OAAQrB,aAAc,UACnCiC,MAAOmQ,EAAQT,YAAcO,EAAOP,SACpChN,WAAYyN,EAAQT,UAAcO,EAAOP,SAAWO,EAAOP,SAAW,KACtEzP,OAAQmQ,EACR5Z,SAAU6Z,EACVpY,MAAO+X,EAAON,WAEhB,cAAC5P,GAAA,EAAD,CACEC,UAAQ,EACRsB,GAAG,iBACHhE,MAAM,mBACN3G,KAAK,kBACLb,QAAQ,WACRQ,KAAK,WACLP,GAAI,CAAEsJ,MAAO,OAAQrB,aAAc,UACnCiC,MAAOmQ,EAAQR,mBAAqBM,EAAON,gBAC3CjN,WAAYyN,EAAQR,iBAAqBM,EAAON,gBAAkBM,EAAON,gBAAkB,KAC3F1P,OAAQmQ,EACR5Z,SAAU6Z,EACVpY,MAAO+X,EAAOL,kBAEhB,cAAC7P,GAAA,EAAD,CACEuB,GAAG,iBACHhE,MAAM,aACN3G,KAAK,YACLb,QAAQ,WACRC,GAAI,CAAEsJ,MAAO,OAAQrB,aAAc,UACnCkC,OAAQmQ,EACR5Z,SAAU6Z,EACVpY,MAAO+X,EAAOJ,YAEhB,cAAC9P,GAAA,EAAD,CACEuB,GAAG,iBACHhE,MAAM,YACN3G,KAAK,WACLb,QAAQ,WACRC,GAAI,CAAEsJ,MAAO,OAAQrB,aAAc,UACnCkC,OAAQmQ,EACR5Z,SAAU6Z,EACVpY,MAAO+X,EAAOH,WAEhB,cAAC/P,GAAA,EAAD,CACEuB,GAAG,iBACHhE,MAAM,UACN3G,KAAK,UACLb,QAAQ,WACRC,GAAI,CAAEsJ,MAAO,QACba,OAAQmQ,EACR5Z,SAAU6Z,EACVpY,MAAO+X,EAAOF,UAEhB,cAACtI,GAAA,EAAD,CACEC,WAAS,EACTC,QAAS,EACTE,eAAe,SACfC,WAAW,SAJb,SAME,cAACL,GAAA,EAAD,CACEM,MAAI,EACJL,WAAS,EACTM,GAAI,EACJC,EAAG,EACHL,UAAU,SACVC,eAAe,SACfC,WAAW,SAPb,SASE,cAACjS,EAAA,EAAD,CACEC,QAAQ,WACR,aAAW,MACXC,GAAI,CAAEc,UAAW,SAAUkY,WAAY,OAAQnP,YAAa,QAC5DtJ,KAAK,SACL+R,SAAUmI,EALZ,2BAYN,eAAC5Z,EAAA,EAAD,CAAYb,GAAI,CAAEc,UAAW,OAAQmH,aAAc,QAAnD,sCAC2B,cAAC,KAAD,CAAMxH,UAAU,iBAAiBia,GAAG,IAApC,kC,SCjL1BC,GAAc,cAEdC,GAAa,SAAC1T,GAAD,MAAgB,CACxC3G,KAAMoa,GACN7Y,QAASoF,IC8DIR,eAAQ,MAPI,SAACC,GAAD,MAAoB,CAC7CnE,UAAW,SAACoE,GAAD,OAAqBD,EAASnE,EAAUoE,KACnDlE,UAAW,kBAAMiE,EAASjE,MAC1BK,aAAc,SAACC,GAAD,OAAwB2D,EAAS5D,EAAaC,KAC5D4X,WAAY,SAAC1T,GAAD,OAAeP,EAASiU,GAAW1T,QAGlCR,EAlDW,SAAC,GAKb,IAJZ3D,EAIW,EAJXA,aACAP,EAGW,EAHXA,UACAE,EAEW,EAFXA,UACAkY,EACW,EADXA,WAEMC,EAAUC,eAgChB,OACE,cAAC,GAAD,CAAUvB,SA/BK,SAACW,GAChBnX,GAAa,GACb,IAAMwQ,EAAW,IAAIC,SACrBD,EAASK,OAAO,QAASsG,EAAOP,OAChCpG,EAASK,OAAO,WAAYsG,EAAON,UACnCrG,EAASK,OAAO,YAAasG,EAAOJ,WACpCvG,EAASK,OAAO,WAAYsG,EAAOH,UACnCxG,EAASK,OAAO,UAAWsG,EAAOF,SAMlC3T,IAAMyN,KAAK,mBAAoBP,EALhB,CACbwH,QAAS,CACP,eAAgB,yBAIjBhH,MAAK,SAACC,GACLtR,IACAkY,EAAW5G,EAAIpQ,MACfb,GAAa,GACb8X,EAAQ/V,KAAK,YAEdmP,OAAM,SAACC,GACNxM,QAAQC,IAAI,MAAOuM,GACnBnR,GAAa,GACbP,EAAU,wBACV+F,YAAW,WACT7F,MACC,c,8BCkDIsY,GAjFM,SAAC,GAAkC,IAAhC9P,EAA+B,EAA/BA,QAASqO,EAAsB,EAAtBA,SAYzBC,EAASC,aAAU,CACvBC,cAAe,CACbC,MAAO,IAETM,SAde,SAACC,GAChB,IAAMC,EAAc,GAMpB,MAJK,4CAA4CC,KAAKF,EAAOP,SAC3DQ,EAAOR,MAAQ,yBAGVQ,GAQPZ,aAGMW,EAAoEV,EAApEU,OAAQC,EAA4DX,EAA5DW,OAAQE,EAAoDb,EAApDa,QAASC,EAA2Cd,EAA3Cc,WAAYC,EAA+Bf,EAA/Be,aAAcC,EAAiBhB,EAAjBgB,aAE3D,OACE,eAAC7B,EAAA,EAAD,CAAK3Y,GAAI,CAAEsJ,MAAO,OAAQsC,OAAQ,OAAQ6I,QAAS,cAAnD,UACE,cAACwG,GAAA,EAAD,CAAQjb,GAAI,CAAEmY,SAAU,WAAYlQ,aAAc,QAAlD,SACE,cAACiT,GAAA,EAAD,UACE,cAAC7O,EAAA,EAAD,CACE8O,KAAK,MACL/Q,MAAM,UACNlK,QAASgL,EACT,aAAW,QAJb,SAME,cAACkQ,GAAA,EAAD,UAIN,cAAC1J,GAAA,EAAD,CACEC,WAAS,EACTC,QAAS,EACTE,eAAe,SACfC,WAAW,SACX/R,GAAI,CAAE4L,OAAQ,OAAQtC,MAAO,QAL/B,SAOE,cAACoI,GAAA,EAAD,CACEM,MAAI,EACJL,WAAS,EACTM,GAAI,GACJC,EAAG,EACHlS,GAAI,CAAE4L,OAAQ,QACdiG,UAAU,SACVC,eAAe,SACfC,WAAW,SARb,SAUE,uBAAMwH,SAAUiB,EAAhB,UACE,cAAC3Z,EAAA,EAAD,CAAYd,QAAQ,KAAKC,GAAI,CAAEiI,aAAc,QAA7C,4CACA,cAAC+B,GAAA,EAAD,CACEzC,MAAM,gBACNxH,QAAQ,WACRa,KAAK,QACLZ,GAAI,CAAEsJ,MAAO,QACbY,MAAOmQ,EAAQV,SAAWQ,EAAOR,MACjC/M,WAAYuN,EAAOR,MAAQQ,EAAOR,MAAQ,KAC1CxP,OAAQmQ,EACR5Z,SAAU6Z,EACVpY,MAAO+X,EAAOP,QAEhB,cAAC7Z,EAAA,EAAD,CACEC,QAAQ,WACR,aAAW,MACXC,GAAI,CAAEc,UAAW,UACjBP,KAAK,SAJP,+BClBGmG,eAAQ,MARI,SAACC,GAAD,MAAoB,CAC7CnE,UAAW,SAACoE,GAAD,OAAqBD,EAASnE,EAAUoE,KACnDlE,UAAW,kBAAMiE,EAASjE,MAC1BC,YAAa,SAAC+U,GAAD,OAAwB/Q,EAAShE,EAAY+U,KAC1D7U,YAAa,kBAAM8D,EAAS9D,MAC5BE,aAAc,SAACC,GAAD,OAAwB2D,EAAS5D,EAAaC,QAG/C0D,EAnDe,SAAC,GAOjB,IANZwE,EAMW,EANXA,QACA1I,EAKW,EALXA,UACAE,EAIW,EAJXA,UACAC,EAGW,EAHXA,YACAE,EAEW,EAFXA,YACAE,EACW,EADXA,aAgCA,OACE,cAAC,GAAD,CAAcwW,SA/BC,SAACW,GAChBnX,GAAa,GACb,IAAMwQ,EAAW,IAAIC,SACrBD,EAASK,OAAO,QAASsG,EAAOP,OAOhCtT,IAAMyN,KAAK,gBAAiBP,EANb,CACbwH,QAAS,CACP,eAAgB,yBAKjBhH,MAAK,WACJrR,IACAK,GAAa,GACbmI,IACAvI,EAAY,wCACZ4F,YAAW,WACT1F,MACC,QAEJoR,OAAM,SAACC,GACNxM,QAAQC,IAAI,YAAauM,GACzBnR,GAAa,GACbP,EAAU,mDACV+F,YAAW,WACT7F,MACC,SAK2BwI,QAASA,OCyFhCmQ,GA/HD,SAAC,GAAyB,IAAvB9B,EAAsB,EAAtBA,SACf,EAA8DrN,oBAAS,GAAvE,mBAAOoP,EAAP,KAAgCC,EAAhC,KAEMC,EAAc,SAAC7a,GACnB4a,GAA2B,IAkBvB/B,EAASC,aAAU,CACvBC,cAAe,CACbC,MAAO,GACPC,SAAU,IAEZK,SApBe,SAACC,GAChB,IAAMC,EAAc,GAWpB,OAVKD,EAAON,WACVO,EAAOP,SAAW,YAGfM,EAAOP,MAEA,4CAA4CS,KAAKF,EAAOP,SAClEQ,EAAOR,MAAQ,yBAFfQ,EAAOR,MAAQ,WAKVQ,GASPZ,aAGMW,EAAoEV,EAApEU,OAAQC,EAA4DX,EAA5DW,OAAQE,EAAoDb,EAApDa,QAASC,EAA2Cd,EAA3Cc,WAAYC,EAA+Bf,EAA/Be,aAAcC,EAAiBhB,EAAjBgB,aAErDC,IAA2BN,EAAOR,SAAWQ,EAAOP,WACvDM,EAAOP,QAAUO,EAAON,SAE3B,OACE,qCACE,cAACjB,EAAA,EAAD,CAAK3Y,GAAI,CAAEsJ,MAAO,OAAQxI,UAAW,SAArC,SACE,cAAC4Q,GAAA,EAAD,CACEC,WAAS,EACTC,QAAS,EACTE,eAAe,SACf9R,GAAI,CAAE4L,OAAQ,QAJhB,SAME,eAAC8F,GAAA,EAAD,CACEM,MAAI,EACJL,WAAS,EACTM,GAAI,EACJC,EAAG,EACHlS,GAAI,CAAE4L,OAAQ,QACdiG,UAAU,SACVE,WAAW,SAPb,UASE,cAAClR,EAAA,EAAD,CAAYd,QAAQ,KAAKC,GAAI,CAAEiI,aAAc,QAA7C,mBACA,uBAAMsR,SAAUiB,EAAc5Q,MAAO,CAAEN,MAAO,QAA9C,UACE,cAACU,GAAA,EAAD,CACEC,UAAQ,EACRsB,GAAG,iBACHhE,MAAM,QACN3G,KAAK,QACLb,QAAQ,WACRC,GAAI,CAAEsJ,MAAO,OAAQrB,aAAc,UACnCiC,MAAOmQ,EAAQV,SAAWQ,EAAOR,MACjC/M,WAAYyN,EAAQV,OAAWQ,EAAOR,MAAQQ,EAAOR,MAAQ,KAC7DxP,OAAQmQ,EACR5Z,SAAU6Z,EACVpY,MAAO+X,EAAOP,QAEhB,cAAC3P,GAAA,EAAD,CACEC,UAAQ,EACRsB,GAAG,iBACHhE,MAAM,WACN3G,KAAK,WACLb,QAAQ,WACRQ,KAAK,WACLP,GAAI,CAAEsJ,MAAO,QACbY,MAAOmQ,EAAQT,YAAcO,EAAOP,SACpChN,WAAYyN,EAAQT,UAAcO,EAAOP,SAAWO,EAAOP,SAAW,KACtEzP,OAAQmQ,EACR5Z,SAAU6Z,EACVpY,MAAO+X,EAAON,WAEhB,cAAClI,GAAA,EAAD,CACEC,WAAS,EACTC,QAAS,EACTE,eAAe,SACfC,WAAW,SAJb,SAME,cAACL,GAAA,EAAD,CACEM,MAAI,EACJL,WAAS,EACTM,GAAI,EACJC,EAAG,EACHL,UAAU,SACVC,eAAe,SACfC,WAAW,SAPb,SASE,cAACjS,EAAA,EAAD,CACEC,QAAQ,WACR,aAAW,MACXC,GAAI,CAAEc,UAAW,SAAUkY,WAAY,OAAQnP,YAAa,QAC5DtJ,KAAK,SACL+R,SAAUmI,EALZ,2BAYN,eAAC5Z,EAAA,EAAD,CAAYb,GAAI,CAAEc,UAAW,QAA7B,qCAC0B,cAAC,KAAD,CAAML,UAAU,iBAAiBia,GAAG,YAApC,6BAE1B,eAAC7Z,EAAA,EAAD,CAAYb,GAAI,CAAEc,UAAW,SAAUmH,aAAc,QAArD,oCACyB,cAAC,KAAD,CAAMxH,UAAU,iBAAiBia,GAAG,mBAApC,2CAM/B,cAAC1P,GAAA,EAAD,CAAQC,KAAMqQ,EAAyBpQ,QAASsQ,EAAhD,SACE,cAAC,GAAD,CAAuBtQ,QAASsQ,UC7EzB9U,eAAQ,MAPI,SAACC,GAAD,MAAoB,CAC7CnE,UAAW,SAACoE,GAAD,OAAqBD,EAASnE,EAAUoE,KACnDlE,UAAW,kBAAMiE,EAASjE,MAC1BK,aAAc,SAACC,GAAD,OAAwB2D,EAAS5D,EAAaC,KAC5D4X,WAAY,SAAC1T,GAAD,OAAeP,EAASiU,GAAW1T,QAGlCR,EA7CQ,SAAC,GAKV,IAJZ3D,EAIW,EAJXA,aACAP,EAGW,EAHXA,UACAE,EAEW,EAFXA,UACAkY,EACW,EADXA,WAEMC,EAAUC,eA2BhB,OACE,cAAC,GAAD,CAAOvB,SA1BQ,SAACW,GAChBnX,GAAa,GACb,IAAMwQ,EAAW,IAAIC,SACrBD,EAASK,OAAO,QAASsG,EAAOP,OAChCpG,EAASK,OAAO,WAAYsG,EAAON,UAOnCvT,IAAMyN,KAAK,qCAAsCP,EANlC,CACbwH,QAAS,CACP,eAAgB,yBAKjBhH,MAAK,SAACC,GACLtR,IACAkY,EAAW5G,EAAIpQ,MACfb,GAAa,GACb8X,EAAQ/V,KAAK,YAEdmP,OAAM,SAACC,GACNxM,QAAQC,IAAI,MAAOuM,GACnBnR,GAAa,GACbP,EAAU,oCCgDHiZ,GA3EC,SAAC,GAIH,IAHZvU,EAGW,EAHXA,KACAwU,EAEW,EAFXA,sBACAvU,EACW,EADXA,sBAEMvH,EAAoBC,iBAAO,MASjC,OACE,mCACE,cAAC8Y,EAAA,EAAD,CAAK3Y,GAAI,CAAEsJ,MAAO,OAAQxI,UAAW,SAArC,SACE,cAAC4Q,GAAA,EAAD,CACEC,WAAS,EACTC,QAAS,EACTE,eAAe,SACfC,WAAW,SACX/R,GAAI,CAAE4L,OAAQ,QALhB,SAOE,cAAC8F,GAAA,EAAD,CACEM,MAAI,EACJL,WAAS,EACTM,GAAI,EACJC,EAAG,EACHlS,GAAI,CAAE4L,OAAQ,QACdiG,UAAU,SACVC,eAAe,QACfC,WAAW,SARb,SAUE,eAACmG,GAAA,EAAD,CAAOQ,UAAW,EAAG1Y,GAAI,CAAEsJ,MAAO,OAAQmL,QAAS,mBAAoBxU,OAAQ,uBAA/E,UACE,cAACY,EAAA,EAAD,CAAYd,QAAQ,KAAKC,GAAI,CAAEiI,aAAc,QAA7C,qBACA,eAACpH,EAAA,EAAD,CAAYd,QAAQ,YAAYC,GAAI,CAAEiI,aAAc,QAApD,mBAAqEf,EAAK2N,UAA1E,IAAsF3N,EAAK4N,YAC3F,eAACjU,EAAA,EAAD,CAAYd,QAAQ,YAAYC,GAAI,CAAEiI,aAAc,QAApD,oBAAsEf,EAAKyS,SAC3E,eAAC9Y,EAAA,EAAD,CAAYd,QAAQ,YAAYC,GAAI,CAAEiI,aAAc,QAApD,sBAAwEf,EAAK8S,WAC7E,cAACnZ,EAAA,EAAD,CAAYd,QAAQ,YAApB,0BACA,cAACqH,GAAA,EAAD,CAAMlH,QAASiH,EAAuBE,KAAM,cAACC,GAAA,EAAD,IAAgBC,MAAOL,EAAK3B,iBACxE,eAACmM,GAAA,EAAD,CACEM,MAAI,EACJL,WAAS,EACTM,GAAI,EACJC,EAAG,EACHL,UAAU,SACVC,eAAe,QACfC,WAAW,QAPb,UASE,eAACjS,EAAA,EAAD,CACEC,QAAQ,WACR,aAAW,MACXC,GAAI,CAAEc,UAAW,SAAU6a,SAAU,SACrCzb,QA/CoB,WAE9BN,GAAeA,EAAaO,SAC9BP,EAAaO,QAAQC,SAwCX,UAME,cAACmS,GAAA,EAAD,CAAQvS,GAAI,CAAEM,GAAI,KANpB,wBASA,uBACEC,KAAK,OACLC,IAAKZ,EACLa,UAAU,aACVC,SAAUgb,EACV9a,KAAK,8BC4BR8F,gBAXS,SAACc,GAAD,MAAiB,CACvCN,KAAMM,EAAMN,SAGa,SAACP,GAAD,MAAoB,CAC7CnE,UAAW,SAACoE,GAAD,OAAqBD,EAASnE,EAAUoE,KACnDlE,UAAW,kBAAMiE,EAASjE,MAC1BK,aAAc,SAACC,GAAD,OAAwB2D,EAAS5D,EAAaC,KAC5D4Y,eAAgB,SAACC,GAAD,OAAuBlV,EnD/DX,SAACkV,GAAD,MAAwB,CACpDtb,KAAMW,EACNY,QAAS+Z,GmD6DuCD,CAAeC,QAGlDnV,EAxFU,SAAC,GAMZ,IALZQ,EAKW,EALXA,KACAnE,EAIW,EAJXA,aACAP,EAGW,EAHXA,UACAE,EAEW,EAFXA,UACAkZ,EACW,EADXA,eAEMzU,EAAqB,uCAAG,4BAAAzD,EAAA,sEAE1BX,GAAa,GAFa,SAGGoD,GAAce,EAAKd,cAHtB,OAGpBqB,EAHoB,OAI1B1E,GAAa,GACbuC,GAAemC,EAAe7D,KAAMsD,EAAK3B,gBALf,gDAO1BmC,QAAQC,IAAI,MAAZ,MACA5E,GAAa,GACbP,EAAU,mCATgB,yDAAH,qDA4BrBsZ,EAAoB,SAACC,GACzBhZ,GAAa,GACb,IAAMwQ,EAAW,IAAIC,SAEnBuI,GACAA,EAAKnb,OAEL2S,EAASK,OACP,aACAmI,EACAA,EAAKnb,MAEP2S,EAASK,OACP,QACA1M,EAAKyS,QAGTtT,IAAMyN,KAAK,kBAAmBP,GAC3BQ,MAAK,SAACC,GACL4H,EAAe5H,EAAIpQ,MACnBlB,IACAK,GAAa,MAEdkR,OAAM,SAACC,GACNxM,QAAQC,IAAIuM,GACZnR,GAAa,GACbP,EAAU,uBACV+F,YAAW,WACT7F,MACC,SAIT,OACE,cAAC,GAAD,CACEwE,KAAMA,EACNwU,sBAnD0B,SAAC/a,GAC7B,IAAMkB,EAAgBlB,GAASA,EAAMoG,QAAUpG,EAAMoG,OAAOC,MAC1DrG,EAAMoG,OAAOC,MAAM,GACnB,QAC8BnF,IAAYA,EAASjB,OACnDsC,GAAqBrB,EAASjB,OAG9B8B,IACAoZ,EAAkBja,IAElBW,EAAU,qDAyCV2E,sBAAuBA,OCoDd6U,GApIO,SAAC,GAAyB,IAAvBzC,EAAsB,EAAtBA,SAsBjBC,EAASC,aAAU,CACvBC,cAAe,CACbC,MAAO,GACPC,SAAU,GACVC,gBAAiB,IAEnBI,SA3Be,SAACC,GAChB,IAAMC,EAAc,GAiBpB,OAhBKD,EAAOP,QACVQ,EAAOR,MAAQ,YAGZO,EAAON,SAEDM,EAAON,SAAS5X,OAAS,IAClCmY,EAAOP,SAAW,gCAFlBO,EAAOP,SAAW,WAKfM,EAAOL,gBAEDK,EAAOL,kBAAoBK,EAAON,WAC3CO,EAAON,gBAAkB,uBAFzBM,EAAON,gBAAkB,WAKpBM,GAUPZ,aAGMW,EAAoEV,EAApEU,OAAQC,EAA4DX,EAA5DW,OAAQE,EAAoDb,EAApDa,QAASC,EAA2Cd,EAA3Cc,WAAYC,EAA+Bf,EAA/Be,aAAcC,EAAiBhB,EAAjBgB,aAErDC,IAA2BN,EAAOR,SAAWQ,EAAOP,YAAcO,EAAON,kBACzEK,EAAOP,QAAUO,EAAON,WAAaM,EAAOL,gBAElD,OACE,mCACE,cAAClB,EAAA,EAAD,CAAK3Y,GAAI,CAAEsJ,MAAO,OAAQxI,UAAW,SAArC,SACE,cAAC4Q,GAAA,EAAD,CACEC,WAAS,EACTC,QAAS,EACTE,eAAe,SACf9R,GAAI,CAAE4L,OAAQ,QAJhB,SAME,eAAC8F,GAAA,EAAD,CACEM,MAAI,EACJL,WAAS,EACTM,GAAI,EACJC,EAAG,EACHlS,GAAI,CAAE4L,OAAQ,QACdiG,UAAU,SACVE,WAAW,SAPb,UASE,cAAClR,EAAA,EAAD,CAAYd,QAAQ,KAAKC,GAAI,CAAEiI,aAAc,QAA7C,iCACA,uBAAMsR,SAAUiB,EAAe5Q,MAAO,CAAEN,MAAO,QAA/C,UACE,cAACU,GAAA,EAAD,CACEC,UAAQ,EACRsB,GAAG,iBACHhE,MAAM,QACN3G,KAAK,QACLb,QAAQ,WACRC,GAAI,CAAEsJ,MAAO,OAAQrB,aAAc,UACnCiC,MAAOmQ,EAAQV,SAAWQ,EAAOR,MACjC/M,WAAYyN,EAAQV,OAAWQ,EAAOR,MAAQQ,EAAOR,MAAQ,KAC7DxP,OAAQmQ,EACR5Z,SAAU6Z,EACVpY,MAAO+X,EAAOP,QAEhB,cAAC3P,GAAA,EAAD,CACEC,UAAQ,EACRsB,GAAG,iBACHhE,MAAM,WACN3G,KAAK,WACLb,QAAQ,WACRQ,KAAK,WACLP,GAAI,CAAEsJ,MAAO,OAAQrB,aAAc,UACnCiC,MAAOmQ,EAAQT,YAAcO,EAAOP,SACpChN,WAAYyN,EAAQT,UAAcO,EAAOP,SAAWO,EAAOP,SAAW,KACtEzP,OAAQmQ,EACR5Z,SAAU6Z,EACVpY,MAAO+X,EAAON,WAEhB,cAAC5P,GAAA,EAAD,CACEC,UAAQ,EACRsB,GAAG,iBACHhE,MAAM,mBACN3G,KAAK,kBACLb,QAAQ,WACRQ,KAAK,WACLP,GAAI,CAAEsJ,MAAO,QACbY,MAAOmQ,EAAQR,mBAAqBM,EAAON,gBAC3CjN,WAAYyN,EAAQR,iBAAqBM,EAAON,gBAAkBM,EAAON,gBAAkB,KAC3F1P,OAAQmQ,EACR5Z,SAAU6Z,EACVpY,MAAO+X,EAAOL,kBAEhB,cAACnI,GAAA,EAAD,CACEC,WAAS,EACTC,QAAS,EACTE,eAAe,SACfC,WAAW,SAJb,SAME,cAACL,GAAA,EAAD,CACEM,MAAI,EACJL,WAAS,EACTM,GAAI,EACJC,EAAG,EACHL,UAAU,SACVC,eAAe,SACfC,WAAW,SAPb,SASE,cAACjS,EAAA,EAAD,CACEC,QAAQ,WACR,aAAW,MACXC,GAAI,CAAEC,OAAQ,yBACdM,KAAK,SACL+R,SAAUmI,EALZ,6CCjEH/T,eAAQ,MANI,SAACC,GAAD,MAAoB,CAC7CnE,UAAW,SAACoE,GAAD,OAAqBD,EAASnE,EAAUoE,KACnDlE,UAAW,kBAAMiE,EAASjE,MAC1BK,aAAc,SAACC,GAAD,OAAwB2D,EAAS5D,EAAaC,QAG/C0D,EAhDgB,SAAC,GAAmD,IAAjD3D,EAAgD,EAAhDA,aAAcP,EAAkC,EAAlCA,UAAWE,EAAuB,EAAvBA,UACnDmY,EAAUC,eACVtU,EAAcyV,eAEpBlN,qBAAU,WACR1I,IAAMyN,KAAK,wBAAyB,CAAEoI,MAAO1V,EAAO0V,QACjDjI,OAAM,SAACC,GACN2G,EAAQ/V,KAAK,UAEhB,CAAC0B,EAAQqU,IA4BZ,OACE,cAAC,GAAD,CAAetB,SA3BA,SAACW,GAChB,IAAM3G,EAAW,IAAIC,SACrBD,EAASK,OAAO,QAASsG,EAAOP,OAChCpG,EAASK,OAAO,WAAYsG,EAAON,UAMnC7W,GAAa,GACbsD,IAAMyN,KAAK,yBAA0BP,EANtB,CACbwH,QAAS,CACP,eAAgB,yBAKjBhH,MAAK,WACJrR,IACAK,GAAa,GACb8X,EAAQ/V,KAAK,QAEdmP,OAAM,SAACC,GACNxM,QAAQC,IAAI,MAAOuM,GACnBnR,GAAa,GACbP,EAAU,4CACV+F,YAAW,WACT7F,MACC,cC4DIyZ,GA7FQ,SAAC,GAAyB,IAAvB5C,EAAsB,EAAtBA,SAWlBC,EAASC,aAAU,CACvBC,cAAe,CACbC,MAAO,IAETM,SAde,SAACC,GAChB,IAAMC,EAAc,GAMpB,OAJKD,EAAOP,QACVQ,EAAOR,MAAQ,YAGVQ,GAQPZ,aAGMW,EAAoEV,EAApEU,OAAQC,EAA4DX,EAA5DW,OAAQE,EAAoDb,EAApDa,QAASC,EAA2Cd,EAA3Cc,WAAYC,EAA+Bf,EAA/Be,aAAcC,EAAiBhB,EAAjBgB,aAErDC,IAA2BN,EAAOR,QAAUO,EAAOP,MAEzD,OACE,mCACE,cAAChB,EAAA,EAAD,CAAK3Y,GAAI,CAAEsJ,MAAO,OAAQxI,UAAW,SAArC,SACE,cAAC4Q,GAAA,EAAD,CACEC,WAAS,EACTC,QAAS,EACTE,eAAe,SACf9R,GAAI,CAAE4L,OAAQ,QAJhB,SAME,eAAC8F,GAAA,EAAD,CACEM,MAAI,EACJL,WAAS,EACTM,GAAI,EACJC,EAAG,EACHlS,GAAI,CAAE4L,OAAQ,QACdiG,UAAU,SACVE,WAAW,SAPb,UASE,cAAClR,EAAA,EAAD,CAAYd,QAAQ,KAAKC,GAAI,CAAEiI,aAAc,QAA7C,gCACA,cAACpH,EAAA,EAAD,CAAYd,QAAQ,YAAYC,GAAI,CAAEiI,aAAc,SAAUqB,MAAO,OAArE,kIAGA,uBAAMiQ,SAAUiB,EAAe5Q,MAAO,CAAEN,MAAO,QAA/C,UACE,cAACU,GAAA,EAAD,CACEC,UAAQ,EACRsB,GAAG,iBACHhE,MAAM,QACN3G,KAAK,QACLb,QAAQ,WACRC,GAAI,CAAEsJ,MAAO,QACbY,MAAOmQ,EAAQV,SAAWQ,EAAOR,MACjC/M,WAAYuN,EAAOR,MAAQQ,EAAOR,MAAQ,KAC1CxP,OAAQmQ,EACR5Z,SAAU6Z,EACVpY,MAAO+X,EAAOP,QAEhB,cAACjI,GAAA,EAAD,CACEC,WAAS,EACTC,QAAS,EACTE,eAAe,SACfC,WAAW,SAJb,SAME,cAACL,GAAA,EAAD,CACEM,MAAI,EACJL,WAAS,EACTM,GAAI,GACJC,EAAG,EACHL,UAAU,SACVC,eAAe,SACfC,WAAW,SAPb,SASE,cAACjS,EAAA,EAAD,CACEC,QAAQ,WACR,aAAW,MACXC,GAAI,CAAEC,OAAQ,yBACdM,KAAK,SACL+R,SAAUmI,EALZ,wDC1CH/T,eAAQ,MANI,SAACC,GAAD,MAAoB,CAC7CnE,UAAW,SAACoE,GAAD,OAAqBD,EAASnE,EAAUoE,KACnDlE,UAAW,kBAAMiE,EAASjE,MAC1BK,aAAc,SAACC,GAAD,OAAwB2D,EAAS5D,EAAaC,QAG/C0D,EAjCiB,SAAC,GAAmD,IAAjD3D,EAAgD,EAAhDA,aAAcP,EAAkC,EAAlCA,UAAWE,EAAuB,EAAvBA,UAsB1D,OACE,cAAC,GAAD,CAAgB6W,SAtBD,SAACW,GAChB,IAAM3G,EAAW,IAAIC,SACrBD,EAASK,OAAO,QAASsG,EAAOP,OAMhC5W,GAAa,GACbsD,IAAMyN,KAAK,yBAA0BP,EANtB,CACbwH,QAAS,CACP,eAAgB,yBAKjBhH,MAAK,WACJhR,GAAa,GACbL,OAEDuR,OAAM,SAACC,GACNxM,QAAQC,IAAI,MAAOuM,GACnBnR,GAAa,GACbP,EAAU,oCCbH4Z,GAfM,SAAC5S,GACpB,IAAMiN,EAAW4F,eAEjB,OAAO7S,EAAMtC,MAAQsC,EAAMtC,KAAKyS,MAC9B,cAAC,KAAD,eAAWnQ,IAEX,cAAC,KAAD,CACEkR,GAAI,CACF4B,SAAU,IACV9U,MAAO,CAAE7C,KAAM8R,O,wCC2FR8F,GAlFA,SAAC,GAA8C,IAA5CrV,EAA2C,EAA3CA,KAAMsV,EAAqC,EAArCA,aAAc9Z,EAAuB,EAAvBA,UACpC,EAAgC+Z,WAAmC,MAAnE,mBAAOC,EAAP,KAAiBC,EAAjB,KACM9B,EAAUC,eAMVU,EAAc,WAClB9Y,IACAia,EAAY,OAGRC,EAAkB,WACtBla,IACAmY,EAAQ/V,KAAK,UAQf,OACE,cAAC6T,EAAA,EAAD,CAAK3Y,GAAI,CAAE6c,SAAU,GAArB,SACE,cAAC5B,GAAA,EAAD,CAAQ9C,SAAS,SAAjB,SACE,eAAC+C,GAAA,EAAD,WACE,cAAC7O,EAAA,EAAD,CACEyQ,KAAK,QACL3B,KAAK,QACL/Q,MAAM,UACN,aAAW,OACXpK,GAAI,CAAEM,GAAI,GACVJ,QAAS0c,EANX,SAQE,cAACG,GAAA,EAAD,MAEF,cAAClG,GAAA,EAAD,CAAQ9W,QAAQ,OAAOG,QAAS0c,EAAhC,SACE,cAAC/b,EAAA,EAAD,CAAYd,QAAQ,KAAKC,GAAI,CAAE6c,SAAU,EAAGzS,MAAO,SAAnD,wBAKDlD,GAAQA,EAAKyS,OAAS,qCACrB,cAACtN,EAAA,EAAD,CACEyQ,KAAK,QACL,aAAW,0BACX,gBAAc,cACd,gBAAc,OACd5c,QA7CO,SAACS,GAClBgc,EAAYhc,EAAMqc,gBA6CR5S,MAAM,UACNpK,GAAI,CAAEgZ,WAAY,QAPpB,SASE,cAACiE,GAAA,EAAD,MAEF,eAACC,GAAA,EAAD,CACE3R,GAAG,cACHmR,SAAUA,EACVS,aAAc,CACZC,SAAU,MACVC,WAAY,SAEdC,aAAW,EACXC,gBAAiB,CACfH,SAAU,MACVC,WAAY,SAEdpS,KAAMuS,QAAQd,GACdxR,QAASsQ,EAbX,UAeE,cAACiC,GAAA,EAAD,CAAUvd,QAASsb,EAAnB,SACE,cAAC,KAAD,CAAM5R,MAAO,CAAEQ,MAAO,QAASsT,eAAgB,QAAUhD,GAAG,WAA5D,uBAEF,cAAC+C,GAAA,EAAD,CAAUvd,QAvDC,WACrBsb,IACAgB,KAqDU,kCClFDmB,GAA0B,CACrC9I,UAAW,GACXC,SAAU,GACV6E,MAAO,GACPK,QAAS,GACTzU,eAAgB,GAChBa,aAAc,IC2BDM,eAAQ,MANI,SAACC,GAAD,MAAoB,CAC7CnE,UAAW,SAACoE,GAAD,OAAqBD,EAASnE,EAAUoE,KACnDlE,UAAW,kBAAMiE,EAASjE,MAC1BkY,WAAY,SAAC1T,GAAD,OAAeP,EAASiU,GAAW1T,QAGlCR,EA9BS,SAAC,GAA4C,IAA1CQ,EAAyC,EAAzCA,KAAMxE,EAAmC,EAAnCA,UAAWkY,EAAwB,EAAxBA,WACpCC,EAAUC,eAkBhB,OACE,cAAC,GAAD,CAAQ5T,KAAMA,EAAMsV,aAjBD,WAIf5B,EAAW,eAAI+C,KACf9C,EAAQ/V,KAAK,MAY+BpC,UAAWA,O,8BCiChDkb,GA5CA,SAAC,GAKF,IAJZC,EAIW,EAJXA,MACAC,EAGW,EAHXA,QACA5W,EAEW,EAFXA,KACA6W,EACW,EADXA,iBAEA,OACE,cAAC,KAAD,UACE,iCACE,cAAC,GAAD,CAAiB7W,KAAMA,IACvB,eAAC,KAAD,WACE,cAAC,KAAD,CAAO8W,OAAK,EAACC,KAAK,QAAQrH,UAAWsH,KACrC,cAAC,KAAD,CAAOF,OAAK,EAACC,KAAK,IAAIrH,UAAWuH,KACjC,cAAC,KAAD,CAAOH,OAAK,EAACC,KAAK,YAAYrH,UAAWwH,KACzC,cAAC,GAAD,CAAcJ,OAAK,EAACC,KAAK,WAAWrH,UAAWyH,GAAkBnX,KAAMA,IACvE,cAAC,KAAD,CAAO8W,OAAK,EAACC,KAAK,mBAAmBrH,UAAW0H,KAChD,cAAC,KAAD,CAAOL,KAAK,yBAAyBrH,UAAW2H,QAEjDV,EAAMW,QAAU,cAACC,GAAA,EAAD,CACf1e,QAAQ,WACR2e,SAAUb,EAAMc,WAAa,QAC7BzT,QAAS6S,EACT/d,GAAI,CACFmY,SAAU,QACVC,OAAQ,MACRC,KAAM,MACNuG,UAAW,wBACXrG,OAAQ,KACRsG,aAAc,OACdvV,MAAO,cACP+P,SAAU,MACVyF,SAAU,UAbG,SAgBdjB,EAAMjX,UAET,cAACmY,GAAA,EAAD,CAAU9T,KAAM6S,EAAS9d,GAAI,CAAEuY,OAAQ,MAAvC,SACE,cAACyG,GAAA,EAAD,CAAkB5U,MAAM,oBCXnB1D,gBAXS,SAACc,GAAD,MAAiB,CACvCqW,MAAOrW,EAAMqW,MACbC,QAAStW,EAAMsW,QAAQ9a,UACvBkE,KAAMM,EAAMN,SAGa,SAACP,GAAD,MAAoB,CAC7CjE,UAAW,kBAAMiE,EAASjE,MAC1BG,YAAa,kBAAM8D,EAAS9D,SAGf6D,EApCS,SAAC,GAMX,IALZmX,EAKW,EALXA,MACAC,EAIW,EAJXA,QACA5W,EAGW,EAHXA,KACAxE,EAEW,EAFXA,UACAG,EACW,EADXA,YAUA,OACE,cAAC,GAAD,CACEgb,MAAOA,EACPC,QAASA,EACT5W,KAAMA,EACN6W,iBAbqB,WACC,UAApBF,EAAMc,UACRjc,IAC6B,YAApBmb,EAAMc,WACf9b,U,UCeA8a,GAA8B,CAClCvJ,eAAgB,GAChBzE,kBAAmB,CACjB/L,KAAM,GACNhD,KAAM,GACN4M,WAAY,GACZzL,sBAAuB,IAEzB6N,kBAAmB,CACjBhM,KAAM,GACNhD,KAAM,GACN4M,WAAY,GACZzL,sBAAuB,IAEzB8N,mBAAoB,GACpBC,mBAAoB,GACpBsB,YAAa,SACbC,YAAa,SACbH,wBAAyB,GACzBC,wBAAyB,GACzBpB,eAAgBpO,EAChBqO,eAAgBrO,EAChBsO,iBAAkB,GAClBC,iBAAkB,GAClBnD,YAAa,GACbG,eAAgB,IAIL+R,GAAiC,+DACjCC,GAA4B,mBAFO,EAEP,sBAC5BC,GAAuB,gCCjE9BxB,GAAkC,CACtCtK,KAAM,GCMFsK,GAAe,CACnB5G,SAZsB,+LCOlB4G,GAAe,CACnBa,QAAQ,EACRG,UAAW,GACX/X,QAAS,ICNL+W,GAAe,CACnB3a,WAAW,GCCAoc,GAAcC,aAAgB,CACzCjM,aJCiC,WAAwC,IAAvC5L,EAAsC,uDAA9BmW,GAAc2B,EAAgB,uCACxE,OAAQA,EAAO/e,OACRiS,GACI,2BACFhL,GADL,IAEE6L,KAAMiM,EAAOxd,UAGR0F,GIRX3F,SL+D6B,WAAwC,IAAvC2F,EAAsC,uDAA9BmW,GAAc2B,EAAgB,uCACpE,OAAQA,EAAO/e,MACb,KAAKU,EACH,IAAQa,EAAmBwd,EAAnBxd,QAASnC,EAAU2f,EAAV3f,MACb4f,EAAS,aAAO/X,EAAM0J,yBACtBsO,EAAS,aAAOhY,EAAM2J,yBAuC1B,OApCa,IAAVxR,GAAiB6H,EAAMsI,mBAAmB9N,QAAUF,EAAQE,SAAWwF,EAAMsI,mBAAmB9N,QACtF,IAAVrC,GAAiB6H,EAAMqI,mBAAmB7N,QAAUF,EAAQE,SAAWwF,EAAMqI,mBAAmB7N,QAEjG+Q,GAAsBwM,EAAWN,IACjClM,GAAsByM,EAAWP,MAEtB,IAAVtf,GAAemC,EAAQE,SAAWwF,EAAMsI,mBAAmB9N,QACjD,IAAVrC,GAAemC,EAAQE,SAAWwF,EAAMqI,mBAAmB7N,UAE5DiR,GAA2BsM,EAAWN,IACtChM,GAA2BuM,EAAWP,KAE1B,IAAVtf,GACEmC,EAAQE,OA1B4B,EA2BtC+Q,GAAsBwM,EAAWL,IAEjCjM,GAA2BsM,EAAWL,IAEjB,IAAnBpd,EAAQE,OACV+Q,GAAsBwM,EAAWJ,IAEjClM,GAA2BsM,EAAWJ,KAErB,IAAVxf,IACLmC,EAAQE,OArC4B,EAsCtC+Q,GAAsByM,EAAWN,IAEjCjM,GAA2BuM,EAAWN,IAEjB,IAAnBpd,EAAQE,OACV+Q,GAAsByM,EAAWL,IAEjClM,GAA2BuM,EAAWL,KAIrB,IAAjBG,EAAO3f,MACF,2BACF6H,GADL,IAEEqI,mBAAoByP,EAAOxd,QAC3BoP,wBAAyBqO,EACzBpO,wBAAyBqO,IAGpB,2BACFhY,GADL,IAEEsI,mBAAoBwP,EAAOxd,QAC3BoP,wBAAyBqO,EACzBpO,wBAAyBqO,IAG/B,KAAKne,EACH,IAAMoe,EAA4B,IAAjBH,EAAO3f,MAAP,aAAyB6H,EAAM0J,yBAA/B,aAA8D1J,EAAM2J,yBAIrF,OAH8B,IAA1BmO,EAAOxd,QAAQE,QACjB+Q,GAAsB0M,EAAUN,IAEb,IAAjBG,EAAO3f,MACF,2BACF6H,GADL,IAEE0J,wBAAyBuO,IAGpB,2BACFjY,GADL,IAEE2J,wBAAyBsO,IAG/B,KAAKze,EACH,OAAqB,IAAjBse,EAAO3f,MACF,2BACF6H,GADL,IAEEqI,mBAAoB,GACpBF,kBAAmB,CACjB/L,KAAM0b,EAAOxd,QACblB,KAAM0e,EAAO1e,KACbmB,sBAAuBud,EAAOvd,sBAC9ByL,WAAY,MAIT,2BACFhG,GADL,IAEEsI,mBAAoB,GACpBF,kBAAmB,CACjBhM,KAAM0b,EAAOxd,QACblB,KAAM0e,EAAO1e,KACbmB,sBAAuBud,EAAOvd,sBAC9ByL,WAAY,MAIpB,KAAKlM,EACH,OAAqB,IAAjBge,EAAO3f,MACF,2BACF6H,GADL,IAEEmI,kBAAkB,2BACbnI,EAAMmI,mBADM,IAEfnC,WAAY8R,EAAOxd,YAIhB,2BACF0F,GADL,IAEEoI,kBAAkB,2BACbpI,EAAMoI,mBADM,IAEfpC,WAAY8R,EAAOxd,YAI3B,KAAKX,EACH,OAAqB,IAAjBme,EAAO3f,MACF,2BACF6H,GADL,IAEE4J,YAAakO,EAAOxd,UAGf,2BACF0F,GADL,IAEE6J,YAAaiO,EAAOxd,UAG1B,KAAKV,EACH,OAAqB,IAAjBke,EAAO3f,MACL2f,EAAOxd,UAAYH,EACd,2BACF6F,GADL,IAEEuI,eAAgBuP,EAAOxd,QACvBmO,iBAAkB,KAGb,2BACFzI,GADL,IAEEuI,eAAgBuP,EAAOxd,QACvB+N,mBAAoB,GACpBF,kBAAkB,eAAMgO,GAAahO,qBAIrC2P,EAAOxd,UAAYH,EACd,2BACF6F,GADL,IAEEwI,eAAgBsP,EAAOxd,QACvBoO,iBAAkB,KAGb,2BACF1I,GADL,IAEEwI,eAAgBsP,EAAOxd,QACvBgO,mBAAoB,GACpBF,kBAAkB,eAAM+N,GAAa/N,qBAI7C,KAAKrO,EACH,OAAqB,IAAjB+d,EAAO3f,MACF,2BACF6H,GADL,IAEEyI,iBAAkBqP,EAAOxd,UAGpB,2BACF0F,GADL,IAEE0I,iBAAkBoP,EAAOxd,UAG/B,KAAKf,EACH,OAAO,2BACFyG,GADL,IAEE4M,eAAgBkL,EAAOxd,UAE3B,KAAKN,EACH,OAAO,2BACFgG,GADL,IAEEuF,YAAauS,EAAOxd,UAExB,KAAKL,EACH,OAAO,2BACF+F,GADL,IAEE0F,eAAgBoS,EAAOxd,UAE3B,QACE,OAAO0F,IK3PXN,KTUyB,WAAwC,IAAvCM,EAAsC,uDAA9BmW,GAAc2B,EAAgB,uCAChE,OAAQA,EAAO/e,MACb,KAAKoa,GACH,OAAO,2BACFnT,GADL,IAEEmS,MAAO2F,EAAOxd,QAAQ6X,MACtB9E,UAAWyK,EAAOxd,QAAQ+S,UAC1BC,SAAUwK,EAAOxd,QAAQgT,SACzBkF,QAASsF,EAAOxd,QAAQkY,QACxBzU,eAAgB+Z,EAAOxd,QAAQ4d,gBAC/BtZ,aAAckZ,EAAOxd,QAAQ6d,iBAEjC,KAAKze,EAEH,OADAwG,QAAQC,IAAI,qBAAsB2X,EAAOxd,SAClC,2BACF0F,GADL,IAEEjC,eAAgB+Z,EAAOxd,QAAQ4d,gBAC/BtZ,aAAckZ,EAAOxd,QAAQ6d,iBAEjC,QACE,OAAOnY,IS7BXgQ,cHKkC,WAAwC,IAAvChQ,EAAsC,uDAA9BmW,GAAc2B,EAAgB,uCACzE,OAAOA,EAAO/e,OACPgX,IACH7P,QAAQC,IAAI,qBAAsB2X,EAAOxd,SAClC,2BAAK0F,GAAZ,IAAmBuP,SAAUuI,EAAOxd,WAE7B0F,GGVXqW,MFE0B,WAAoD,IAAnDrW,EAAkD,uDAA9BmW,GAAc2B,EAAgB,uCAC7E,OAAOA,EAAO/e,MACZ,KAAK6B,EACH,OAAO,2BACFoF,GADL,IAEEgX,QAAQ,EACRG,UAAW,QACX/X,QAAS0Y,EAAOxd,UAEpB,KAAKO,EACL,KAAKmQ,GACH,OAAO,2BACFhL,GADL,IAEEgX,QAAQ,EACRG,UAAW,GACX/X,QAAS,KAEb,KAAKtE,EACH,OAAO,2BACFkF,GADL,IAEEgX,QAAQ,EACRG,UAAW,UACX/X,QAAS0Y,EAAOxd,UAEpB,KAAKS,EACH,OAAO,2BACFiF,GADL,IAEEgX,QAAQ,EACRG,UAAW,GACX/X,QAAS,KAEb,QACE,OAAOY,IEjCXsW,QDJ4B,WAAsD,IAArDtW,EAAoD,uDAA9BmW,GAAc2B,EAAgB,uCACjF,OAAOA,EAAO/e,OACPuC,EACI,2BAAK0E,GAAZ,IAAmBxE,UAAWsc,EAAOxd,UAE9B0F,KEJPoY,I,qBAAQC,aAAYT,GAAaU,aAAgBC,OAEvDC,IAASrJ,OACP,cAAC,IAAD,CAAUiJ,MAAOA,GAAjB,SACE,cAAC,GAAD,MAEF/d,SAASoe,eAAe,W","file":"static/js/main.2c2f222b.chunk.js","sourcesContent":["import React, { useRef } from 'react';\r\nimport { AttachFile } from '@mui/icons-material';\r\nimport {\r\n  Fab,\r\n  Typography,\r\n} from '@mui/material';\r\n\r\ninterface Props {\r\n  validateAndSetFileSelection: any;\r\n  selectedDocument: any;\r\n  index: number;\r\n}\r\n\r\nconst FileSelectionField = ({ selectedDocument, validateAndSetFileSelection, index }: Props) => {\r\n  const inputFileRef: any = useRef( null );\r\n  \r\n  /**\r\n   * Triggers the clicking of the hidden input (type=file) button\r\n   */\r\n   const handleFileSelectionBtnClick = () => {\r\n    /*Collecting node-element and performing click*/\r\n    if (inputFileRef&& inputFileRef.current) {\r\n      inputFileRef.current.click();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Fab\r\n        variant=\"extended\"\r\n        aria-label=\"add\"\r\n        sx={{ margin: '0.5rem auto 0' }}\r\n        onClick={handleFileSelectionBtnClick}\r\n      >\r\n        <AttachFile sx={{ mr: 1 }} />\r\n        Select File\r\n      </Fab>\r\n      <input\r\n        type=\"file\"\r\n        ref={inputFileRef}\r\n        className=\"file-input\"\r\n        onChange={(event: any) => validateAndSetFileSelection(event, index)}\r\n        name=\"sales_file\"\r\n      />\r\n      {selectedDocument && selectedDocument.name &&\r\n        <Typography variant=\"subtitle1\" sx={{ marginTop: '1rem' }}>\r\n          {selectedDocument.name}\r\n        </Typography>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default FileSelectionField;","export const UPLOAD_DOCUMENT_SUCCESS = 'UPLOAD_DOCUMENT_SUCCESS';\r\nexport const SELECT_DOCUMENT = 'SELECT_DOCUMENT';\r\nexport const CHANGE_COMPARISON_COLUMN = 'CHANGE_COMPARISON_COLUMN';\r\nexport const CHANGE_RESULT_COLUMNS = 'CHANGE_RESULT_COLUMNS';\r\nexport const PIN_FILE_SUCCESS = 'PIN_FILE_SUCCESS';\r\nexport const SET_FILE_SOURCE = 'SET_FILE_SOURCE';\r\nexport const SET_FILE_STRUCTURE = 'SET_FILE_STRUCTURE';\r\nexport const SET_COMPARISON_COLUMNS_ERROR = 'SET_COMPARISON_COLUMNS_ERROR';\r\nexport const SET_ALL_COLUMNS = 'SET_ALL_COLUMNS';\r\nexport const CHANGE_UNFORMATTED_DATA = 'CHANGE_UNFORMATTED_DATA';\r\nexport const CHANGE_PARTNER_NAME = 'CHANGE_PARTNER_NAME';\r\nexport const CHANGE_PARTNER_COMPANY = 'CHANGE_PARTNER_COMPANY';\r\n\r\n// Constants for file structure\r\nexport const UNFORMATTED_DATA = 'UNFORMATTED_DATA';\r\nexport const FORMATTED_DATA = 'FORMATTED_DATA';\r\n\r\nexport const uploadDocumentSuccess = (duplicatesData: any) => ({\r\n  type: UPLOAD_DOCUMENT_SUCCESS,\r\n  payload: duplicatesData\r\n});\r\n\r\nexport const selectDocument = (\r\n  document: any,\r\n  index: number,\r\n  name: string\r\n) => {\r\n  return {\r\n    type: SELECT_DOCUMENT,\r\n    payload: document,\r\n    index,\r\n    name,\r\n    columnChooserGridData: document.length > 2 ?\r\n      document.slice(0, 2) :\r\n      document\r\n  };\r\n}\r\n\r\nexport const changeComparisonColumn = (value: Array<string>, index: number) => ({\r\n  type: CHANGE_COMPARISON_COLUMN,\r\n  payload: value,\r\n  index\r\n});\r\n\r\nexport const pinFileSuccess = (fileMetadata: any) => ({\r\n  type: PIN_FILE_SUCCESS,\r\n  payload: fileMetadata\r\n});\r\n\r\nexport const setFileSource = (index: number, value: string) => ({\r\n  type: SET_FILE_SOURCE,\r\n  index,\r\n  payload: value\r\n});\r\n\r\nexport const setFileStructure = (index: number, value: string) => ({\r\n  type: SET_FILE_STRUCTURE,\r\n  index,\r\n  payload: value\r\n});\r\n\r\nexport const changeUnformattedData = (index: number, value: string) => ({\r\n  type: CHANGE_UNFORMATTED_DATA,\r\n  index,\r\n  payload: value\r\n});\r\n\r\nexport const setComparisonColumnsError = (value: Array<string>, index: number) => {\r\n  return {\r\n    type: SET_COMPARISON_COLUMNS_ERROR,\r\n    payload: value,\r\n    index\r\n  }\r\n}\r\n\r\nexport const setAllColumns = (columns: Array<string>, index: number) => ({\r\n  type: SET_ALL_COLUMNS,\r\n  payload: columns,\r\n  index\r\n});\r\n\r\nexport const changePartnerName = (value: string) => ({\r\n  type: CHANGE_PARTNER_NAME,\r\n  payload: value\r\n});\r\n\r\nexport const changePartnerCompany = (value: string) => ({\r\n  type: CHANGE_PARTNER_COMPANY,\r\n  payload: value\r\n});","export const SHOW_ERROR = 'SHOW_ERROR';\r\nexport const HIDE_ERROR = 'HIDE_ERROR';\r\nexport const SHOW_SUCCESS = 'SHOW_SUCCESS';\r\nexport const HIDE_SUCCESS = 'HIDE_SUCCESS';\r\n\r\nexport const showError = (errorMessage: string) => ({\r\n  type: SHOW_ERROR,\r\n  payload: errorMessage\r\n});\r\n\r\nexport const hideError = () => ({\r\n  type: HIDE_ERROR\r\n});\r\n\r\nexport const showSuccess = (successMessage: string) => ({\r\n  type: SHOW_SUCCESS,\r\n  payload: successMessage\r\n});\r\n\r\nexport const hideSuccess = () => ({\r\n  type: HIDE_ERROR\r\n});","export const SET_IS_LOADING = 'SET_IS_LOADING';\r\n\r\nexport const setIsLoading = (isLoading: boolean) => ({\r\n  type: SET_IS_LOADING,\r\n  payload: isLoading\r\n});","const acceptedFileTypes = ['xls', 'xlsx', 'csv'];\r\n\r\nexport const checkIsValidFileType = (fileName: string): boolean => {\r\n  const fileNameArray: Array<string> = fileName.split('.');\r\n  const fileExtension: string = fileNameArray[fileNameArray.length - 1];\r\n  return acceptedFileTypes.includes(fileExtension.toLowerCase());\r\n}","import { WorkSheet, WorkBook, utils, read, writeFile } from 'xlsx';\r\nimport axios from 'axios';\r\n\r\nexport const createJSONFromSpreadsheet = async (document: any) => {\r\n  const data = await document.arrayBuffer();\r\n  const workbook = read(data);\r\n  const sheetName: string = workbook.SheetNames[0];\r\n  const worksheet: WorkSheet | null = workbook && workbook.Sheets ?\r\n    workbook.Sheets[sheetName as any] : null;\r\n\r\n  if (worksheet) {\r\n    return utils.sheet_to_json(worksheet);\r\n  }\r\n  return [];\r\n}\r\n\r\nexport const downloadSpreadsheetFromJSON = async (data: Array<any>) => {\r\n  const worksheetData: Array<Array<any>> = [];\r\n  let columns: Array<string> = [];\r\n  data.forEach((row: any, index: number) => {\r\n    if (index === 0) {\r\n      columns = Array.from(Object.keys(row));\r\n      worksheetData.push(columns);\r\n    }\r\n    const rowArr = columns.map((rowProp: string) => row[rowProp]);\r\n    worksheetData.push(rowArr);\r\n  });\r\n  const worksheet: WorkSheet = utils.aoa_to_sheet(worksheetData);\r\n  const workbook: WorkBook = utils.book_new();\r\n  utils.book_append_sheet(workbook, worksheet, 'Sheet1');\r\n  writeFile(workbook, 'account-mapping.xls');\r\n}\r\n\r\nexport const createFileLink = (data: any, pinnedFileName: string) => {\r\n  const url = window.URL.createObjectURL(new Blob([data]));\r\n  const link = document.createElement('a');\r\n  link.href = url;\r\n  link.setAttribute('download', pinnedFileName);\r\n  document.body.appendChild(link);\r\n  link.click();\r\n}\r\n\r\nexport const getPinnedFile = (pinnedFileId: string) => {\r\n  return axios.get('/api/v1/viewpinnedfile',\r\n    {\r\n      responseType: 'blob',\r\n      params: { pinnedFileId },\r\n      withCredentials: true\r\n    }\r\n  );\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport FileSelectionField from '../../components/file-selection-field';\r\nimport { selectDocument } from '../../state/actions/document';\r\nimport { showError, hideError } from '../../state/actions/alert';\r\nimport { setIsLoading } from '../../state/actions/loading';\r\nimport { checkIsValidFileType } from '../../utils/validate-file-type';\r\nimport { createJSONFromSpreadsheet } from '../../utils/spreadsheet.utils';\r\n\r\ninterface Props {\r\n  selectedDocument: any;\r\n  showError: any;\r\n  hideError: any;\r\n  setIsLoading: any;\r\n  selectDocument: any;\r\n  index: number;\r\n}\r\n\r\nconst FileSelectionFieldContainer = ({\r\n  selectedDocument,\r\n  showError,\r\n  hideError,\r\n  setIsLoading,\r\n  selectDocument,\r\n  index\r\n}: Props) => {\r\n\r\n  /**\r\n   * When the user selects a document, validate the file type\r\n   * @param event \r\n   */\r\n   const validateAndSetFileSelection = async (event: any, index: number) => {\r\n    setIsLoading(true);\r\n    const document: any = event && event.target && event.target.files ?\r\n      event.target.files[0] :\r\n      null;\r\n    const isValidDocType: boolean = document && document.name ?\r\n      checkIsValidFileType(document.name) : false;\r\n\r\n    if (isValidDocType) {\r\n      hideError();\r\n      const wsDataObj: Array<any> = await createJSONFromSpreadsheet(document);\r\n      selectDocument(wsDataObj, index, document.name);\r\n      setIsLoading(false);\r\n    } else {\r\n      showError('Invalid file type. Only .xls, .xlsx, or .csv files can be processed.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FileSelectionField\r\n      selectedDocument={selectedDocument}\r\n      validateAndSetFileSelection={validateAndSetFileSelection}\r\n      index={index}\r\n    />\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  showError: (message: string) => dispatch(showError(message)),\r\n  hideError: () => dispatch(hideError()),\r\n  setIsLoading: (isLoading: boolean) => dispatch(setIsLoading(isLoading)),\r\n  selectDocument: (wsDataObj: any, index: number, filename: string) => dispatch(selectDocument(wsDataObj, index, filename)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(FileSelectionFieldContainer);","import React from 'react';\r\nimport {\r\n  Typography,\r\n  Chip,\r\n} from '@mui/material';\r\nimport { Attachment } from '@mui/icons-material';\r\nimport { UserState } from '../../state/reducers/user';\r\n\r\ninterface Props {\r\n  user: UserState;\r\n  handlePinnedFileClick: any;\r\n}\r\n\r\nconst PinnedFileChip = ({ user, handlePinnedFileClick }: Props) => {\r\n  return (\r\n    <>\r\n      <Typography variant=\"subtitle1\">Pinned File:</Typography>\r\n      <Chip onClick={handlePinnedFileClick} icon={<Attachment />} label={user.pinnedFileName} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PinnedFileChip;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PinnedFileChip from '../../components/pinned-file-chip';\r\nimport { hideError, showError } from '../../state/actions/alert';\r\nimport { UserState } from '../../state/reducers/user';\r\nimport { createFileLink, getPinnedFile } from '../../utils/spreadsheet.utils';\r\n\r\ninterface Props {\r\n  user: UserState;\r\n  showError: any;\r\n  hideError: any;\r\n}\r\n\r\nconst PinnedFileChipContainer = ({ user, showError, hideError }: Props) => {\r\n  const handlePinnedFileClick = async () => {\r\n    try {\r\n      const pinnedFileData = await getPinnedFile(user.pinnedFileId);\r\n      createFileLink(pinnedFileData.data, user.pinnedFileName);\r\n    } catch (err: any) {\r\n      console.log('err', err);\r\n      showError('Failed to download pinned file.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PinnedFileChip user={user} handlePinnedFileClick={handlePinnedFileClick} />\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  user: state.user,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  showError: (message: string) => dispatch(showError(message)),\r\n  hideError: () => dispatch(hideError()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PinnedFileChipContainer);","import React from 'react';\r\nimport {\r\n  FormControlLabel,\r\n  FormControl,\r\n  Radio,\r\n  RadioGroup\r\n} from '@mui/material';\r\n\r\ninterface Props {\r\n  fileSource: string;\r\n  handleFileTypeChange: any;\r\n  index: number;\r\n}\r\n\r\nconst FileSourceRadio = ({ fileSource, handleFileTypeChange, index }: Props) => {\r\n  return (\r\n    <FormControl>\r\n      <RadioGroup\r\n        aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n        name=\"controlled-radio-buttons-group\"\r\n        row\r\n        value={fileSource}\r\n        onChange={(event: any) => handleFileTypeChange(event, index)}\r\n        sx={{ marginBottom: '1rem' }}\r\n      >\r\n        <FormControlLabel value=\"upload\" control={<Radio />} label=\"Upload a file\" />\r\n        <FormControlLabel value=\"pinned\" control={<Radio />} label=\"Use your pinned file\" />\r\n      </RadioGroup>\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nexport default FileSourceRadio;","import React from 'react';\r\nimport FileSourceRadio from '../../components/file-source-radio';\r\nimport { connect } from 'react-redux';\r\nimport { selectDocument, setFileSource } from '../../state/actions/document';\r\nimport { showError, hideError } from '../../state/actions/alert';\r\nimport { setIsLoading } from '../../state/actions/loading';\r\nimport { createJSONFromSpreadsheet, getPinnedFile } from '../../utils/spreadsheet.utils';\r\nimport { UserState } from '../../state/reducers/user';\r\n\r\ninterface Props {\r\n  showError: any;\r\n  hideError: any;\r\n  setIsLoading: any;\r\n  selectDocument: any;\r\n  setFileSource: any;\r\n  fileSource: string;\r\n  user: UserState;\r\n  index: number;\r\n}\r\n\r\nconst FileSourceRadioContainer = ({\r\n  showError,\r\n  hideError,\r\n  setIsLoading,\r\n  selectDocument,\r\n  setFileSource,\r\n  fileSource,\r\n  user,\r\n  index\r\n}: Props) => {\r\n\r\n  const handleFileTypeChange = async (event: any, index: number) => {\r\n    setFileSource(index, event.target.value);\r\n    if (event.target.value === 'pinned') {\r\n      setIsLoading(true);\r\n      try {\r\n        const pinnedFileBlob = await getPinnedFile(user.pinnedFileId);\r\n        const wsDataObj: Array<any> = await createJSONFromSpreadsheet(pinnedFileBlob.data);\r\n        selectDocument(wsDataObj, index, user.pinnedFileId);\r\n        hideError();\r\n        setIsLoading(false);\r\n      } catch (err: any) {\r\n        console.log('err', err);\r\n        showError('Failed to get pinned file for user.');\r\n        setIsLoading(false);\r\n        setTimeout(() => {\r\n          hideError();\r\n        }, 5000);\r\n      }\r\n    } else {\r\n      selectDocument([], index, '');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <FileSourceRadio\r\n      handleFileTypeChange={handleFileTypeChange}\r\n      fileSource={fileSource}\r\n      index={index}\r\n    />\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  user: state.user\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  showError: (message: string) => dispatch(showError(message)),\r\n  hideError: () => dispatch(hideError()),\r\n  setIsLoading: (isLoading: boolean) => dispatch(setIsLoading(isLoading)),\r\n  selectDocument: (wsDataObj: any, index: number, filename: string) => dispatch(selectDocument(wsDataObj, index, filename)),\r\n  setFileSource: (index: number, event: any) => dispatch(setFileSource(index, event))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FileSourceRadioContainer);","import React from 'react';\r\nimport { TextField, Autocomplete, Typography, Checkbox } from '@mui/material';\r\nimport { CheckBoxOutlineBlank, CheckBox } from '@mui/icons-material';\r\n\r\ninterface Props {\r\n  selectedDocument: any;\r\n  comparisonColumns: Array<string>;\r\n  comparisonColumnsError: Array<string>;\r\n  handleComparisonColumnsBlur: any;\r\n  handleComparisonColumnFieldChange: any;\r\n  index: number;\r\n}\r\n\r\nconst icon = <CheckBoxOutlineBlank fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBox fontSize=\"small\" />;\r\n\r\nconst ComparisonColumnAutocomplete = ({\r\n  selectedDocument,\r\n  comparisonColumns,\r\n  comparisonColumnsError,\r\n  handleComparisonColumnsBlur,\r\n  handleComparisonColumnFieldChange,\r\n}: Props) => {\r\n  const autocompleteOptions: Array<string> = selectedDocument && selectedDocument.data && selectedDocument.data[0] ?\r\n    Array.from(Object.keys(selectedDocument.data[0])) :\r\n    [];\r\n\r\n  return (\r\n    <>\r\n      <Autocomplete\r\n        multiple={true}\r\n        disableCloseOnSelect={true}\r\n        options={autocompleteOptions}\r\n        onChange={handleComparisonColumnFieldChange}\r\n        value={comparisonColumns}\r\n        sx={{ width: '100%' }}\r\n        renderOption={(props, option, { selected }) => (\r\n          <li {...props}>\r\n            <Checkbox\r\n              icon={icon}\r\n              checkedIcon={checkedIcon}\r\n              style={{ marginRight: 8 }}\r\n              checked={selected}\r\n            />\r\n            {option}\r\n          </li>\r\n        )}\r\n        renderInput={(params: any) => (<TextField\r\n          {...params}\r\n          variant=\"standard\"\r\n          required={true}\r\n          error={!!comparisonColumnsError.length}\r\n          onBlur={handleComparisonColumnsBlur}\r\n        />)}\r\n      />\r\n      {!!comparisonColumnsError.length && <Typography variant=\"caption\" sx={{ color: '#d32f2f' }}>{comparisonColumnsError.join('\\n')}</Typography>}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ComparisonColumnAutocomplete;","import React from 'react';\r\nimport ComparisonColumnAutocomplete from '../../components/comparison-column-autocomplete';\r\nimport { connect } from 'react-redux';\r\nimport { changeComparisonColumn, setComparisonColumnsError } from '../../state/actions/document';\r\n\r\ninterface Props {\r\n  selectedDocument: any;\r\n  comparisonColumns: Array<string>;\r\n  changeComparisonColumn: any;\r\n  comparisonColumnsError: Array<string>;\r\n  setComparisonColumnsError: any;\r\n  index: number;\r\n}\r\n\r\nconst ComparisonColumnAutocompleteContainer = ({\r\n  selectedDocument,\r\n  comparisonColumns,\r\n  changeComparisonColumn,\r\n  comparisonColumnsError,\r\n  setComparisonColumnsError,\r\n  index\r\n}: Props) => {\r\n  const handleComparisonColumnFieldChange = (_: any, newValue: Array<string>) => {\r\n    changeComparisonColumn(newValue, index);\r\n    // setComparisonColumnsError(newValue, index)\r\n  };\r\n\r\n  const handleComparisonColumnsBlur = () => {\r\n    setComparisonColumnsError(comparisonColumns, index)\r\n  };\r\n\r\n  return (\r\n    <ComparisonColumnAutocomplete\r\n      selectedDocument={selectedDocument}\r\n      comparisonColumns={comparisonColumns}\r\n      comparisonColumnsError={comparisonColumnsError}\r\n      handleComparisonColumnsBlur={handleComparisonColumnsBlur}\r\n      handleComparisonColumnFieldChange={handleComparisonColumnFieldChange}\r\n      index={index}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  changeComparisonColumn: (newValue: Array<string>, index: number) => dispatch(changeComparisonColumn(newValue, index)),\r\n  setComparisonColumnsError: (newValue: Array<string>, index: number) => dispatch(setComparisonColumnsError(newValue, index))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ComparisonColumnAutocompleteContainer);","import React from 'react';\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  Typography\r\n} from '@mui/material';\r\nimport DataGrid, { Column } from 'devextreme-react/data-grid';\r\n\r\nconst formattedData = [\r\n  { 'Account Name': 'Pepsi Co.', Website: 'pepsi.com', 'Account Manager': 'Thomas Henry', DUNS: 123453 },\r\n  { 'Account Name': 'Tropicana', Website: 'tropicana.com', 'Account Manager': 'Jennifer Shaw', DUNS: 345234 },\r\n  { 'Account Name': 'Gatorade', Website: 'gatorade.com', 'Account Manager': 'Kim Yi', DUNS: 645345 }\r\n];\r\n\r\nconst unformattedData = [\r\n  'Pepsi Co.',\r\n  'Tropicana',\r\n  'Gatorade'\r\n];\r\n\r\ninterface Props {\r\n  isHelpModalOpen: boolean;\r\n  handleOpenHelpModal: any;\r\n}\r\n\r\nconst FileStructureHelpModal = ({ isHelpModalOpen, handleOpenHelpModal }: Props) => {\r\n  return (\r\n    <>\r\n      <Dialog\r\n        open={isHelpModalOpen}\r\n        onClose={handleOpenHelpModal}\r\n      >\r\n        <DialogTitle>Formatted vs. Unformatted Data</DialogTitle>\r\n        <DialogContent dividers={true}>\r\n        <DialogContentText>Formatted data example:</DialogContentText>\r\n        <DataGrid\r\n          id=\"formattedGridContainer\"\r\n          dataSource={formattedData}\r\n          showColumnLines={true}\r\n          columnAutoWidth={true}\r\n          showBorders={true}\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n        />\r\n        <Typography variant=\"body2\">Note that \"formatted\" here is referring to the presence of defined column\r\n        names.</Typography>\r\n        <DialogContentText sx={{ marginTop: '1.5rem' }}>Unformatted data example:</DialogContentText>\r\n        <DataGrid \r\n          id=\"unformattedGridContainer\"\r\n          dataSource={unformattedData}\r\n          showColumnLines={true}\r\n          columnAutoWidth={true}\r\n          showBorders={true}\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n        >\r\n          <Column caption=\"\" calculateCellValue={(data: any) => data} />\r\n        </DataGrid>\r\n        <Typography variant=\"body2\">Note that \"unformatted\" here is referring to the lack of defined column\r\n        names. If you're uploading an unformatted file, only copy/paste 1 column that you think would lead to the most\r\n        precise match when mapped to a column from the other file.</Typography>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FileStructureHelpModal;","import React, { useState } from 'react';\r\nimport {\r\n  FormControlLabel,\r\n  FormControl,\r\n  Radio,\r\n  RadioGroup,\r\n  FormLabel,\r\n  IconButton\r\n} from '@mui/material';\r\nimport { Help } from '@mui/icons-material';\r\nimport FileStructureHelpModal from '../file-structure-help-modal';\r\nimport { FORMATTED_DATA, UNFORMATTED_DATA } from '../../state/actions/document';\r\n\r\ninterface Props {\r\n  fileStructure: string;\r\n  handleFileStructureChange: any;\r\n  index: number;\r\n}\r\n\r\nconst FileStructureRadio = ({ fileStructure, handleFileStructureChange, index }: Props) => {\r\n  const [isHelpModalOpen, setIsHelpModalOpen] = useState(false);\r\n\r\n  const handleOpenHelpModal = () => {\r\n    setIsHelpModalOpen(!isHelpModalOpen);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <FormControl>\r\n        <FormLabel>Is your data formatted or unformatted? <IconButton onClick={handleOpenHelpModal}><Help /></IconButton></FormLabel>\r\n        <RadioGroup\r\n          row\r\n          aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n          name=\"controlled-radio-buttons-group\"\r\n          value={fileStructure}\r\n          onChange={(event: any) => handleFileStructureChange(event, index)}\r\n        >\r\n          <FormControlLabel value={FORMATTED_DATA} control={<Radio />} label=\"Formatted\" />\r\n          <FormControlLabel value={UNFORMATTED_DATA} control={<Radio />} label=\"Unformatted\" />\r\n        </RadioGroup>\r\n      </FormControl>\r\n      <FileStructureHelpModal isHelpModalOpen={isHelpModalOpen} handleOpenHelpModal={handleOpenHelpModal} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FileStructureRadio;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport FileStructureRadio from '../../components/file-structure-radio';\r\nimport { setFileStructure } from '../../state/actions/document';\r\n\r\ninterface Props {\r\n  fileStructure: string;\r\n  setFileStructure: any;\r\n  index: number;\r\n}\r\n\r\nconst FileStructureRadioContainer = ({\r\n  setFileStructure,\r\n  fileStructure,\r\n  index\r\n}: Props) => {\r\n  const handleFileStructureChange = (event: any, index: number) => {\r\n    setFileStructure(index, event.target.value);\r\n  }\r\n\r\n  return (\r\n    <FileStructureRadio\r\n      handleFileStructureChange={handleFileStructureChange}\r\n      fileStructure={fileStructure}\r\n      index={index}\r\n    />\r\n  );\r\n}\r\n\r\n// const mapStateToProps = (state: any) => ({\r\n//   fileStructure1: state.document.fileStructure1,\r\n//   fileStructure2: state.document.fileStructure2,\r\n// });\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  setFileStructure: (index: number, event: any) => dispatch(setFileStructure(index, event))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(FileStructureRadioContainer);","import React from 'react';\r\nimport { TextField } from '@mui/material';\r\n\r\ninterface Props {\r\n  unformattedData: string;\r\n  handleUnformattedDataChange: any;\r\n}\r\n\r\nconst UnformattedDataTextField = ({\r\n  unformattedData,\r\n  handleUnformattedDataChange\r\n}: Props) => {\r\n  return (\r\n    <TextField\r\n      multiline\r\n      maxRows={5}\r\n      variant=\"standard\"\r\n      sx={{ width: '100%' }}\r\n      helperText=\"Unformatted data\"\r\n      value={unformattedData}\r\n      onChange={handleUnformattedDataChange}\r\n    />\r\n  );\r\n}\r\n\r\nexport default UnformattedDataTextField;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport UnformattedDataTextField from '../../components/unformatted-data-textfield';\r\nimport { changeUnformattedData } from '../../state/actions/document';\r\n\r\ninterface Props {\r\n  unformattedData: string;\r\n  index: number;\r\n  changeUnformattedData: any;\r\n}\r\n\r\nconst UnformattedDataTextFieldContainer = ({\r\n  unformattedData,\r\n  index,\r\n  changeUnformattedData\r\n}: Props) => {\r\n  const handleUnformattedDataChange = (event: any) => {\r\n    changeUnformattedData(index, event.target.value);\r\n  }\r\n\r\n  return (\r\n    <UnformattedDataTextField\r\n      handleUnformattedDataChange={handleUnformattedDataChange}\r\n      unformattedData={unformattedData}\r\n    />\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  changeUnformattedData: (index: number, value: string) => dispatch(changeUnformattedData(index, value))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(UnformattedDataTextFieldContainer)","import React from 'react';\r\nimport { TextField } from '@mui/material';\r\n\r\ninterface Props {\r\n  partnerName: string;\r\n  changePartnerName: any;\r\n}\r\n\r\nconst PartnerNameTextfield = ({\r\n  partnerName,\r\n  changePartnerName\r\n}: Props) => {\r\n  return (\r\n    <>\r\n      <TextField\r\n        helperText=\"Partner Sales Rep Name\"\r\n        variant=\"standard\"\r\n        sx={{ width: '100%' }}\r\n        value={partnerName}\r\n        onChange={changePartnerName}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PartnerNameTextfield;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PartnerNameTextfield from '../../components/partner-name-textfield';\r\nimport { changePartnerName } from '../../state/actions/document';\r\n\r\ninterface Props {\r\n  partnerName: string;\r\n  changePartnerName: any;\r\n}\r\n\r\nconst PartnerNameTextFieldContainer = ({\r\n  partnerName,\r\n  changePartnerName\r\n}: Props) => {\r\n  return (\r\n    <PartnerNameTextfield partnerName={partnerName} changePartnerName={changePartnerName} />\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  partnerName: state.document.partnerName\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  changePartnerName: (event: any) => dispatch(changePartnerName(event.target.value))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PartnerNameTextFieldContainer);","import React from 'react';\r\nimport { TextField } from '@mui/material';\r\n\r\ninterface Props {\r\n  partnerCompany: string;\r\n  changePartnerCompany: any;\r\n}\r\n\r\nconst PartnerCompanyTextfield = ({\r\n  partnerCompany,\r\n  changePartnerCompany\r\n}: Props) => {\r\n  return (\r\n    <>\r\n      <TextField\r\n        helperText=\"Partner Company\"\r\n        variant=\"standard\"\r\n        sx={{ width: '100%' }}\r\n        value={partnerCompany}\r\n        onChange={changePartnerCompany}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PartnerCompanyTextfield;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PartnerCompanyTextfield from '../../components/partner-company-textfield';\r\nimport { changePartnerCompany } from '../../state/actions/document';\r\n\r\ninterface Props {\r\n  partnerCompany: string;\r\n  changePartnerCompany: any;\r\n}\r\n\r\nconst PartnerCompanyTextFieldContainer = ({\r\n  partnerCompany,\r\n  changePartnerCompany\r\n}: Props) => {\r\n  return (\r\n    <PartnerCompanyTextfield partnerCompany={partnerCompany} changePartnerCompany={changePartnerCompany} />\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  partnerCompany: state.document.partnerCompany\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  changePartnerCompany: (event: any) => dispatch(changePartnerCompany(event.target.value))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PartnerCompanyTextFieldContainer);","import React from 'react';\r\nimport { Typography, Checkbox } from '@mui/material';\r\nimport { Column, DataGrid, Pager, Paging } from 'devextreme-react/data-grid';\r\nimport { SelectedDocument } from '../../state/reducers/document';\r\n\r\ninterface Props {\r\n  selectedDocument: SelectedDocument;\r\n  handleColumnClick: any;\r\n  comparisonColumns: Array<string>;\r\n  index: number;\r\n}\r\n\r\nconst renderGridCell = (\r\n  data: any,\r\n  handleColumnClick: any,\r\n  comparisonColumns: Array<string>,\r\n  index: number\r\n) => {\r\n  return (\r\n    <div>\r\n      {data.column? data.column.dataField : data}\r\n      <Checkbox\r\n        onClick={() => {\r\n          handleColumnClick(data, index)\r\n        }}\r\n        checked={comparisonColumns.indexOf(data) > -1}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst FileDataPreviewTable = ({\r\n  selectedDocument,\r\n  handleColumnClick,\r\n  comparisonColumns,\r\n  index\r\n}: Props) => {\r\n  return (\r\n    <>\r\n      <Typography variant=\"subtitle1\" sx={{ margin: '2rem 0 0'}}>\r\n      </Typography>\r\n      <DataGrid\r\n        id=\"gridContainer\"\r\n        dataSource={selectedDocument.columnChooserGridData}\r\n        allowColumnReordering={true}\r\n        allowColumnResizing={true}\r\n        columnAutoWidth={true}\r\n        showBorders={true}\r\n      >\r\n        {selectedDocument.allColumns ? selectedDocument.allColumns.map((colProps: any, colIdx: number) => {\r\n          return (\r\n            <Column\r\n              dataField={colProps}\r\n              allowSorting={false}\r\n              key={`col-${colIdx}-1`}\r\n              headerCellRender={() => renderGridCell(colProps, handleColumnClick, comparisonColumns, index)}\r\n            />\r\n          );\r\n        }) : []}\r\n        <Paging defaultPageSize={2} />\r\n        <Pager\r\n          visible={true}\r\n          displayMode={\"full\"}\r\n          showPageSizeSelector={false}\r\n          showInfo={true}\r\n          showNavigationButtons={true}\r\n        />\r\n      </DataGrid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FileDataPreviewTable;","import React from 'react';\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  Typography\r\n} from '@mui/material';\r\n\r\ninterface Props {\r\n  isHelpModalOpen: boolean;\r\n  handleOpenHelpModal: any;\r\n}\r\n\r\nconst ChooseColumnHelpModal = ({ isHelpModalOpen, handleOpenHelpModal }: Props) => {\r\n  return (\r\n    <>\r\n      <Dialog\r\n        open={isHelpModalOpen}\r\n        onClose={handleOpenHelpModal}\r\n      >\r\n        <DialogTitle>Choose columns to compare/match with the other file's columns</DialogTitle>\r\n        <DialogContent dividers={true}>\r\n        <Typography variant=\"body2\">Columns from file A that will be compared with columns\r\n          from file B to determine a matching account. Limit: 5 columns. Hint: the more unique a column's value is\r\n          to a company, the better (DUNS number, company website, etc.).</Typography>\r\n        <DialogContentText sx={{ marginTop: '1.5rem' }}>Using the text input:</DialogContentText>\r\n        <Typography variant=\"body2\">Type in a column that you're trying to find. If it appears in the\r\n          results drop down, click it to select the column. The checkbox next to its label will appear checked.\r\n          Multiple checkboxes can be selected.</Typography>\r\n        <DialogContentText sx={{ marginTop: '1.5rem' }}>Using the data grid:</DialogContentText>\r\n        <Typography variant=\"body2\">The grid below shows 2 example rows from the uploaded file. Columns for\r\n          comparison can also be selected by clicking the column headers.</Typography>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ChooseColumnHelpModal;","import React from 'react';\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  Typography\r\n} from '@mui/material';\r\n\r\ninterface Props {\r\n  isHelpModalOpen: boolean;\r\n  handleOpenHelpModal: any;\r\n}\r\n\r\nconst FileSourceHelpModal = ({ isHelpModalOpen, handleOpenHelpModal }: Props) => {\r\n  return (\r\n    <>\r\n      <Dialog\r\n        open={isHelpModalOpen}\r\n        onClose={handleOpenHelpModal}\r\n      >\r\n        <DialogTitle>Upload a file from your computer or use a pinned file</DialogTitle>\r\n        <DialogContent dividers={true}>\r\n        <DialogContentText sx={{ marginTop: '1.5rem' }}>Upload a file from your computer:</DialogContentText>\r\n        <Typography variant=\"body2\">Click the Select File button and search for a file.</Typography>\r\n        <DialogContentText sx={{ marginTop: '1.5rem' }}>Use a pinned file:</DialogContentText>\r\n        <Typography variant=\"body2\">In your profile page, you can save a file as a \"pinned file\". This would be used when you\r\n          have a file that you will regularly be compared to partners' files. Typically, it would be the file that contains all of\r\n          your accounts.</Typography>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FileSourceHelpModal;","import React, { useEffect, useState } from 'react';\r\nimport { FormLabel, IconButton, Typography } from '@mui/material';\r\nimport { UserState } from '../../state/reducers/user';\r\nimport FileSelectionFieldContainer from '../../containers/file-selection-field';\r\nimport PinnedFileChipContainer from '../../containers/pinned-file-chip';\r\nimport FileSourceRadioContainer from '../../containers/file-source-radio';\r\nimport ComparisonColumnAutocompleteContainer from '../../containers/comparison-column-autocomplete';\r\nimport FileStructureRadioContainer from '../../containers/file-structure-radio';\r\nimport UnformattedDataTextfieldContainer from '../../containers/unformatted-data-textfield-container';\r\nimport { FORMATTED_DATA } from '../../state/actions/document';\r\nimport PartnerNameTextfieldContainer from '../../containers/partner-name-textfield';\r\nimport PartnerCompanyTextfieldContainer from '../../containers/partner-company-textfield';\r\nimport FileDataPreviewTable from '../file-data-preview-table';\r\nimport { SelectedDocument } from '../../state/reducers/document';\r\nimport { Help } from '@mui/icons-material';\r\nimport ChooseColumnHelpModal from '../choose-column-help-modal';\r\nimport FileSourceHelpModal from '../file-source-help-modal';\r\n\r\ninterface UploadDocumentColumnProps {\r\n  selectedDocument: SelectedDocument;\r\n  comparisonColumns: Array<string>;\r\n  comparisonColumnsError: Array<string>;\r\n  fileSource: string;\r\n  index: number;\r\n  user: UserState;\r\n  setAllColumns: any;\r\n  handleColumnClick: any;\r\n  fileStructure: any;\r\n  unformattedData: string;\r\n}\r\n\r\nconst UploadDocumentColumn = ({\r\n  selectedDocument,\r\n  comparisonColumns,\r\n  comparisonColumnsError,\r\n  fileSource,\r\n  index,\r\n  user,\r\n  setAllColumns,\r\n  handleColumnClick,\r\n  fileStructure,\r\n  unformattedData\r\n}: UploadDocumentColumnProps) => {\r\n  const [isChooseColumnHelpModalOpen, setIsChooseColumnHelpModalOpen] = useState(false);\r\n  const [isSelectFileSourceHelpModalOpen, setIsSelectFileSourceHelpModalOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (selectedDocument.data && selectedDocument.data[0]) {\r\n      setAllColumns(Array.from(Object.keys(selectedDocument.data[0])), index);\r\n    }\r\n  }, [selectedDocument.data, setAllColumns, index]);\r\n\r\n  const handleOpenFileSourceHelpModal = () => {\r\n    setIsSelectFileSourceHelpModalOpen(!isSelectFileSourceHelpModalOpen);\r\n  }\r\n\r\n  const handleOpenChooseColumnHelpModal = () => {\r\n    setIsChooseColumnHelpModalOpen(!isChooseColumnHelpModalOpen);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Typography variant='h6' sx={{ marginTop: '3rem', marginBottom: '1rem' }}>\r\n        {index === 0 ? 'MY ACCOUNTS' : 'PARTNER\\'S ACCOUNTS'}\r\n      </Typography>\r\n      <FileStructureRadioContainer\r\n        index={index}\r\n        fileStructure={fileStructure}\r\n      />\r\n      {fileStructure === FORMATTED_DATA ?\r\n        <>\r\n          <FormLabel sx={{ marginTop: '4rem', marginBottom: '0.25rem' }}>Select a file <IconButton onClick={handleOpenFileSourceHelpModal}><Help /></IconButton></FormLabel>\r\n          <FileSourceRadioContainer\r\n            fileSource={fileSource}\r\n            index={index}\r\n          />\r\n          <div className=\"file-selection\">\r\n            {fileSource === 'upload' ?\r\n              <FileSelectionFieldContainer selectedDocument={selectedDocument} index={index} /> :\r\n              <PinnedFileChipContainer />\r\n            }\r\n          </div>\r\n          <FormLabel sx={{ marginTop: '4.5rem', marginBottom: '0.25rem' }}>Use autocomplete field or data grid to pick columns <IconButton onClick={handleOpenChooseColumnHelpModal}><Help /></IconButton></FormLabel>\r\n          <ComparisonColumnAutocompleteContainer\r\n            selectedDocument={selectedDocument}\r\n            comparisonColumns={comparisonColumns}\r\n            comparisonColumnsError={comparisonColumnsError}\r\n            index={index}\r\n          />\r\n          <div style={{ width: '100%'}}>\r\n            <FileDataPreviewTable\r\n              selectedDocument={selectedDocument}\r\n              handleColumnClick={handleColumnClick}\r\n              comparisonColumns={comparisonColumns}\r\n              index={index}\r\n            />\r\n          </div>\r\n        </>:\r\n        <>\r\n          <FormLabel sx={{ marginTop: '4.5rem', marginBottom: '0.25rem' }}>Copy and Paste unformatted data</FormLabel>\r\n          <UnformattedDataTextfieldContainer\r\n            unformattedData={unformattedData}\r\n            index={index}\r\n          />\r\n        </>\r\n      }\r\n      {index === 1 && <>\r\n        <FormLabel sx={{ marginTop: fileStructure === FORMATTED_DATA ? '3.5rem' : '4rem', marginBottom: '0.5rem' }}>Enter partner info</FormLabel>\r\n        <PartnerNameTextfieldContainer />\r\n        <PartnerCompanyTextfieldContainer />\r\n      </>}\r\n      <ChooseColumnHelpModal isHelpModalOpen={isChooseColumnHelpModalOpen} handleOpenHelpModal={handleOpenChooseColumnHelpModal} />\r\n      <FileSourceHelpModal isHelpModalOpen={isSelectFileSourceHelpModalOpen} handleOpenHelpModal={handleOpenFileSourceHelpModal} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UploadDocumentColumn;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { UserState } from '../../state/reducers/user';\r\nimport UploadDocumentColumn from '../../components/upload-document-column';\r\n\r\ninterface Props {\r\n  user: UserState;\r\n  selectedDocument: any;\r\n  comparisonColumns: Array<string>;\r\n  comparisonColumnsError: Array<string>;\r\n  fileSource: string;\r\n  index: number;\r\n  handleColumnClick: any;\r\n  setAllColumns: any;\r\n  fileStructure: string;\r\n  unformattedData: string;\r\n}\r\n\r\nconst UploadDocumentColumnContainer = ({\r\n  user,\r\n  selectedDocument,\r\n  comparisonColumns,\r\n  comparisonColumnsError,\r\n  fileSource,\r\n  index,\r\n  handleColumnClick,\r\n  setAllColumns,\r\n  fileStructure,\r\n  unformattedData\r\n}: Props) => {\r\n  return (\r\n    <UploadDocumentColumn\r\n      selectedDocument={selectedDocument}\r\n      comparisonColumns={comparisonColumns}\r\n      comparisonColumnsError={comparisonColumnsError}\r\n      fileSource={fileSource}\r\n      user={user}\r\n      index={index}\r\n      handleColumnClick={handleColumnClick}\r\n      setAllColumns={setAllColumns}\r\n      fileStructure={fileStructure}\r\n      unformattedData={unformattedData}\r\n    />\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  user: state.user\r\n});\r\n\r\nexport default connect(mapStateToProps)(UploadDocumentColumnContainer);","import { FORMATTED_DATA, UNFORMATTED_DATA } from '../state/actions/document';\r\nimport { SelectedDocument } from '../state/reducers/document';\r\n\r\nexport const createDocumentSampleRows = (\r\n  selectedDocument: SelectedDocument,\r\n  fileStructure: string,\r\n  unformattedData: string\r\n) => {\r\n  let docSampleData: Array<any>;\r\n  if (fileStructure === FORMATTED_DATA) {\r\n    if (selectedDocument.data.length && selectedDocument.data.length > 10) {\r\n      docSampleData = selectedDocument.data.slice(0, 10);\r\n    } else {\r\n      docSampleData =  selectedDocument.data;\r\n    }\r\n  } else {\r\n    if (unformattedData.length && unformattedData.length > 10) {\r\n      docSampleData = unformattedData.split('\\n').slice(0, 10);\r\n    } else {\r\n      docSampleData =  unformattedData.split('\\n');\r\n    }\r\n  }\r\n  return docSampleData;\r\n}\r\n\r\nexport const updateColumnsForDocument = (\r\n  fileStructure: string,\r\n  comparisonColumns: Array<string>,\r\n  documentNumber: number\r\n) => {\r\n  let columns: Array<string> = [];\r\n  if (fileStructure === FORMATTED_DATA) {\r\n    columns = columns.concat([...comparisonColumns]);\r\n  } else if (fileStructure === UNFORMATTED_DATA) {\r\n    columns.push(`Unformatted Data ${documentNumber}`);\r\n  }\r\n  return columns;\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Dialog, DialogContent, DialogContentText, DialogTitle } from '@mui/material';\r\nimport DataGrid from 'devextreme-react/data-grid';\r\nimport { DocumentState } from '../../state/reducers/document';\r\nimport { createDocumentSampleRows, updateColumnsForDocument } from '../../utils/results-preview.utils';\r\nimport { FORMATTED_DATA, UNFORMATTED_DATA } from '../../state/actions/document';\r\n\r\ninterface Props {\r\n  isPreviewModalOpen: boolean;\r\n  handleClosePreview: any;\r\n  document: DocumentState;\r\n}\r\n\r\nconst ResultsPreviewModal = ({\r\n  isPreviewModalOpen,\r\n  handleClosePreview,\r\n  document\r\n}: Props) => {\r\n  const [resultsData, setResultsData] = useState<Array<any>>([]);\r\n  const {\r\n    selectedDocument1,\r\n    selectedDocument2,\r\n    comparisonColumns1,\r\n    comparisonColumns2,\r\n    fileStructure1,\r\n    fileStructure2,\r\n    unformattedData1,\r\n    unformattedData2\r\n  } = document;\r\n\r\n  useEffect(() => {\r\n    const doc1SampleData: Array<any> = createDocumentSampleRows(selectedDocument1, fileStructure1, unformattedData1);\r\n    const doc2SampleData: Array<any> = createDocumentSampleRows(selectedDocument2, fileStructure2, unformattedData2);\r\n\r\n    let columns: Array<any> = [];\r\n    columns = updateColumnsForDocument(fileStructure1, comparisonColumns1, 1);\r\n    columns = [...columns, ...updateColumnsForDocument(fileStructure2, comparisonColumns2, 2)];\r\n\r\n    const updatedResultsData = [];\r\n    for (let i = 0; i < 5; i++) {\r\n      \r\n      const row = columns.reduce((rowObj: any, col: string, index: number) => {\r\n        if (\r\n          fileStructure1 === FORMATTED_DATA &&\r\n          comparisonColumns1.indexOf(col) > -1 &&\r\n          index < comparisonColumns1.length\r\n        ) {\r\n          return { ...rowObj, [col]: doc1SampleData[i][col] || null };\r\n        } else if (fileStructure1 === UNFORMATTED_DATA && index === 0) {\r\n          return { ...rowObj, 'Unformatted Data 1': doc1SampleData[i] || null }\r\n        } else if (\r\n          fileStructure2 === FORMATTED_DATA &&\r\n          comparisonColumns2.indexOf(col) > -1 &&\r\n          ((fileStructure1 === FORMATTED_DATA && index >= comparisonColumns1.length) ||\r\n          (fileStructure1 === UNFORMATTED_DATA && index > 0))\r\n        ) {\r\n          return { ...rowObj, [col]: doc2SampleData[i][col] || null };\r\n        } else if (fileStructure2 === UNFORMATTED_DATA) {\r\n          return { ...rowObj, 'Unformatted Data 2': doc2SampleData[i] || null }\r\n        }\r\n        return { ...rowObj };\r\n      }, {});\r\n      updatedResultsData.push(row);\r\n    }\r\n\r\n    setResultsData(updatedResultsData);\r\n  }, [selectedDocument1, fileStructure1, unformattedData1, selectedDocument2, fileStructure2, unformattedData2, comparisonColumns1, comparisonColumns2])\r\n\r\n  return (\r\n    <Dialog\r\n      open={isPreviewModalOpen}\r\n      onClose={handleClosePreview}\r\n    >\r\n      <DialogTitle>Results Preview</DialogTitle>\r\n      <DialogContent dividers={true}>\r\n        <DialogContentText sx={{ marginBottom: '1rem' }}>Here's what your results will look like based on the columns you've chosen:</DialogContentText>\r\n        <DataGrid\r\n          id=\"formattedGridContainer\"\r\n          dataSource={resultsData}\r\n          showColumnLines={true}\r\n          columnAutoWidth={true}\r\n          showBorders={true}\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n        />\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default ResultsPreviewModal;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ResultsPreviewModal from '../../components/results-preview-modal';\r\nimport { DocumentState } from '../../state/reducers/document';\r\n\r\ninterface Props {\r\n  isPreviewModalOpen: boolean;\r\n  handleClosePreview: any;\r\n  document: DocumentState;\r\n}\r\n\r\nconst ResultsPreviewModalContainer = ({\r\n  isPreviewModalOpen,\r\n  handleClosePreview,\r\n  document\r\n}: Props) => {\r\n  return (\r\n    <ResultsPreviewModal\r\n      isPreviewModalOpen={isPreviewModalOpen}\r\n      handleClosePreview={handleClosePreview}\r\n      document={document}\r\n    />\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  document: state.document\r\n});\r\n\r\nexport default connect(mapStateToProps)(ResultsPreviewModalContainer);","import { FORMATTED_DATA, UNFORMATTED_DATA } from \"../state/actions/document\"\r\nimport { SelectedDocument } from \"../state/reducers/document\";\r\nimport { UserState } from \"../state/reducers/user\";\r\n\r\nexport const isSubmitButtonEnabled = (\r\n  fileStructure1: string,\r\n  fileStructure2: string,\r\n  comparisonColumns1: Array<string>,\r\n  comparisonColumns2: Array<string>,\r\n  unformattedData1: string,\r\n  unformattedData2: string,\r\n  selectedDocument1: SelectedDocument,\r\n  selectedDocument2: SelectedDocument\r\n): boolean => {\r\n  const isUserAccountDataValid = checkOnePersonsAccountData(\r\n    fileStructure1,\r\n    selectedDocument1,\r\n    comparisonColumns1,\r\n    unformattedData1\r\n  );\r\n  const isPartnerAccountDataValid = checkOnePersonsAccountData(\r\n    fileStructure2,\r\n    selectedDocument2,\r\n    comparisonColumns2,\r\n    unformattedData2\r\n  );\r\n\r\n  if (fileStructure1 === FORMATTED_DATA && fileStructure2 === FORMATTED_DATA) {\r\n    if (comparisonColumns1.length !== comparisonColumns2.length) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return isUserAccountDataValid && isPartnerAccountDataValid;\r\n}\r\n\r\nexport const checkOnePersonsAccountData = (\r\n  fileStructure: string,\r\n  selectedDocument: SelectedDocument,\r\n  comparisonColumns: Array<string>,\r\n  unformattedData: string\r\n) => {\r\n  if (fileStructure === FORMATTED_DATA) {\r\n    if (!selectedDocument || !selectedDocument.data || !selectedDocument.data.length) {\r\n      return false;\r\n    }\r\n    if (!comparisonColumns || !comparisonColumns.length) {\r\n      return false;\r\n    }\r\n  } else if (fileStructure === UNFORMATTED_DATA) {\r\n    if (!unformattedData || !unformattedData.length) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\nexport const createCapitalizedPartnerName = (partnerName: string) => {\r\n  if (partnerName) {\r\n    return capitalizeFirstLetterOfWord(partnerName);\r\n  }\r\n  return '';\r\n}\r\n\r\nexport const createCapitalizedPartnerCompany = (partnerCompany: string) => {\r\n  if (partnerCompany) {\r\n    const words: Array<string> = partnerCompany.split(\" \");\r\n    return words.map((word: string) => capitalizeFirstLetterOfWord(word)).join(\" \");\r\n  }\r\n  return '';\r\n}\r\n\r\nexport const createCapitalizedUserName = (user: UserState) => {\r\n  if (user && user.firstname && user.lastname) {\r\n    const capitalizedFirstName = capitalizeFirstLetterOfWord(user.firstname);\r\n    const capitalizedLastName = capitalizeFirstLetterOfWord(user.lastname);\r\n    return `${capitalizedFirstName} ${capitalizedLastName}`;\r\n  }\r\n  return '';\r\n}\r\n\r\nexport const capitalizeFirstLetterOfWord = (word: string) => word[0].toUpperCase() + word.substring(1);","import React, { useState } from 'react';\r\nimport UploadDocumentColumnContainer from '../../containers/upload-document-column';\r\nimport ResultsPreviewModalContainer from '../../containers/results-preview-modal';\r\nimport { Grid, Fab, Divider } from '@mui/material';\r\nimport { Upload, Preview } from '@mui/icons-material';\r\nimport { DocumentState } from '../../state/reducers/document';\r\nimport { isSubmitButtonEnabled } from '../../utils/duplicates-table.utils';\r\n\r\ninterface UploadDocumentFormProps {\r\n  document: DocumentState;\r\n  setAllColumns: any;\r\n  handleColumnClick: any;\r\n  handleUploadAndCompare: any;\r\n}\r\n\r\nconst UploadDocumentForm = ({\r\n  document,\r\n  setAllColumns,\r\n  handleColumnClick,\r\n  handleUploadAndCompare\r\n}: UploadDocumentFormProps): any => {\r\n  /* For the preview modal, we use local state because we don't need its open state to be\r\n  persisted when a user goes to another step */\r\n  const [isPreviewModalOpen, setIsPreviewModalOpen] = useState(false);\r\n\r\n  const {\r\n    selectedDocument1,\r\n    selectedDocument2,\r\n    comparisonColumns1,\r\n    comparisonColumns2,\r\n    comparisonColumns1Error,\r\n    comparisonColumns2Error,\r\n    fileSource1,\r\n    fileSource2,\r\n    fileStructure1,\r\n    fileStructure2,\r\n    unformattedData1,\r\n    unformattedData2\r\n  } = document;\r\n\r\n  const handleOpenPreview = () => {\r\n    setIsPreviewModalOpen(true);\r\n  }\r\n\r\n  const handleClosePreview = () => {\r\n    setIsPreviewModalOpen(false);\r\n  }\r\n\r\n  /* Validation for whether the Submit button should be enabled or disabled. If documents\r\n  and columns haven't been selected, the button should be disabled. */\r\n  const isSubmitBtnEnabled: boolean = isSubmitButtonEnabled(\r\n    fileStructure1,\r\n    fileStructure2,\r\n    comparisonColumns1,\r\n    comparisonColumns2,\r\n    unformattedData1,\r\n    unformattedData2,\r\n    selectedDocument1,\r\n    selectedDocument2\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        spacing={2}\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"start\"\r\n      >\r\n        <Grid\r\n          item\r\n          container\r\n          xs={8}\r\n          p={0}\r\n          sx={{ height: '100%' }}\r\n          direction=\"column\"\r\n          justifyContent=\"start\"\r\n          alignItems=\"center\"\r\n        >\r\n          <UploadDocumentColumnContainer\r\n            comparisonColumns={comparisonColumns1}\r\n            comparisonColumnsError={comparisonColumns1Error}\r\n            selectedDocument={selectedDocument1}\r\n            fileSource={fileSource1}\r\n            index={0}\r\n            setAllColumns={setAllColumns}\r\n            handleColumnClick={handleColumnClick}\r\n            fileStructure={fileStructure1}\r\n            unformattedData={unformattedData1}\r\n          />\r\n          <Divider sx={{ marginTop: '3rem', width: '100%', borderColor: '#1976D2' }} variant=\"middle\" />\r\n          <UploadDocumentColumnContainer\r\n            comparisonColumns={comparisonColumns2}\r\n            comparisonColumnsError={comparisonColumns2Error}\r\n            selectedDocument={selectedDocument2}\r\n            fileSource={fileSource2}\r\n            index={1}\r\n            setAllColumns={setAllColumns}\r\n            handleColumnClick={handleColumnClick}\r\n            fileStructure={fileStructure2}\r\n            unformattedData={unformattedData2}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid\r\n        container\r\n        justifyContent=\"space-around\"\r\n        alignItems=\"center\"\r\n        sx={{ marginBottom: '4.5rem' }}\r\n      >\r\n        <Grid\r\n          item\r\n          container\r\n          xs={4}\r\n          direction=\"column\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Fab\r\n            variant=\"extended\"\r\n            aria-label=\"add\"\r\n            sx={{ marginTop: '2rem', marginBottom: '1.5rem' }}\r\n            onClick={handleOpenPreview}\r\n          >\r\n            <Preview sx={{ mr: 1 }} />\r\n            Preview Results\r\n          </Fab>\r\n          <Fab\r\n            variant=\"extended\"\r\n            color=\"primary\"\r\n            aria-label=\"add\"\r\n            disabled={!isSubmitBtnEnabled}\r\n            onClick={handleUploadAndCompare}\r\n          >\r\n            <Upload sx={{ mr: 1 }} />\r\n            Upload and Compare\r\n          </Fab>\r\n        </Grid>\r\n      </Grid>\r\n      {isPreviewModalOpen && <ResultsPreviewModalContainer\r\n        isPreviewModalOpen={isPreviewModalOpen}\r\n        handleClosePreview={handleClosePreview}\r\n      />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UploadDocumentForm;","export const CHANGE_STEP = 'CHANGE_STEP';\r\n\r\nexport const changeStep = (newStep: number) => ({\r\n  type: CHANGE_STEP,\r\n  payload: newStep\r\n});","export const updateComparisonColumns = (comparisonColumns: Array<string>, updatedCol: string) => {\r\n  let newValue: Array<string> = [];\r\n  const indexOfCol = comparisonColumns.indexOf(updatedCol);\r\n  if (indexOfCol === -1) {\r\n    newValue = [...comparisonColumns, updatedCol];\r\n  } else {\r\n    newValue = [...comparisonColumns];\r\n    newValue.splice(indexOfCol, 1);\r\n  }\r\n  return newValue;\r\n}\r\n\r\nexport const addMessageToErrorList = (\r\n  errorList: Array<string>,\r\n  errorMessage: string,\r\n) => {\r\n  const errMsgIndex = errorList.indexOf(errorMessage);\r\n  if (errMsgIndex === -1) errorList.push(errorMessage);\r\n}\r\n\r\nexport const removeMessageFromErrorList = (\r\n  errorList: Array<string>,\r\n  errorMessage: string,\r\n) => {\r\n  const errMsgIndex = errorList.indexOf(errorMessage);\r\n  if (errMsgIndex > -1) errorList.splice(errMsgIndex, 1);\r\n}","import React from 'react';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport UploadDocumentForm from '../../components/upload-document-form';\r\nimport { DocumentState } from '../../state/reducers/document';\r\nimport { uploadDocumentSuccess, setAllColumns, changeComparisonColumn } from '../../state/actions/document';\r\nimport { changeStep } from '../../state/actions/step-progress';\r\nimport { showError, hideError } from '../../state/actions/alert';\r\nimport { setIsLoading } from '../../state/actions/loading';\r\nimport { updateComparisonColumns } from '../../utils/update-comparison-columns';\r\n\r\ninterface Props {\r\n  activeStep: number;\r\n  document: DocumentState;\r\n  showError: any;\r\n  hideError: any;\r\n  uploadDocumentSuccess: any;\r\n  setIsLoading: any;\r\n  changeStep: any;\r\n  setAllColumns: any;\r\n  changeComparisonColumn: any;\r\n}\r\n\r\nconst UploadDocumentFormContainer = ({\r\n  activeStep,\r\n  document,\r\n  showError,\r\n  hideError,\r\n  uploadDocumentSuccess,\r\n  setIsLoading,\r\n  changeStep,\r\n  setAllColumns,\r\n  changeComparisonColumn\r\n}: Props) => {\r\n  /**\r\n   * When the user selects a column (by clicking a checkbox next to the column name in the data grid\r\n   * or using the autocomplete), this function updates the array of column names\r\n   * @param col Column in the selected file. Is represented in the DataGrid and\r\n   * can be selected by clicking the checkbox next to the column name\r\n   * @param index Number that indicates which file is the user selecting columns for\r\n   */\r\n  const handleColumnClick = (col: any, index: number) => {\r\n    const { comparisonColumns1, comparisonColumns2 } = document;\r\n    let newValue: Array<string> = [];\r\n    if (index === 0) {\r\n      newValue = updateComparisonColumns(comparisonColumns1, col);\r\n    } else {\r\n      newValue = updateComparisonColumns(comparisonColumns2, col);\r\n    }\r\n\r\n    changeComparisonColumn(newValue, index);\r\n  };\r\n\r\n  /**\r\n   * Puts the selected file and column name into a FormData instance,\r\n   * sends it to the server, and then changes to the next step where\r\n   * the duplicates will be displayed\r\n   */\r\n  const handleUploadAndCompare = () => {\r\n    const {\r\n      selectedDocument1,\r\n      selectedDocument2,\r\n      comparisonColumns1,\r\n      comparisonColumns2,\r\n      fileStructure1,\r\n      fileStructure2,\r\n      unformattedData1,\r\n      unformattedData2\r\n    } = document;\r\n    setIsLoading(true);\r\n    const formData = new FormData();\r\n    if (selectedDocument1 && selectedDocument1.name) {\r\n      const docBlob1 = new Blob([JSON.stringify(selectedDocument1.data)], { type: 'application/json' });\r\n      formData.append(\"sales_file1\", docBlob1, selectedDocument1.name);\r\n    }\r\n\r\n    if (selectedDocument2 && selectedDocument2.name) {\r\n      const docBlob2 = new Blob([JSON.stringify(selectedDocument2.data)], { type: 'application/json' });\r\n      formData.append(\"sales_file2\", docBlob2, selectedDocument2.name);\r\n    }\r\n\r\n    formData.append('comparisonColumns1', comparisonColumns1.join());\r\n    formData.append('comparisonColumns2', comparisonColumns2.join());\r\n    formData.append('fileStructure1', fileStructure1);\r\n    formData.append('fileStructure2', fileStructure2);\r\n    formData.append('unformattedData1', unformattedData1);\r\n    formData.append('unformattedData2', unformattedData2);\r\n\r\n    axios.post('/api/v1/uploadfile', formData, { withCredentials: true })\r\n      .then((res: any) => {\r\n        hideError();\r\n        uploadDocumentSuccess(res.data);\r\n        setIsLoading(false);\r\n        changeStep(activeStep += 1);\r\n      })\r\n      .catch((err: any) => {\r\n        console.log('err', err);\r\n        setIsLoading(false);\r\n        showError('File upload and comparison failed.');\r\n        setTimeout(() => {\r\n          hideError();\r\n        }, 5000)\r\n      });\r\n  };\r\n\r\n  return (\r\n    <UploadDocumentForm\r\n      document={document}\r\n      setAllColumns={setAllColumns}\r\n      handleColumnClick={handleColumnClick}\r\n      handleUploadAndCompare={handleUploadAndCompare}\r\n    />\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  activeStep: state.stepProgress.step,\r\n  document: state.document\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  showError: (message: string) => dispatch(showError(message)),\r\n  hideError: () => dispatch(hideError()),\r\n  uploadDocumentSuccess: (data: any) => dispatch(uploadDocumentSuccess(data)),\r\n  setIsLoading: (isLoading: boolean) => dispatch(setIsLoading(isLoading)),\r\n  changeStep: (activeStep: number) => dispatch(changeStep(activeStep)),\r\n  setAllColumns: (columns: Array<string>, index: number) => dispatch(setAllColumns(columns, index)),\r\n  changeComparisonColumn: (newValue: Array<string>, index: number) => dispatch(changeComparisonColumn(newValue, index)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UploadDocumentFormContainer);","import React, { useRef } from 'react';\r\nimport DataGrid, { Paging, Pager, Column, ColumnChooser, Toolbar, Item } from 'devextreme-react/data-grid';\r\nimport { Button, Grid } from '@mui/material';\r\nimport { UserState } from '../../state/reducers/user';\r\nimport { updateColumnsForDocument } from '../../utils/results-preview.utils';\r\nimport { FORMATTED_DATA } from '../../state/actions/document';\r\nimport { createCapitalizedPartnerCompany, createCapitalizedPartnerName, createCapitalizedUserName } from '../../utils/duplicates-table.utils';\r\n\r\ninterface Props {\r\n  duplicatesData: Array<any>;\r\n  comparisonColumns1: Array<string>;\r\n  comparisonColumns2: Array<string>;\r\n  fileStructure1: string;\r\n  fileStructure2: string;\r\n  partnerName: string;\r\n  partnerCompany: string;\r\n  user: UserState;\r\n}\r\n\r\n/* Handles the pressence of the 2 accuracy columns. Other columns start after those 2. */\r\nconst COLUMN_OFFSET = 2;\r\n\r\nconst DuplicatesTable = ({\r\n  duplicatesData,\r\n  comparisonColumns1,\r\n  comparisonColumns2,\r\n  fileStructure1,\r\n  fileStructure2,\r\n  partnerName,\r\n  partnerCompany,\r\n  user\r\n}: Props) => {\r\n  const dataGridRef: any = useRef<any>(null);\r\n\r\n  const customizeColumns = (columns: Array<any>) => {\r\n    /* Capitalize names that will be used in column captions */\r\n    let capitalizedUserName: string = createCapitalizedUserName(user);\r\n    let capitalizedPartnerCompany: string = createCapitalizedPartnerCompany(partnerCompany);\r\n    let capitalizedPartnerName: string = createCapitalizedPartnerName(partnerName);\r\n\r\n    columns.push({\r\n        caption: `My accounts${capitalizedUserName ? ` (${capitalizedUserName})` : ''}`,\r\n        isBand: true,\r\n        cssClass: 'my-accounts'\r\n    });\r\n    columns.push({\r\n      caption: `${capitalizedPartnerCompany ? `${capitalizedPartnerCompany}` : 'Partner'} accounts${capitalizedPartnerName ? ` (${capitalizedPartnerName})` : ''}`,\r\n      isBand: true,\r\n      cssClass: 'their-accounts'\r\n    });\r\n\r\n    /* Create a list of column names */\r\n    let comparisonColumns: Array<string> = [];\r\n    comparisonColumns = updateColumnsForDocument(fileStructure1, comparisonColumns1, 1);\r\n    comparisonColumns = [...comparisonColumns, ...updateColumnsForDocument(fileStructure2, comparisonColumns2, 2)];\r\n\r\n    /* userAccountColumnCount is for determining how many columns should have the my-accounts css class\r\n    and belong to the ownerBand */\r\n    let userAccountColumnCount = fileStructure1 === FORMATTED_DATA ?\r\n      comparisonColumns1.length : 1;\r\n\r\n    /* Assign the columns belonging to the user to one owner band and CSS class, and the columns belonging to\r\n    their partner's accounts into another owner band and CSS class */\r\n    for (let i = COLUMN_OFFSET; i < columns.length - 1; i++) {\r\n      if (comparisonColumns[i - COLUMN_OFFSET] === columns[i].caption && i < userAccountColumnCount + COLUMN_OFFSET) {\r\n        columns[i].ownerBand = columns.length - 2;\r\n        columns[i].cssClass = 'my-accounts'\r\n      } else if (comparisonColumns[i - COLUMN_OFFSET] === columns[i].caption) {\r\n        columns[i].ownerBand = columns.length - 1;\r\n        columns[i].cssClass = 'their-accounts'\r\n      }\r\n    }\r\n  }\r\n\r\n  const calculateGroupCell = (options: any) => {\r\n    let column = options.column;\r\n    let displayValue: string = options.value.split(\";\")[1];\r\n    return (\r\n        <div>{column.caption + \": \" + displayValue}</div>\r\n    );\r\n  }\r\n\r\n  const calculateAccuracyLevel = (rowData: any) => {\r\n    switch (rowData.accuracy) {\r\n      case 1:\r\n        // if (comparisonColumns1.length > 1 && comparisonColumns2.length > 1) {\r\n        return `aaa;Low`;\r\n      case 2:\r\n        return `bbb;Medium`;\r\n      case 3:\r\n        return `ccc;High`;\r\n    }\r\n  }\r\n\r\n  const handleColumnChooserOpen = () => {\r\n    dataGridRef.current.instance.showColumnChooser();\r\n  }\r\n\r\n  const renderColChooserBtn = () => {\r\n    return (\r\n      <Button variant=\"outlined\" onClick={handleColumnChooserOpen}>\r\n        edit view\r\n      </Button>\r\n    );\r\n  }\r\n\r\n  const renderLabel = () => {\r\n    return <div className=\"toolbar-label\"><b>{duplicatesData.length} Matches</b></div>;\r\n  }\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      sx={{ height: '100%', margin: '3rem 0 4.5rem 0', padding: '0 1rem' }}\r\n    >\r\n      <Grid\r\n        item\r\n        container\r\n        xs={12}\r\n        md={12}\r\n        p={0}\r\n        sx={{ height: '100%', width: '100%' }}\r\n        direction=\"column\"\r\n        justifyContent=\"start\"\r\n        alignItems=\"center\"\r\n      >\r\n        <DataGrid\r\n          id=\"gridContainer\"\r\n          dataSource={duplicatesData}\r\n          customizeColumns={customizeColumns}\r\n          showColumnLines={true}\r\n          allowColumnReordering={true}\r\n          allowColumnResizing={true}\r\n          columnAutoWidth={true}\r\n          showBorders={true}\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          ref={dataGridRef}\r\n        >\r\n          <ColumnChooser\r\n            mode=\"select\"\r\n            title=\"Edit View\"\r\n            enabled={true}\r\n            allowSearch={true}\r\n            height={500}\r\n            width={350}\r\n          />\r\n          <Column\r\n            dataField=\"accuracy\"\r\n            groupIndex={0}\r\n            name=\"Accuracy Level\"\r\n            calculateGroupValue={calculateAccuracyLevel}\r\n            groupCellRender={calculateGroupCell}\r\n            showInColumnChooser={false}\r\n            sortOrder=\"desc\"\r\n            visible={false}\r\n          />\r\n          {duplicatesData && duplicatesData[0] && Array.from(Object.keys(duplicatesData[0]))\r\n            .map((colName: string, colIndex: number) => (\r\n              <Column\r\n                dataField={colName}\r\n                key={colIndex}\r\n                caption={colName.replace('--2', '')}\r\n                visible={colIndex !== 0}\r\n                showInColumnChooser={colName !== 'accuracy' ? true : false}\r\n              />\r\n            ))}\r\n          <Paging defaultPageSize={25} />\r\n          <Pager\r\n            visible={true}\r\n            displayMode={\"full\"}\r\n            showPageSizeSelector={false}\r\n            showInfo={true}\r\n            showNavigationButtons={true}\r\n          />\r\n          <Toolbar>\r\n            <Item location=\"center\"\r\n              locateInMenu=\"never\"\r\n              render={renderLabel}\r\n            />\r\n            <Item name=\"columnChooserButton\" component={renderColChooserBtn}></Item>\r\n          </Toolbar>\r\n        </DataGrid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default DuplicatesTable;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport DuplicatesTable from '../../components/duplicates-table';\r\nimport { UserState } from '../../state/reducers/user';\r\n\r\ninterface Props {\r\n  duplicatesData: Array<any>;\r\n  comparisonColumns1: Array<string>;\r\n  comparisonColumns2: Array<string>;\r\n  fileStructure1: string;\r\n  fileStructure2: string;\r\n  partnerName: string;\r\n  partnerCompany: string;\r\n  user: UserState;\r\n}\r\n\r\nconst DuplicatesTableContainer = ({\r\n  duplicatesData,\r\n  comparisonColumns1,\r\n  comparisonColumns2,\r\n  fileStructure1,\r\n  fileStructure2,\r\n  partnerName,\r\n  partnerCompany,\r\n  user\r\n}: Props) => {\r\n  return (\r\n    <DuplicatesTable\r\n      duplicatesData={duplicatesData}\r\n      comparisonColumns1={comparisonColumns1}\r\n      comparisonColumns2={comparisonColumns2}\r\n      fileStructure1={fileStructure1}\r\n      fileStructure2={fileStructure2}\r\n      partnerName={partnerName}\r\n      partnerCompany={partnerCompany}\r\n      user={user}\r\n    />\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  duplicatesData: state.document.duplicatesData,\r\n  comparisonColumns1: state.document.comparisonColumns1,\r\n  comparisonColumns2: state.document.comparisonColumns2,\r\n  fileStructure1: state.document.fileStructure1,\r\n  fileStructure2: state.document.fileStructure2,\r\n  partnerName: state.document.partnerName,\r\n  partnerCompany: state.document.partnerCompany,\r\n  user: state.user\r\n});\r\n\r\nexport default connect(mapStateToProps)(DuplicatesTableContainer);","import React, { useRef } from 'react';\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Fab\r\n} from '@mui/material';\r\nimport { Download, ContentCopy } from '@mui/icons-material';\r\nimport { downloadSpreadsheetFromJSON } from '../../utils/spreadsheet.utils';\r\n\r\ninterface Props {\r\n  duplicatesData: Array<any>;\r\n  template: string;\r\n  handleTemplateChange: any;\r\n  handleCopyEmailTemplate: any;\r\n}\r\n\r\nconst EmailTemplate = ({\r\n  duplicatesData,\r\n  template,\r\n  handleTemplateChange,\r\n  handleCopyEmailTemplate\r\n}: Props) => {\r\n  const textAreaRef = useRef<any>(null);\r\n\r\n  const handleResultsDownload = () => {\r\n    downloadSpreadsheetFromJSON(duplicatesData);\r\n  }\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={2}\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      sx={{ height: '100%', width: '100%', marginTop: '3.5rem' }}\r\n    >\r\n      <Grid\r\n        item\r\n        container\r\n        xs={8}\r\n        sx={{ height: '100%', width: '100%' }}\r\n        direction=\"column\"\r\n        justifyContent=\"start\"\r\n        alignItems=\"center\"\r\n      >\r\n        <TextField\r\n          id=\"email-template-multiline\"\r\n          label=\"Modify and then Copy/Paste this email template\"\r\n          multiline\r\n          ref={textAreaRef}\r\n          rows={9}\r\n          defaultValue={template}\r\n          variant=\"filled\"\r\n          sx={{ width: '100%' }}\r\n          onChange={handleTemplateChange}\r\n        />\r\n        <Fab\r\n          variant=\"extended\"\r\n          aria-label=\"add\"\r\n          sx={{ marginTop: '2.5rem' }}\r\n          onClick={handleCopyEmailTemplate}\r\n        >\r\n          <ContentCopy sx={{ mr: 1 }} />\r\n          Copy Template\r\n        </Fab>\r\n        <Fab\r\n          variant=\"extended\"\r\n          aria-label=\"add\"\r\n          sx={{ marginTop: '2.5rem' }}\r\n          onClick={handleResultsDownload}\r\n        >\r\n          <Download sx={{ mr: 1 }} />\r\n          Download Results\r\n        </Fab>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default EmailTemplate;","export const UPDATE_EMAIL_TEMPLATE = 'UPDATE_EMAIL_TEMPLATE';\r\n\r\nexport const updateEmailTemplate = (updatedTemplate: string) => ({\r\n  type: UPDATE_EMAIL_TEMPLATE,\r\n  payload: updatedTemplate\r\n});","import React, { ChangeEvent } from 'react';\r\nimport EmailTemplate from '../../components/email-template';\r\nimport { connect } from 'react-redux';\r\nimport { updateEmailTemplate } from '../../state/actions/email-template';\r\nimport { showSuccess, showError, hideError, hideSuccess } from '../../state/actions/alert';\r\n\r\ninterface Props {\r\n  duplicatesData: Array<any>;\r\n  template: string;\r\n  updateEmailTemplate: any;\r\n  showSuccess: any;\r\n  hideSuccess: any;\r\n  showError: any;\r\n  hideError: any;\r\n}\r\n\r\nconst EmailTemplateContainer = ({\r\n  duplicatesData,\r\n  template,\r\n  updateEmailTemplate,\r\n  showSuccess,\r\n  hideSuccess,\r\n  showError,\r\n  hideError\r\n}: Props) => {\r\n  const handleTemplateChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    updateEmailTemplate(event.target.value);\r\n  }\r\n\r\n  const handleCopyEmailTemplate = async () => {\r\n    try {\r\n      await navigator.clipboard.writeText(template);\r\n      hideError();\r\n      showSuccess('Copied email template');\r\n      setTimeout(() => {\r\n        hideSuccess();\r\n      }, 5000);\r\n    } catch (err) {\r\n      showError('Failed to copy email template');\r\n      setTimeout(() => {\r\n        hideError();\r\n      }, 5000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <EmailTemplate\r\n      duplicatesData={duplicatesData}\r\n      template={template}\r\n      handleTemplateChange={handleTemplateChange}\r\n      handleCopyEmailTemplate={handleCopyEmailTemplate}\r\n    />\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  duplicatesData: state.document.duplicatesData,\r\n  template: state.emailTemplate.template\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  updateEmailTemplate: (value: string) => dispatch(updateEmailTemplate(value)),\r\n  showSuccess: (successMsg: string) => dispatch(showSuccess(successMsg)),\r\n  hideSuccess: () => dispatch(hideSuccess()),\r\n  showError: (message: string) => dispatch(showError(message)),\r\n  hideError: () => dispatch(hideError()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EmailTemplateContainer);","import React from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Paper\r\n} from '@mui/material';\r\n\r\ninterface StepperFooterProps {\r\n  steps: Array<string>;\r\n  handleNext: any;\r\n  handleBack: any;\r\n  activeStep: number;\r\n}\r\n\r\nconst StepperFooter = ({\r\n  steps,\r\n  activeStep,\r\n  handleBack,\r\n  handleNext\r\n}: StepperFooterProps) => {\r\n  return (\r\n    <Paper sx={{\r\n      position: 'fixed',\r\n      bottom: 0,\r\n      left: 0,\r\n      right: 0,\r\n      zIndex: 1510,\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      padding: '0.75rem'\r\n    }} elevation={3}>\r\n      <Button\r\n        disabled={activeStep === 0}\r\n        onClick={handleBack}\r\n        sx={{ mr: 1 }}\r\n      >\r\n        Back\r\n      </Button>\r\n      <Box sx={{ flex: '1 1 auto' }} />\r\n      <Button\r\n        disabled={activeStep === steps.length - 1}\r\n        onClick={handleNext}\r\n      >\r\n        Next\r\n      </Button>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default StepperFooter;","import React from 'react';\r\nimport StepperFooter from '../../components/stepper-footer';\r\nimport { connect } from 'react-redux';\r\nimport { changeStep } from '../../state/actions/step-progress';\r\n\r\ninterface Props {\r\n  steps: Array<string>;\r\n  activeStep: number;\r\n  changeStep: any;\r\n}\r\n\r\nconst StepperFooterContainer = ({ steps, activeStep, changeStep }: Props) => {\r\n  const handleNext = () => {\r\n    changeStep(activeStep += 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    changeStep(activeStep -= 1);\r\n  };\r\n\r\n  return (\r\n    <StepperFooter\r\n      activeStep={activeStep}\r\n      steps={steps}\r\n      handleNext={handleNext}\r\n      handleBack={handleBack}\r\n    />\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  activeStep: state.stepProgress.step\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  changeStep: (newStep: number) => dispatch(changeStep(newStep))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(StepperFooterContainer);","import * as React from 'react';\r\nimport {\r\n  Box,\r\n  Stepper,\r\n  Step,\r\n  StepButton,\r\n  Container,\r\n} from '@mui/material';\r\n\r\nimport UploadDocumentFormContainer from '../../containers/upload-document-form';\r\nimport DuplicatesTableContainer from '../../containers/duplicates-table';\r\nimport EmailTemplateContainer from '../../containers/email-template';\r\nimport StepperFooterContainer from '../../containers/stepper-footer';\r\n\r\nconst steps: Array<string> = ['Upload document', 'View results', 'Email customers'];\r\n\r\ninterface Props {\r\n  activeStep: number;\r\n  changeStep: any;\r\n}\r\n\r\nconst Home = ({ activeStep, changeStep }: Props) => {\r\n  return (\r\n    <>\r\n      <Box sx={{ width: '100%', height: '100%', marginTop: '3.5vh' }}>\r\n        <Stepper nonLinear={true} activeStep={activeStep} sx={{ marginLeft: '25%', marginRight: '25%'}}>\r\n          {steps.map((label: string, index: number) => {\r\n            const stepProps: { completed?: boolean } = {};\r\n            const labelProps: {\r\n              optional?: React.ReactNode;\r\n            } = {};\r\n            return (\r\n              <Step key={label} {...stepProps}>\r\n                <StepButton onClick={() => changeStep(index)} {...labelProps}>{label}</StepButton>\r\n              </Step>\r\n            );\r\n          })}\r\n        </Stepper>\r\n        {activeStep === 0 &&\r\n          <React.Fragment>\r\n            <Container sx={{ height: '100%', paddingBottom: '2rem' }}>\r\n              <UploadDocumentFormContainer />\r\n            </Container>\r\n          </React.Fragment>\r\n        }\r\n        {activeStep === 1 &&\r\n          <React.Fragment>\r\n            <Container sx={{ height: '100%', width: '100%', maxWidth: '100%' }} maxWidth={false}>\r\n              <DuplicatesTableContainer />\r\n            </Container>\r\n          </React.Fragment>\r\n        }\r\n        {activeStep === 2 &&\r\n          <React.Fragment>\r\n            <Container sx={{ height: '100%', width: '100%' }}>\r\n              <EmailTemplateContainer />\r\n            </Container>\r\n          </React.Fragment>\r\n        }\r\n      </Box>\r\n      <StepperFooterContainer steps={steps} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport Home from '../../pages/home';\r\nimport { connect } from 'react-redux';\r\nimport { changeStep } from '../../state/actions/step-progress';\r\n\r\ninterface Props {\r\n  activeStep: number;\r\n  changeStep: any;\r\n}\r\n\r\nconst HomeContainer = ({ activeStep, changeStep }: Props) => {\r\n  return (\r\n    <Home activeStep={activeStep} changeStep={changeStep} />\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  activeStep: state.stepProgress.step\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  changeStep: (newStep: number) => dispatch(changeStep(newStep))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeContainer);","import React from 'react';\r\nimport {\r\n  Box,\r\n  Fab,\r\n  TextField,\r\n  Grid,\r\n  Typography,\r\n} from '@mui/material';\r\nimport { Link } from 'react-router-dom';\r\nimport { useFormik } from 'formik';\r\n\r\ninterface Props {\r\n  onSubmit: any;\r\n}\r\n\r\nconst Register = ({ onSubmit }: Props) => {\r\n\r\n  const validate = (values: any) => {\r\n    const errors: any = {};\r\n    if (!values.password) {\r\n      errors.password = 'Required';\r\n    } else if (values.password.length < 8) {\r\n      errors.password = 'Must be 8 characters or more';\r\n    }\r\n  \r\n    if (!values.confirmPassword) {\r\n      errors.confirmPassword = 'Required';\r\n    } else if (values.confirmPassword !== values.password) {\r\n      errors.confirmPassword = 'Must match password';\r\n    }\r\n  \r\n    if (!values.email) {\r\n      errors.email = 'Required';\r\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n      errors.email = 'Invalid email address';\r\n    }\r\n  \r\n    return errors;\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n      password: '',\r\n      confirmPassword: '',\r\n      firstName: '',\r\n      lastName: '',\r\n      company: ''\r\n    },\r\n    validate,\r\n    onSubmit\r\n  });\r\n\r\n  const { values, errors, touched, handleBlur, handleChange, handleSubmit } = formik;\r\n\r\n  const isSubmitButtonDisabled = !!errors.email || !!errors.password || !!errors.confirmPassword\r\n    || !values.email || !values.password || !values.confirmPassword;\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{ width: '100%', marginTop: '6.5vh' }}>\r\n        <Grid\r\n          container\r\n          spacing={2}\r\n          justifyContent=\"center\"\r\n          sx={{ height: '100%' }}\r\n        >\r\n          <Grid\r\n            item\r\n            container\r\n            xs={6}\r\n            p={0}\r\n            sx={{ height: '100%' }}\r\n            direction=\"column\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Typography variant=\"h5\" sx={{ marginBottom: '2rem' }}>Register</Typography>\r\n            <form onSubmit={handleSubmit}  style={{ width: '100%' }}>\r\n              <TextField\r\n                required\r\n                id=\"standard-basic\"\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                variant=\"standard\"\r\n                sx={{ width: '100%', marginBottom: '1.5rem' }}\r\n                error={touched.email && !!errors.email}\r\n                helperText={touched.email && !!errors.email ? errors.email : null}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                value={values.email}\r\n              />\r\n              <TextField\r\n                required\r\n                id=\"standard-basic\"\r\n                label=\"Password\"\r\n                name=\"password\"\r\n                variant=\"standard\"\r\n                type=\"password\"\r\n                sx={{ width: '100%', marginBottom: '1.5rem' }}\r\n                error={touched.password && !!errors.password}\r\n                helperText={touched.password && !!errors.password ? errors.password : null}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                value={values.password}\r\n              />\r\n              <TextField\r\n                required\r\n                id=\"standard-basic\"\r\n                label=\"Confirm Password\"\r\n                name=\"confirmPassword\"\r\n                variant=\"standard\"\r\n                type=\"password\"\r\n                sx={{ width: '100%', marginBottom: '1.5rem' }}\r\n                error={touched.confirmPassword && !!errors.confirmPassword}\r\n                helperText={touched.confirmPassword && !!errors.confirmPassword ? errors.confirmPassword : null}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                value={values.confirmPassword}\r\n              />\r\n              <TextField\r\n                id=\"standard-basic\"\r\n                label=\"First Name\"\r\n                name=\"firstName\"\r\n                variant=\"standard\"\r\n                sx={{ width: '100%', marginBottom: '1.5rem' }}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                value={values.firstName}\r\n              />\r\n              <TextField\r\n                id=\"standard-basic\"\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                variant=\"standard\"\r\n                sx={{ width: '100%', marginBottom: '1.5rem' }}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                value={values.lastName}\r\n              />\r\n              <TextField\r\n                id=\"standard-basic\"\r\n                label=\"Company\"\r\n                name=\"company\"\r\n                variant=\"standard\"\r\n                sx={{ width: '100%' }}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                value={values.company}\r\n              />\r\n              <Grid\r\n                container\r\n                spacing={2}\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Grid\r\n                  item\r\n                  container\r\n                  xs={4}\r\n                  p={0}\r\n                  direction=\"column\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\"\r\n                >\r\n                  <Fab\r\n                    variant=\"extended\"\r\n                    aria-label=\"add\"\r\n                    sx={{ marginTop: '2.5rem', marginLeft: 'auto', marginRight: 'auto' }}\r\n                    type=\"submit\"\r\n                    disabled={isSubmitButtonDisabled}\r\n                  >\r\n                    Submit\r\n                  </Fab>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n            <Typography sx={{ marginTop: '2rem', marginBottom: '3rem' }}>\r\n              Already have an account? <Link className=\"auth-page-link\" to=\"/\">Sign in</Link>\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Register;","export const UPDATE_USER = 'UPDATE_USER';\r\n\r\nexport const updateUser = (user: any) => ({\r\n  type: UPDATE_USER,\r\n  payload: user\r\n});","import React from 'react';\r\nimport axios from 'axios';\r\nimport Register from '../../pages/register';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { updateUser } from '../../state/actions/user';\r\nimport { showError, hideError } from '../../state/actions/alert';\r\nimport { setIsLoading } from '../../state/actions/loading';\r\n\r\ninterface Props {\r\n  setIsLoading: any;\r\n  showError: any;\r\n  hideError: any;\r\n  updateUser: any;\r\n}\r\n\r\nconst RegisterContainer = ({\r\n  setIsLoading,\r\n  showError,\r\n  hideError,\r\n  updateUser\r\n}: Props) => {\r\n  const history = useHistory();\r\n\r\n  const onSubmit = (values: any) => {\r\n    setIsLoading(true);\r\n    const formData = new FormData();\r\n    formData.append('email', values.email);\r\n    formData.append('password', values.password);\r\n    formData.append('firstname', values.firstName);\r\n    formData.append('lastname', values.lastName);\r\n    formData.append('company', values.company);\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    };\r\n    axios.post('/api/v1/register', formData, config)\r\n      .then((res) => {\r\n        hideError();\r\n        updateUser(res.data);\r\n        setIsLoading(false);\r\n        history.push('/home');\r\n      })\r\n      .catch((err: any) => {\r\n        console.log('err', err);\r\n        setIsLoading(false);\r\n        showError('Registration failed.');\r\n        setTimeout(() => {\r\n          hideError();\r\n        }, 5000)\r\n      });\r\n  }\r\n\r\n  return (\r\n    <Register onSubmit={onSubmit} />\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  showError: (message: string) => dispatch(showError(message)),\r\n  hideError: () => dispatch(hideError()),\r\n  setIsLoading: (isLoading: boolean) => dispatch(setIsLoading(isLoading)),\r\n  updateUser: (user: any) => dispatch(updateUser(user))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(RegisterContainer);","import React from 'react';\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Typography,\r\n  TextField,\r\n  Fab,\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n} from '@mui/material';\r\nimport { Close } from '@mui/icons-material';\r\nimport { useFormik } from 'formik';\r\n\r\ninterface Props {\r\n  onClose: any;\r\n  onSubmit: any;\r\n}\r\n\r\nconst EmailCapture = ({ onClose, onSubmit }: Props) => {\r\n\r\n  const validate = (values: any) => {\r\n    const errors: any = {};\r\n\r\n    if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n      errors.email = 'Invalid email address';\r\n    }\r\n  \r\n    return errors;\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: ''\r\n    },\r\n    validate,\r\n    onSubmit\r\n  });\r\n\r\n  const { values, errors, touched, handleBlur, handleChange, handleSubmit } = formik;\r\n\r\n  return (\r\n    <Box sx={{ width: '100%', height: '100%', padding: '0 0 3rem 0' }}>\r\n      <AppBar sx={{ position: 'relative', marginBottom: '3rem' }}>\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"end\"\r\n            color=\"inherit\"\r\n            onClick={onClose}\r\n            aria-label=\"close\"\r\n          >\r\n            <Close />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Grid\r\n        container\r\n        spacing={2}\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        sx={{ height: '100%', width: '100%' }}\r\n      >\r\n        <Grid\r\n          item\r\n          container\r\n          xs={10}\r\n          p={0}\r\n          sx={{ height: '100%' }}\r\n          direction=\"column\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <form onSubmit={handleSubmit}>\r\n            <Typography variant=\"h5\" sx={{ marginBottom: '2rem' }}>Join the waitlist for Salesdap</Typography>\r\n            <TextField\r\n              label=\"email address\"\r\n              variant=\"standard\"\r\n              name=\"email\"\r\n              sx={{ width: '100%' }}\r\n              error={touched.email && !!errors.email}\r\n              helperText={errors.email ? errors.email : null}\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              value={values.email}\r\n            />\r\n            <Fab\r\n              variant=\"extended\"\r\n              aria-label=\"add\"\r\n              sx={{ marginTop: '2.5rem' }}\r\n              type=\"submit\"\r\n            >\r\n              submit\r\n            </Fab>\r\n          </form>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default EmailCapture;","import React from 'react';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport { setIsLoading } from '../../state/actions/loading';\r\nimport { showError, hideError, showSuccess, hideSuccess } from '../../state/actions/alert';\r\nimport EmailCapture from '../../pages/email-capture';\r\n\r\ninterface Props {\r\n  onClose: any;\r\n  showError: any;\r\n  hideError: any;\r\n  showSuccess: any;\r\n  hideSuccess: any;\r\n  setIsLoading: any;\r\n}\r\n\r\nconst EmailCaptureContainer = ({\r\n  onClose,\r\n  showError,\r\n  hideError,\r\n  showSuccess,\r\n  hideSuccess,\r\n  setIsLoading\r\n}: Props) => {\r\n  const onSubmit = (values: any) => {\r\n    setIsLoading(true);\r\n    const formData = new FormData();\r\n    formData.append('email', values.email);\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    };\r\n\r\n    axios.post('/api/v1/email', formData, config)\r\n      .then(() => {\r\n        hideError();\r\n        setIsLoading(false);\r\n        onClose();\r\n        showSuccess('Successfully registered to waitlist!');\r\n        setTimeout(() => {\r\n          hideSuccess();\r\n        }, 5000);\r\n      })\r\n      .catch((err: any) => {\r\n        console.log('email err', err);\r\n        setIsLoading(false);\r\n        showError('Waitlist registration failed. Please try again.');\r\n        setTimeout(() => {\r\n          hideError();\r\n        }, 5000)\r\n      });\r\n  }\r\n\r\n  return (\r\n    <EmailCapture onSubmit={onSubmit} onClose={onClose} />\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  showError: (message: string) => dispatch(showError(message)),\r\n  hideError: () => dispatch(hideError()),\r\n  showSuccess: (successMsg: string) => dispatch(showSuccess(successMsg)),\r\n  hideSuccess: () => dispatch(hideSuccess()),\r\n  setIsLoading: (isLoading: boolean) => dispatch(setIsLoading(isLoading)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(EmailCaptureContainer);","import React, { useState } from 'react';\r\nimport EmailCaptureContainer from '../../containers/email-capture';\r\nimport {\r\n  Box,\r\n  Fab,\r\n  TextField,\r\n  Grid,\r\n  Typography,\r\n  Dialog\r\n} from '@mui/material';\r\nimport { Link } from 'react-router-dom';\r\nimport { useFormik } from 'formik';\r\n\r\ninterface Props {\r\n  onSubmit: any;\r\n}\r\n\r\nconst Login = ({ onSubmit }: Props) => {\r\n  const [isEmailCaptureModalOpen, setIsEmailCaptureModalOpen] = useState(true);\r\n\r\n  const handleClose = (event: any) => {\r\n    setIsEmailCaptureModalOpen(false);\r\n  }\r\n\r\n  const validate = (values: any) => {\r\n    const errors: any = {};\r\n    if (!values.password) {\r\n      errors.password = 'Required';\r\n    }\r\n  \r\n    if (!values.email) {\r\n      errors.email = 'Required';\r\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n      errors.email = 'Invalid email address';\r\n    }\r\n  \r\n    return errors;\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n      password: ''\r\n    },\r\n    validate,\r\n    onSubmit\r\n  });\r\n\r\n  const { values, errors, touched, handleBlur, handleChange, handleSubmit } = formik;\r\n\r\n  const isSubmitButtonDisabled = !!errors.email || !!errors.password ||\r\n    !values.email || !values.password;\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{ width: '100%', marginTop: '6.5vh' }}>\r\n        <Grid\r\n          container\r\n          spacing={2}\r\n          justifyContent=\"center\"\r\n          sx={{ height: '100%' }}\r\n        >\r\n          <Grid\r\n            item\r\n            container\r\n            xs={6}\r\n            p={0}\r\n            sx={{ height: '100%' }}\r\n            direction=\"column\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Typography variant=\"h5\" sx={{ marginBottom: '2rem' }}>Login</Typography>\r\n            <form onSubmit={handleSubmit} style={{ width: '100%' }}>\r\n              <TextField\r\n                required\r\n                id=\"standard-basic\"\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                variant=\"standard\"\r\n                sx={{ width: '100%', marginBottom: '1.5rem' }}\r\n                error={touched.email && !!errors.email}\r\n                helperText={touched.email && !!errors.email ? errors.email : null}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                value={values.email}\r\n              />\r\n              <TextField\r\n                required\r\n                id=\"standard-basic\"\r\n                label=\"Password\"\r\n                name=\"password\"\r\n                variant=\"standard\"\r\n                type=\"password\"\r\n                sx={{ width: '100%' }}\r\n                error={touched.password && !!errors.password}\r\n                helperText={touched.password && !!errors.password ? errors.password : null}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                value={values.password}\r\n              />\r\n              <Grid\r\n                container\r\n                spacing={2}\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Grid\r\n                  item\r\n                  container\r\n                  xs={6}\r\n                  p={0}\r\n                  direction=\"column\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\"\r\n                >\r\n                  <Fab\r\n                    variant=\"extended\"\r\n                    aria-label=\"add\"\r\n                    sx={{ marginTop: '2.5rem', marginLeft: 'auto', marginRight: 'auto' }}\r\n                    type=\"submit\"\r\n                    disabled={isSubmitButtonDisabled}\r\n                  >\r\n                    Submit\r\n                  </Fab>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n            <Typography sx={{ marginTop: '2rem' }}>\r\n              Don't have an account?  <Link className=\"auth-page-link\" to=\"/register\">Sign up now!</Link>\r\n            </Typography>\r\n            <Typography sx={{ marginTop: '0.5rem', marginBottom: '3rem' }}>\r\n              Forgot your password?  <Link className=\"auth-page-link\" to=\"/forgot-password\">Reset your password</Link>\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n\r\n      <Dialog open={isEmailCaptureModalOpen} onClose={handleClose}>\r\n        <EmailCaptureContainer onClose={handleClose} />\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;","import React from 'react';\r\nimport axios from 'axios';\r\nimport Login from '../../pages/login';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { updateUser } from '../../state/actions/user';\r\nimport { showError, hideError } from '../../state/actions/alert';\r\nimport { setIsLoading } from '../../state/actions/loading';\r\n\r\ninterface Props {\r\n  setIsLoading: any;\r\n  showError: any;\r\n  hideError: any;\r\n  updateUser: any;\r\n}\r\n\r\nconst LoginContainer = ({\r\n  setIsLoading,\r\n  showError,\r\n  hideError,\r\n  updateUser\r\n}: Props) => {\r\n  const history = useHistory();\r\n\r\n  const onSubmit = (values: any) => {\r\n    setIsLoading(true);\r\n    const formData = new FormData();\r\n    formData.append('email', values.email);\r\n    formData.append('password', values.password);\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    };\r\n\r\n    axios.post('http://localhost:3001/api/v1/login', formData, config)\r\n      .then((res: any) => {\r\n        hideError();\r\n        updateUser(res.data);\r\n        setIsLoading(false);\r\n        history.push('/home');\r\n      })\r\n      .catch((err: any) => {\r\n        console.log('err', err);\r\n        setIsLoading(false);\r\n        showError('Wrong email or password');\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Login onSubmit={onSubmit} />\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  showError: (message: string) => dispatch(showError(message)),\r\n  hideError: () => dispatch(hideError()),\r\n  setIsLoading: (isLoading: boolean) => dispatch(setIsLoading(isLoading)),\r\n  updateUser: (user: any) => dispatch(updateUser(user))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(LoginContainer);","import React, { useRef } from 'react';\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Typography,\r\n  Paper,\r\n  Chip,\r\n  Fab,\r\n} from '@mui/material';\r\nimport { Attachment, Upload } from '@mui/icons-material';\r\nimport { UserState } from '../../state/reducers/user';\r\n\r\ninterface Props {\r\n  user: UserState;\r\n  validateFileSelection: any;\r\n  handlePinnedFileClick: any;\r\n}\r\n\r\nconst Profile = ({\r\n  user,\r\n  validateFileSelection,\r\n  handlePinnedFileClick\r\n}: Props) => {\r\n  const inputFileRef: any = useRef(null);\r\n\r\n  const handleFileSelectionBtnClick = () => {\r\n    /*Collecting node-element and performing click*/\r\n    if (inputFileRef&& inputFileRef.current) {\r\n      inputFileRef.current.click();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{ width: '100%', marginTop: '3.5vh' }}>\r\n        <Grid\r\n          container\r\n          spacing={2}\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          sx={{ height: '100%' }}\r\n        >\r\n          <Grid\r\n            item\r\n            container\r\n            xs={8}\r\n            p={0}\r\n            sx={{ height: '100%' }}\r\n            direction=\"column\"\r\n            justifyContent=\"start\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Paper elevation={3} sx={{ width: '100%', padding: '3rem 0 3rem 3rem', margin: '3rem auto 3rem auto' }}>\r\n              <Typography variant=\"h5\" sx={{ marginBottom: '2rem' }}>Profile</Typography>\r\n              <Typography variant=\"subtitle1\" sx={{ marginBottom: '2rem' }}>Name: {user.firstname} {user.lastname}</Typography>\r\n              <Typography variant=\"subtitle1\" sx={{ marginBottom: '2rem' }}>Email: {user.email}</Typography>\r\n              <Typography variant=\"subtitle1\" sx={{ marginBottom: '2rem' }}>Company: {user.company}</Typography>\r\n              <Typography variant=\"subtitle1\">Pinned File:</Typography>\r\n              <Chip onClick={handlePinnedFileClick} icon={<Attachment />} label={user.pinnedFileName} />\r\n              <Grid\r\n                item\r\n                container\r\n                xs={6}\r\n                p={0}\r\n                direction=\"column\"\r\n                justifyContent=\"start\"\r\n                alignItems=\"start\"\r\n              >\r\n                <Fab\r\n                  variant=\"extended\"\r\n                  aria-label=\"add\"\r\n                  sx={{ marginTop: '2.5rem', minWidth: '208px' }}\r\n                  onClick={handleFileSelectionBtnClick}\r\n                >\r\n                  <Upload sx={{ mr: 1 }} />\r\n                  Select Pinned File\r\n                </Fab>\r\n                <input\r\n                  type=\"file\"\r\n                  ref={inputFileRef}\r\n                  className=\"file-input\"\r\n                  onChange={validateFileSelection}\r\n                  name=\"sales_file\"\r\n                />\r\n              </Grid>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport axios from 'axios';\r\nimport Profile from '../../pages/profile';\r\nimport {\r\n  createFileLink,\r\n  getPinnedFile\r\n} from '../../utils/spreadsheet.utils';\r\nimport { connect } from 'react-redux';\r\nimport { pinFileSuccess } from '../../state/actions/document';\r\nimport { UserState } from '../../state/reducers/user';\r\nimport { checkIsValidFileType } from '../../utils/validate-file-type';\r\nimport { showError, hideError } from '../../state/actions/alert';\r\nimport { setIsLoading } from '../../state/actions/loading';\r\n\r\ninterface Props {\r\n  user: UserState;\r\n  setIsLoading: any;\r\n  showError: any;\r\n  hideError: any;\r\n  pinFileSuccess: any;\r\n}\r\n\r\nconst ProfileContainer = ({\r\n  user,\r\n  setIsLoading,\r\n  showError,\r\n  hideError,\r\n  pinFileSuccess\r\n}: Props) => {\r\n  const handlePinnedFileClick = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const pinnedFileData = await getPinnedFile(user.pinnedFileId);\r\n      setIsLoading(false);\r\n      createFileLink(pinnedFileData.data, user.pinnedFileName);\r\n    } catch (err: any) {\r\n      console.log('err', err);\r\n      setIsLoading(false);\r\n      showError('Failed to download pinned file.');\r\n    }\r\n  };\r\n\r\n  const validateFileSelection = (event: any) => {\r\n    const document: any = event && event.target && event.target.files ?\r\n      event.target.files[0] :\r\n      null;\r\n    const isValidDocType: boolean = document && document.name ?\r\n      checkIsValidFileType(document.name) : false;\r\n\r\n    if (isValidDocType) {\r\n      hideError();\r\n      handleFilePinning(document);\r\n    } else {\r\n      showError('Invalid file type. Only pin .xls, .xlsx, or .csv');\r\n    }\r\n  };\r\n\r\n  const handleFilePinning = (file: any) => {\r\n    setIsLoading(true);\r\n    const formData = new FormData();\r\n    if (\r\n      file &&\r\n      file.name\r\n    ) {\r\n      formData.append(\r\n        'sales_file',\r\n        file,\r\n        file.name\r\n      );\r\n      formData.append(\r\n        'email',\r\n        user.email\r\n      );\r\n    }\r\n    axios.post('/api/v1/pinfile', formData)\r\n      .then((res: any) => {\r\n        pinFileSuccess(res.data);\r\n        hideError();\r\n        setIsLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setIsLoading(false);\r\n        showError('Failed to pin file.');\r\n        setTimeout(() => {\r\n          hideError();\r\n        }, 5000)\r\n      });\r\n  }\r\n\r\n  return (\r\n    <Profile\r\n      user={user}\r\n      validateFileSelection={validateFileSelection}\r\n      handlePinnedFileClick={handlePinnedFileClick}\r\n    />\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  user: state.user\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  showError: (message: string) => dispatch(showError(message)),\r\n  hideError: () => dispatch(hideError()),\r\n  setIsLoading: (isLoading: boolean) => dispatch(setIsLoading(isLoading)),\r\n  pinFileSuccess: (fileMetadata: any) => dispatch(pinFileSuccess(fileMetadata))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileContainer);","import React from 'react';\r\nimport {\r\n  Box,\r\n  Fab,\r\n  TextField,\r\n  Grid,\r\n  Typography,\r\n} from '@mui/material';\r\nimport { useFormik } from 'formik';\r\n\r\ninterface Props {\r\n  onSubmit: any;\r\n}\r\n\r\nconst PasswordReset = ({ onSubmit }: Props) => {\r\n  const validate = (values: any) => {\r\n    const errors: any = {};\r\n    if (!values.email) {\r\n      errors.email = 'Required';\r\n    }\r\n\r\n    if (!values.password) {\r\n      errors.password = 'Required';\r\n    } else if (values.password.length < 8) {\r\n      errors.password = 'Must be 8 characters or more';\r\n    }\r\n  \r\n    if (!values.confirmPassword) {\r\n      errors.confirmPassword = 'Required';\r\n    } else if (values.confirmPassword !== values.password) {\r\n      errors.confirmPassword = 'Must match password';\r\n    }\r\n  \r\n    return errors;\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n      password: '',\r\n      confirmPassword: '',\r\n    },\r\n    validate,\r\n    onSubmit\r\n  });\r\n\r\n  const { values, errors, touched, handleBlur, handleChange, handleSubmit } = formik;\r\n\r\n  const isSubmitButtonDisabled = !!errors.email || !!errors.password || !!errors.confirmPassword\r\n    || !values.email || !values.password || !values.confirmPassword;\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{ width: '100%', marginTop: '6.5vh' }}>\r\n        <Grid\r\n          container\r\n          spacing={2}\r\n          justifyContent=\"center\"\r\n          sx={{ height: '100%' }}\r\n        >\r\n          <Grid\r\n            item\r\n            container\r\n            xs={6}\r\n            p={0}\r\n            sx={{ height: '100%' }}\r\n            direction=\"column\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Typography variant=\"h5\" sx={{ marginBottom: '2rem' }}>Reset your password</Typography>\r\n            <form onSubmit={handleSubmit}  style={{ width: '100%' }}>\r\n              <TextField\r\n                required\r\n                id=\"standard-basic\"\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                variant=\"standard\"\r\n                sx={{ width: '100%', marginBottom: '1.5rem' }}\r\n                error={touched.email && !!errors.email}\r\n                helperText={touched.email && !!errors.email ? errors.email : null}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                value={values.email}\r\n              />\r\n              <TextField\r\n                required\r\n                id=\"standard-basic\"\r\n                label=\"Password\"\r\n                name=\"password\"\r\n                variant=\"standard\"\r\n                type=\"password\"\r\n                sx={{ width: '100%', marginBottom: '1.5rem' }}\r\n                error={touched.password && !!errors.password}\r\n                helperText={touched.password && !!errors.password ? errors.password : null}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                value={values.password}\r\n              />\r\n              <TextField\r\n                required\r\n                id=\"standard-basic\"\r\n                label=\"Confirm Password\"\r\n                name=\"confirmPassword\"\r\n                variant=\"standard\"\r\n                type=\"password\"\r\n                sx={{ width: '100%' }}\r\n                error={touched.confirmPassword && !!errors.confirmPassword}\r\n                helperText={touched.confirmPassword && !!errors.confirmPassword ? errors.confirmPassword : null}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                value={values.confirmPassword}\r\n              />\r\n              <Grid\r\n                container\r\n                spacing={2}\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Grid\r\n                  item\r\n                  container\r\n                  xs={8}\r\n                  p={0}\r\n                  direction=\"column\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\"\r\n                >\r\n                  <Fab\r\n                    variant=\"extended\"\r\n                    aria-label=\"add\"\r\n                    sx={{ margin: '2.5rem auto 3rem auto' }}\r\n                    type=\"submit\"\r\n                    disabled={isSubmitButtonDisabled}\r\n                  >\r\n                    Reset Password\r\n                  </Fab>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PasswordReset;","import React, { useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport PasswordReset from '../../pages/password-reset';\r\nimport { connect } from 'react-redux';\r\nimport { hideError, showError } from '../../state/actions/alert';\r\nimport { setIsLoading } from '../../state/actions/loading';\r\n\r\ninterface Props {\r\n  setIsLoading: any;\r\n  showError: any;\r\n  hideError: any;\r\n}\r\n\r\nconst PasswordResetContainer = ({ setIsLoading, showError, hideError }: Props) => {\r\n  const history = useHistory();\r\n  const params: any = useParams();\r\n\r\n  useEffect(() => {\r\n    axios.post('/api/v1/resetpassword', { token: params.token })\r\n      .catch((err) => {\r\n        history.push('/');\r\n      });\r\n  }, [params, history]);\r\n\r\n  const onSubmit = (values: any) => {\r\n    const formData = new FormData();\r\n    formData.append('email', values.email);\r\n    formData.append('password', values.password);\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    };\r\n    setIsLoading(true);\r\n    axios.post('/api/v1/updatepassword', formData, config)\r\n      .then(() => {\r\n        hideError();\r\n        setIsLoading(false);\r\n        history.push('/');\r\n      })\r\n      .catch((err: any) => {\r\n        console.log('err', err);\r\n        setIsLoading(false);\r\n        showError('Password reset failed. Please try again.');\r\n        setTimeout(() => {\r\n          hideError();\r\n        }, 5000);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <PasswordReset onSubmit={onSubmit} />\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  showError: (message: string) => dispatch(showError(message)),\r\n  hideError: () => dispatch(hideError()),\r\n  setIsLoading: (isLoading: boolean) => dispatch(setIsLoading(isLoading)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(PasswordResetContainer);","import React from 'react';\r\nimport {\r\n  Box,\r\n  Fab,\r\n  TextField,\r\n  Grid,\r\n  Typography,\r\n} from '@mui/material';\r\nimport { useFormik } from 'formik';\r\n\r\ninterface Props {\r\n  onSubmit: any;\r\n}\r\n\r\nconst ForgotPassword = ({ onSubmit }: Props) => {\r\n  const validate = (values: any) => {\r\n    const errors: any = {};\r\n  \r\n    if (!values.email) {\r\n      errors.email = 'Required';\r\n    }\r\n  \r\n    return errors;\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n    },\r\n    validate,\r\n    onSubmit\r\n  });\r\n\r\n  const { values, errors, touched, handleBlur, handleChange, handleSubmit } = formik;\r\n\r\n  const isSubmitButtonDisabled = !!errors.email || !values.email;\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{ width: '100%', marginTop: '6.5vh' }}>\r\n        <Grid\r\n          container\r\n          spacing={2}\r\n          justifyContent=\"center\"\r\n          sx={{ height: '100%' }}\r\n        >\r\n          <Grid\r\n            item\r\n            container\r\n            xs={6}\r\n            p={0}\r\n            sx={{ height: '100%' }}\r\n            direction=\"column\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Typography variant=\"h5\" sx={{ marginBottom: '2rem' }}>Forgot my password</Typography>\r\n            <Typography variant=\"subtitle1\" sx={{ marginBottom: '1.5rem', width: '80%' }}>\r\n              Enter your email, and then you'll receive a verification code at that address. Use that code to reset your password.\r\n            </Typography>\r\n            <form onSubmit={handleSubmit}  style={{ width: '100%' }}>\r\n              <TextField\r\n                required\r\n                id=\"standard-basic\"\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                variant=\"standard\"\r\n                sx={{ width: '100%' }}\r\n                error={touched.email && !!errors.email}\r\n                helperText={errors.email ? errors.email : null}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                value={values.email}\r\n              />\r\n              <Grid\r\n                container\r\n                spacing={2}\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Grid\r\n                  item\r\n                  container\r\n                  xs={12}\r\n                  p={0}\r\n                  direction=\"column\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\"\r\n                >\r\n                  <Fab\r\n                    variant=\"extended\"\r\n                    aria-label=\"add\"\r\n                    sx={{ margin: '2.5rem auto 3rem auto' }}\r\n                    type=\"submit\"\r\n                    disabled={isSubmitButtonDisabled}\r\n                  >\r\n                    Send Password Reset Email\r\n                  </Fab>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;","import React from 'react';\r\nimport axios from 'axios';\r\nimport ForgotPassword from '../../pages/forgot-password';\r\nimport { connect } from 'react-redux';\r\nimport { hideError, showError } from '../../state/actions/alert';\r\nimport { setIsLoading } from '../../state/actions/loading';\r\n\r\ninterface Props {\r\n  setIsLoading: any;\r\n  showError: any;\r\n  hideError: any;\r\n}\r\n\r\nconst ForgotPasswordContainer = ({ setIsLoading, showError, hideError }: Props) => {\r\n  const onSubmit = (values: any) => {\r\n    const formData = new FormData();\r\n    formData.append('email', values.email);\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    };\r\n    setIsLoading(true);\r\n    axios.post('/api/v1/forgotpassword', formData, config)\r\n      .then(() => {\r\n        setIsLoading(false);\r\n        hideError();\r\n      })\r\n      .catch((err: any) => {\r\n        console.log('err', err);\r\n        setIsLoading(false);\r\n        showError('Wrong email or password');\r\n      });\r\n  };\r\n\r\n  return (\r\n    <ForgotPassword onSubmit={onSubmit} />\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  showError: (message: string) => dispatch(showError(message)),\r\n  hideError: () => dispatch(hideError()),\r\n  setIsLoading: (isLoading: boolean) => dispatch(setIsLoading(isLoading)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ForgotPasswordContainer);","import React from 'react';\r\nimport { Route, Redirect, useLocation } from 'react-router-dom';\r\n\r\nconst PrivateRoute = (props: any) => {\r\n  const location = useLocation();\r\n\r\n  return props.user && props.user.email ? (\r\n    <Route {...props} />\r\n  ) : (\r\n    <Redirect\r\n      to={{\r\n        pathname: \"/\",\r\n        state: { from: location }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;","import * as React from 'react';\r\nimport {\r\n  AppBar,\r\n  Box,\r\n  Toolbar,\r\n  Typography,\r\n  IconButton,\r\n  Menu,\r\n  MenuItem,\r\n  Button\r\n} from '@mui/material';\r\nimport { Handshake, AccountCircle } from '@mui/icons-material';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { UserState } from '../../state/reducers/user';\r\n\r\ninterface Props {\r\n  user: UserState;\r\n  handleLogout: any;\r\n  hideError: any;\r\n}\r\n\r\nconst NavBar = ({ user, handleLogout, hideError }: Props) => {\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const history = useHistory();\r\n\r\n  const handleMenu = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    hideError();\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleHomeClick = () => {\r\n    hideError();\r\n    history.push('/home');\r\n  }\r\n\r\n  const logoutAndClose = () => {\r\n    handleClose();\r\n    handleLogout();\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            size=\"large\"\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            sx={{ mr: 2 }}\r\n            onClick={handleHomeClick}\r\n          >\r\n            <Handshake />\r\n          </IconButton>\r\n          <Button variant=\"text\" onClick={handleHomeClick}>\r\n            <Typography variant=\"h6\" sx={{ flexGrow: 1, color: 'white' }}>\r\n              Salesdap\r\n            </Typography>\r\n          </Button>\r\n\r\n          {user && user.email && <>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls=\"menu-appbar\"\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMenu}\r\n              color=\"inherit\"\r\n              sx={{ marginLeft: 'auto' }}\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n            <Menu\r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorEl}\r\n              anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n              }}\r\n              open={Boolean(anchorEl)}\r\n              onClose={handleClose}\r\n            >\r\n              <MenuItem onClick={handleClose}>\r\n                <Link style={{ color: 'black', textDecoration: 'none' }} to=\"/profile\">Profile</Link>\r\n              </MenuItem>\r\n              <MenuItem onClick={logoutAndClose}>Logout</MenuItem>\r\n            </Menu>\r\n          </>}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default NavBar;","import { UPDATE_USER } from '../../actions/user';\r\nimport { PIN_FILE_SUCCESS } from '../../actions/document';\r\n\r\nexport interface UserState {\r\n  firstname: string;\r\n  lastname: string;\r\n  email: string;\r\n  company: string;\r\n  pinnedFileName: string;\r\n  pinnedFileId: string;\r\n}\r\n\r\nexport const initialState: UserState = {\r\n  firstname: '',\r\n  lastname: '',\r\n  email: '',\r\n  company: '',\r\n  pinnedFileName: '',\r\n  pinnedFileId: ''\r\n}\r\n\r\nexport const userReducer = (state = initialState, action: any) => {\r\n  switch (action.type) {\r\n    case UPDATE_USER:\r\n      return {\r\n        ...state,\r\n        email: action.payload.email,\r\n        firstname: action.payload.firstname,\r\n        lastname: action.payload.lastname,\r\n        company: action.payload.company,\r\n        pinnedFileName: action.payload.pinned_filename,\r\n        pinnedFileId: action.payload.pinned_file_id\r\n      };\r\n    case PIN_FILE_SUCCESS:\r\n      console.log('action payload pin', action.payload);\r\n      return {\r\n        ...state,\r\n        pinnedFileName: action.payload.pinned_filename,\r\n        pinnedFileId: action.payload.pinned_file_id\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}","import React from 'react';\r\n// import axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { updateUser } from '../../state/actions/user';\r\nimport { showError, hideError } from '../../state/actions/alert';\r\nimport NavBar from '../../components/nav-bar';\r\nimport { UserState, initialState } from '../../state/reducers/user';\r\n\r\ninterface Props {\r\n  user: UserState;\r\n  hideError: any;\r\n  updateUser: any;\r\n}\r\n\r\nconst NavBarContainer = ({ user, hideError, updateUser }: Props) => {\r\n  const history = useHistory();\r\n\r\n  const handleLogout = () => {\r\n    // axios.post('/api/v1/logout') <-- until AWS Redis stuff gets setup, keep this commented\r\n    //   .then(() => {\r\n        // hideError();\r\n        updateUser({...initialState});\r\n        history.push('/');\r\n      // })\r\n      // .catch((err) => {\r\n      //   console.log('logout err', err);\r\n      //   showError('Failed to logout');\r\n      //   setTimeout(() => {\r\n      //     hideError();\r\n      //   }, 5000);\r\n      // });\r\n  }\r\n\r\n  return (\r\n    <NavBar user={user} handleLogout={handleLogout} hideError={hideError} />\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  showError: (message: string) => dispatch(showError(message)),\r\n  hideError: () => dispatch(hideError()),\r\n  updateUser: (user: any) => dispatch(updateUser(user))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(NavBarContainer);","import HomeContainer from '../../containers/home';\r\nimport RegisterContainer from '../../containers/register';\r\nimport LoginContainer from '../../containers/login';\r\nimport ProfileContainer from '../../containers/profile';\r\nimport PasswordResetContainer from '../../containers/password-reset';\r\nimport ForgotPasswordContainer from '../../containers/forgot-password';\r\nimport PrivateRoute from '../private-route'; // set everything to private after testing\r\nimport NavBarContainer from '../../containers/nav-bar';\r\nimport {\r\n  Alert,\r\n  Backdrop,\r\n  CircularProgress\r\n} from '@mui/material';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport { AlertState } from '../../state/reducers/alert';\r\nimport { UserState } from '../../state/reducers/user';\r\n\r\ninterface Props {\r\n  alert: AlertState;\r\n  loading: boolean;\r\n  user: UserState;\r\n  handleAlertClose: any;\r\n}\r\n\r\nconst Routes = ({\r\n  alert,\r\n  loading,\r\n  user,\r\n  handleAlertClose\r\n}: Props) => {\r\n  return (\r\n    <BrowserRouter>\r\n      <main>\r\n        <NavBarContainer user={user} />\r\n        <Switch>\r\n          <Route exact path=\"/home\" component={HomeContainer} />\r\n          <Route exact path=\"/\" component={LoginContainer} />\r\n          <Route exact path=\"/register\" component={RegisterContainer} />\r\n          <PrivateRoute exact path=\"/profile\" component={ProfileContainer} user={user} />\r\n          <Route exact path=\"/forgot-password\" component={ForgotPasswordContainer} />\r\n          <Route path=\"/reset-password/:token\" component={PasswordResetContainer} />\r\n        </Switch>\r\n        {alert.isOpen && <Alert\r\n          variant=\"standard\"\r\n          severity={alert.alertType || \"error\"}\r\n          onClose={handleAlertClose}\r\n          sx={{\r\n            position: 'fixed',\r\n            bottom: '-2%',\r\n            left: '50%',\r\n            transform: 'translate(-50%, -50%)',\r\n            zIndex: 1570,\r\n            borderRadius: '10px',\r\n            width: 'fit-content',\r\n            maxWidth: '33%',\r\n            flexWrap: 'nowrap'\r\n          }}\r\n        >\r\n          {alert.message}\r\n        </Alert>}\r\n        <Backdrop open={loading} sx={{ zIndex: 1550 }}>\r\n          <CircularProgress color=\"inherit\" />\r\n        </Backdrop>\r\n      </main>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default Routes;\r\n","import Routes from '../../components/routes';\r\nimport { connect } from 'react-redux';\r\nimport { AlertState } from '../../state/reducers/alert';\r\nimport { UserState } from '../../state/reducers/user';\r\nimport { hideError, hideSuccess } from '../../state/actions/alert';\r\n\r\ninterface Props {\r\n  alert: AlertState;\r\n  loading: boolean;\r\n  user: UserState;\r\n  hideError: any;\r\n  hideSuccess: any;\r\n}\r\n\r\nconst RoutesContainer = ({\r\n  alert,\r\n  loading,\r\n  user,\r\n  hideError,\r\n  hideSuccess\r\n}: Props) => {\r\n  const handleAlertClose = () => {\r\n    if (alert.alertType === 'error') {\r\n      hideError();\r\n    } else if (alert.alertType === 'success') {\r\n      hideSuccess();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Routes\r\n      alert={alert}\r\n      loading={loading}\r\n      user={user}\r\n      handleAlertClose={handleAlertClose}\r\n    />\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  alert: state.alert,\r\n  loading: state.loading.isLoading,\r\n  user: state.user\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  hideError: () => dispatch(hideError()),\r\n  hideSuccess: () => dispatch(hideSuccess())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RoutesContainer);\r\n","import {\r\n  UPLOAD_DOCUMENT_SUCCESS,\r\n  SELECT_DOCUMENT,\r\n  CHANGE_COMPARISON_COLUMN,\r\n  SET_FILE_SOURCE,\r\n  SET_COMPARISON_COLUMNS_ERROR,\r\n  SET_ALL_COLUMNS,\r\n  SET_FILE_STRUCTURE,\r\n  CHANGE_UNFORMATTED_DATA,\r\n  FORMATTED_DATA,\r\n  CHANGE_PARTNER_NAME,\r\n  CHANGE_PARTNER_COMPANY\r\n} from '../../actions/document';\r\nimport { addMessageToErrorList, removeMessageFromErrorList } from '../../../utils/update-comparison-columns';\r\n\r\nexport interface SelectedDocument {\r\n  data: Array<any>;\r\n  name: string;\r\n  allColumns: Array<string>;\r\n  columnChooserGridData: Array<any>;\r\n}\r\n\r\nexport interface DocumentState {\r\n  duplicatesData: Array<any>;\r\n  selectedDocument1: SelectedDocument;\r\n  selectedDocument2: SelectedDocument;\r\n  comparisonColumns1: Array<string>;\r\n  comparisonColumns2: Array<string>;\r\n  fileSource1: string;\r\n  fileSource2: string;\r\n  comparisonColumns1Error: Array<string>;\r\n  comparisonColumns2Error: Array<string>;\r\n  fileStructure1: string;\r\n  fileStructure2: string;\r\n  unformattedData1: string;\r\n  unformattedData2: string;\r\n  partnerName: string;\r\n  partnerCompany: string;\r\n}\r\n\r\nconst initialState: DocumentState = {\r\n  duplicatesData: [],\r\n  selectedDocument1: {\r\n    data: [],\r\n    name: '',\r\n    allColumns: [],\r\n    columnChooserGridData: []\r\n  },\r\n  selectedDocument2: {\r\n    data: [],\r\n    name: '',\r\n    allColumns: [],\r\n    columnChooserGridData: []\r\n  },\r\n  comparisonColumns1: [],\r\n  comparisonColumns2: [],\r\n  fileSource1: 'upload',\r\n  fileSource2: 'upload',\r\n  comparisonColumns1Error: [],\r\n  comparisonColumns2Error: [],\r\n  fileStructure1: FORMATTED_DATA,\r\n  fileStructure2: FORMATTED_DATA,\r\n  unformattedData1: '',\r\n  unformattedData2: '',\r\n  partnerName: '',\r\n  partnerCompany: ''\r\n};\r\n\r\nexport const COMPARISON_COLUMNS_LIMIT: number = 5;\r\nexport const MISMATCHED_COLUMNS_ERR: string = 'The number of selected columns for each file needs to match.';\r\nexport const TOO_MANY_COLUMNS_ERR: string = `Limit of ${COMPARISON_COLUMNS_LIMIT} columns exceeded.`;\r\nexport const REQUIRED_ERR: string = 'At least 1 column is required';\r\n\r\nexport const documentReducer = (state = initialState, action: any) => {\r\n  switch (action.type) {\r\n    case CHANGE_COMPARISON_COLUMN:\r\n      const { payload, index } = action;\r\n      let errorMsg1 = [...state.comparisonColumns1Error];\r\n      let errorMsg2 = [...state.comparisonColumns2Error];\r\n\r\n      if (\r\n        (index === 0 && !!state.comparisonColumns2.length && payload.length !== state.comparisonColumns2.length) ||\r\n        (index === 1 && !!state.comparisonColumns1.length && payload.length !== state.comparisonColumns1.length)\r\n      ) {\r\n        addMessageToErrorList(errorMsg1, MISMATCHED_COLUMNS_ERR);\r\n        addMessageToErrorList(errorMsg2, MISMATCHED_COLUMNS_ERR);\r\n      } else if (\r\n        (index === 0 && payload.length === state.comparisonColumns2.length) ||\r\n        (index === 1 && payload.length === state.comparisonColumns1.length)\r\n      ) {\r\n        removeMessageFromErrorList(errorMsg1, MISMATCHED_COLUMNS_ERR);\r\n        removeMessageFromErrorList(errorMsg2, MISMATCHED_COLUMNS_ERR);\r\n      }\r\n      if (index === 0) {\r\n        if (payload.length > COMPARISON_COLUMNS_LIMIT) {\r\n          addMessageToErrorList(errorMsg1, TOO_MANY_COLUMNS_ERR);\r\n        } else {\r\n          removeMessageFromErrorList(errorMsg1, TOO_MANY_COLUMNS_ERR);\r\n        }\r\n        if (payload.length === 0) {\r\n          addMessageToErrorList(errorMsg1, REQUIRED_ERR);\r\n        } else {\r\n          removeMessageFromErrorList(errorMsg1, REQUIRED_ERR);\r\n        }\r\n      } else if (index === 1) {\r\n        if (payload.length > COMPARISON_COLUMNS_LIMIT) {\r\n          addMessageToErrorList(errorMsg2, TOO_MANY_COLUMNS_ERR);\r\n        } else {\r\n          removeMessageFromErrorList(errorMsg2, TOO_MANY_COLUMNS_ERR);\r\n        }\r\n        if (payload.length === 0) {\r\n          addMessageToErrorList(errorMsg2, REQUIRED_ERR);\r\n        } else {\r\n          removeMessageFromErrorList(errorMsg2, REQUIRED_ERR);\r\n        }\r\n      }\r\n\r\n      if (action.index === 0) {\r\n        return {\r\n          ...state,\r\n          comparisonColumns1: action.payload,\r\n          comparisonColumns1Error: errorMsg1,\r\n          comparisonColumns2Error: errorMsg2\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          comparisonColumns2: action.payload,\r\n          comparisonColumns1Error: errorMsg1,\r\n          comparisonColumns2Error: errorMsg2\r\n        };\r\n      }\r\n    case SET_COMPARISON_COLUMNS_ERROR:\r\n      const errorMsg = action.index === 0 ? [...state.comparisonColumns1Error] : [...state.comparisonColumns2Error];\r\n      if (action.payload.length === 0) {\r\n        addMessageToErrorList(errorMsg, REQUIRED_ERR);\r\n      }\r\n      if (action.index === 0) {\r\n        return {\r\n          ...state,\r\n          comparisonColumns1Error: errorMsg\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          comparisonColumns2Error: errorMsg\r\n        }\r\n      }\r\n    case SELECT_DOCUMENT:\r\n      if (action.index === 0) {\r\n        return {\r\n          ...state,\r\n          comparisonColumns1: [],\r\n          selectedDocument1: {\r\n            data: action.payload,\r\n            name: action.name,\r\n            columnChooserGridData: action.columnChooserGridData,\r\n            allColumns: []\r\n          }\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          comparisonColumns2: [],\r\n          selectedDocument2: {\r\n            data: action.payload,\r\n            name: action.name,\r\n            columnChooserGridData: action.columnChooserGridData,\r\n            allColumns: []\r\n          }\r\n        };\r\n      }\r\n    case SET_ALL_COLUMNS:\r\n      if (action.index === 0) {\r\n        return {\r\n          ...state,\r\n          selectedDocument1: {\r\n            ...state.selectedDocument1,\r\n            allColumns: action.payload\r\n          }\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          selectedDocument2: {\r\n            ...state.selectedDocument2,\r\n            allColumns: action.payload\r\n          }\r\n        };\r\n      }\r\n    case SET_FILE_SOURCE:\r\n      if (action.index === 0) {\r\n        return {\r\n          ...state,\r\n          fileSource1: action.payload\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          fileSource2: action.payload\r\n        };\r\n      }\r\n    case SET_FILE_STRUCTURE:\r\n      if (action.index === 0) {\r\n        if (action.payload === FORMATTED_DATA) {\r\n          return {\r\n            ...state,\r\n            fileStructure1: action.payload,\r\n            unformattedData1: '' \r\n          };\r\n        } else {\r\n          return {\r\n            ...state,\r\n            fileStructure1: action.payload,\r\n            comparisonColumns1: [],\r\n            selectedDocument1: { ...initialState.selectedDocument1 }\r\n          }\r\n        }\r\n      } else {\r\n        if (action.payload === FORMATTED_DATA) {\r\n          return {\r\n            ...state,\r\n            fileStructure2: action.payload,\r\n            unformattedData2: '' \r\n          };\r\n        } else {\r\n          return {\r\n            ...state,\r\n            fileStructure2: action.payload,\r\n            comparisonColumns2: [],\r\n            selectedDocument2: { ...initialState.selectedDocument2 }\r\n          }\r\n        }\r\n      }\r\n    case CHANGE_UNFORMATTED_DATA:\r\n      if (action.index === 0) {\r\n        return {\r\n          ...state,\r\n          unformattedData1: action.payload\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          unformattedData2: action.payload\r\n        };\r\n      }\r\n    case UPLOAD_DOCUMENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        duplicatesData: action.payload\r\n      };\r\n    case CHANGE_PARTNER_NAME:\r\n      return {\r\n        ...state,\r\n        partnerName: action.payload\r\n      }\r\n    case CHANGE_PARTNER_COMPANY:\r\n      return {\r\n        ...state,\r\n        partnerCompany: action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}","import { CHANGE_STEP } from '../../actions/step-progress';\r\n\r\ninterface StepProgressState {\r\n  step: number;\r\n}\r\n\r\nconst initialState: StepProgressState = {\r\n  step: 0\r\n}\r\n\r\nexport const stepProgressReducer = (state = initialState, action: any) => {\r\n  switch (action.type) {\r\n    case CHANGE_STEP:\r\n      return {\r\n        ...state,\r\n        step: action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}","import { UPDATE_EMAIL_TEMPLATE } from '../../actions/email-template';\r\n\r\nconst EMAIL_DEFAULT_TEXT = `[insert name],\r\n\r\nThanks for sending over your account list.\r\n\r\nAttached you’ll find a list that maps both our account teams to one another. \r\n\r\nRegards,\r\n\r\n[insert your signature]\r\n`;\r\n\r\nconst initialState = {\r\n  template: EMAIL_DEFAULT_TEXT\r\n};\r\n\r\nexport const emailTemplateReducer = (state = initialState, action: any) => {\r\n  switch(action.type) {\r\n    case UPDATE_EMAIL_TEMPLATE:\r\n      console.log('updating template?', action.payload);\r\n      return { ...state, template: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}","import { SHOW_ERROR, HIDE_ERROR, SHOW_SUCCESS, HIDE_SUCCESS } from '../../actions/alert';\r\nimport { CHANGE_STEP } from '../../actions/step-progress';\r\n\r\nexport interface AlertState {\r\n  isOpen: boolean;\r\n  alertType: any;\r\n  message: string;\r\n};\r\n\r\nconst initialState = {\r\n  isOpen: false,\r\n  alertType: '',\r\n  message: ''\r\n}\r\n\r\nexport const alertReducer = (state: AlertState = initialState, action: any) => {\r\n  switch(action.type) {\r\n    case SHOW_ERROR:\r\n      return {\r\n        ...state,\r\n        isOpen: true,\r\n        alertType: 'error',\r\n        message: action.payload\r\n      };\r\n    case HIDE_ERROR:\r\n    case CHANGE_STEP:\r\n      return {\r\n        ...state,\r\n        isOpen: false,\r\n        alertType: '',\r\n        message: ''\r\n      };\r\n    case SHOW_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isOpen: true,\r\n        alertType: 'success',\r\n        message: action.payload\r\n      };\r\n    case HIDE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isOpen: false,\r\n        alertType: '',\r\n        message: ''\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}","import { SET_IS_LOADING } from '../../actions/loading';\r\n\r\nexport interface LoadingState {\r\n  isLoading: boolean;\r\n};\r\n\r\nconst initialState = {\r\n  isLoading: false\r\n}\r\n\r\nexport const loadingReducer = (state: LoadingState = initialState, action: any) => {\r\n  switch(action.type) {\r\n    case SET_IS_LOADING:\r\n      return { ...state, isLoading: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from 'redux';\r\nimport { documentReducer } from './document';\r\nimport { stepProgressReducer } from './step-progress';\r\nimport { userReducer } from './user';\r\nimport { emailTemplateReducer } from './email-template';\r\nimport { alertReducer } from './alert';\r\nimport { loadingReducer } from './loading';\r\n\r\nexport const rootReducer = combineReducers({\r\n  stepProgress: stepProgressReducer,\r\n  document: documentReducer,\r\n  user: userReducer,\r\n  emailTemplate: emailTemplateReducer,\r\n  alert: alertReducer,\r\n  loading: loadingReducer\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport logger from 'redux-logger';\r\nimport RoutesContainer from './containers/routes';\r\nimport { applyMiddleware, createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport { rootReducer } from './state/reducers';\r\nimport 'devextreme/dist/css/dx.material.blue.light.css';\r\nimport './index.css';\r\nimport './App.css';\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(logger));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <RoutesContainer />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}