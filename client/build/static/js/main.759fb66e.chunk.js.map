{"version":3,"sources":["state/actions/document/index.ts","state/actions/alert/index.ts","utils/validate-file-type.ts","utils/spreadsheet.utils.ts","components/upload-document-column/index.tsx","state/actions/step-progress/index.ts","state/actions/loading/index.ts","components/upload-document-form/index.tsx","components/duplicates-table/index.tsx","state/actions/email-template/index.ts","components/email-template/index.tsx","components/stepper-footer/index.tsx","components/stepper/index.tsx","components/nav-bar/index.tsx","pages/home/index.tsx","state/actions/user/index.ts","pages/register/index.tsx","pages/email-capture/index.tsx","pages/login/index.tsx","pages/profile/index.tsx","pages/password-reset/index.tsx","pages/forgot-password/index.tsx","components/private-route/index.tsx","Routes.tsx","state/reducers/document/index.ts","state/reducers/step-progress/index.ts","state/reducers/user/index.ts","state/reducers/email-template/index.ts","state/reducers/alert/index.ts","state/reducers/loading/index.ts","state/reducers/index.ts","index.tsx"],"names":["SET_IS_LOADING","UPLOAD_DOCUMENT_SUCCESS","SELECT_DOCUMENT","CHANGE_COMPARISON_COLUMN","CHANGE_RESULT_COLUMNS","PIN_FILE_SUCCESS","SET_FILE_SOURCE","setIsLoading","isLoading","type","payload","selectDocument","document","index","name","setFileSource","value","SHOW_ERROR","HIDE_ERROR","SHOW_SUCCESS","HIDE_SUCCESS","showError","errorMessage","hideError","acceptedFileTypes","checkIsValidFileType","fileName","fileNameArray","split","fileExtension","length","includes","toLowerCase","createJSONFromSpreadsheet","a","arrayBuffer","data","workbook","read","sheetName","SheetNames","worksheet","Sheets","utils","sheet_to_json","downloadSpreadsheetFromJSON","worksheetData","columns","forEach","row","Array","from","Object","keys","push","rowArr","map","rowProp","aoa_to_sheet","book_new","book_append_sheet","writeFile","createFileLink","pinnedFile","url","window","URL","createObjectURL","Blob","link","createElement","href","setAttribute","body","appendChild","click","getPinnedFile","filename","axios","get","responseType","params","connect","state","activeStep","stepProgress","step","user","dispatch","selectedDocument","comparisonColumn","fileSource","inputFileRef","useRef","validateFileSelection","event","target","files","wsDataObj","handleFileTypeChange","pinnedFileBlob","console","log","handlePinnedFileClick","pinnedFileData","autocompleteOptions","style","width","marginTop","height","FormControl","RadioGroup","onChange","sx","marginBottom","FormControlLabel","control","Radio","label","Fab","variant","margin","onClick","current","AttachFile","mr","ref","className","Typography","Chip","icon","Attachment","Autocomplete","multiple","options","newValue","changeComparisonColumn","renderInput","TextField","helperText","CHANGE_STEP","changeStep","newStep","selectedDocument1","selectedDocument2","comparisonColumn1","comparisonColumn2","resultColumns1","resultColumns2","fileSource1","fileSource2","dataGrid1","dataGrid2","useEffect","instance","showColumnChooser","isSubmitBtnEnabled","Grid","container","spacing","justifyContent","alignItems","item","xs","p","direction","color","disabled","formData","FormData","docBlob1","JSON","stringify","append","docBlob2","join","post","then","res","duplicatesData","catch","err","Upload","padding","md","id","dataSource","allowColumnReordering","allowColumnResizing","columnAutoWidth","showBorders","rowAlternationEnabled","dataField","groupIndex","sortOrder","colName","defaultPageSize","visible","displayMode","showPageSizeSelector","showInfo","showNavigationButtons","UPDATE_EMAIL_TEMPLATE","template","emailTemplate","textAreaRef","handleCopyEmailTemplate","navigator","clipboard","writeText","error","multiline","rows","defaultValue","updatedTemplate","ContentCopy","Download","steps","Box","display","flexDirection","pt","paddingBottom","bottom","right","left","Button","flex","Stepper","marginLeft","marginRight","Step","StepLabel","Container","maxWidth","React","anchorEl","setAnchorEl","history","useHistory","handleClose","handleHomeClick","flexGrow","AppBar","position","Toolbar","IconButton","size","edge","Handshake","email","currentTarget","AccountCircle","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","MenuItem","textDecoration","to","Home","UPDATE_USER","updateUser","formik","useFormik","initialValues","password","confirmPassword","firstName","lastName","company","validate","values","errors","test","onSubmit","headers","touched","handleBlur","handleChange","handleSubmit","isSubmitButtonDisabled","required","onBlur","Close","useState","isEmailCaptureModalOpen","setIsEmailCaptureModalOpen","Dialog","handleFilePinning","file","Paper","elevation","firstname","lastname","PasswordReset","loading","setLoading","passwordResetError","setPasswordResetError","useParams","token","Alert","severity","borderRadius","Backdrop","CircularProgress","ForgotPassword","forgotPasswordError","setForgotPasswordError","props","location","useLocation","pathname","alert","exact","path","component","Login","Register","Profile","isOpen","alertType","flexWrap","message","initialState","rootReducer","combineReducers","action","pinned_filename","store","createStore","applyMiddleware","logger","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.759fb66e.chunk.js","sourcesContent":["export const SET_IS_LOADING = 'SET_IS_LOADING';\r\nexport const UPLOAD_DOCUMENT_SUCCESS = 'UPLOAD_DOCUMENT_SUCCESS';\r\nexport const SELECT_DOCUMENT = 'SELECT_DOCUMENT';\r\nexport const CHANGE_COMPARISON_COLUMN = 'CHANGE_COMPARISON_COLUMN';\r\nexport const CHANGE_RESULT_COLUMNS = 'CHANGE_RESULT_COLUMNS';\r\nexport const PIN_FILE = 'PIN_FILE';\r\nexport const PIN_FILE_FAILURE = 'PIN_FILE_FAILURE';\r\nexport const PIN_FILE_SUCCESS = 'PIN_FILE_SUCCESS';\r\nexport const SET_FILE_SOURCE = 'SET_FILE_SOURCE';\r\n\r\nexport const setIsLoading = (isLoading: boolean) => ({\r\n  type: SET_IS_LOADING,\r\n  payload: isLoading\r\n});\r\n\r\nexport const uploadDocumentSuccess = (duplicatesData: any) => ({\r\n  type: UPLOAD_DOCUMENT_SUCCESS,\r\n  payload: duplicatesData\r\n});\r\n\r\nexport const selectDocument = (document: any, index: number, name: string) => ({\r\n  type: SELECT_DOCUMENT,\r\n  payload: document,\r\n  index,\r\n  name\r\n});\r\n\r\nexport const changeComparisonColumn = (value: Array<string>, index: number) => ({\r\n  type: CHANGE_COMPARISON_COLUMN,\r\n  payload: value,\r\n  index\r\n});\r\n\r\n// export const changeResultColumns = (value: Array<string>, index: number) => ({\r\n//   type: CHANGE_RESULT_COLUMNS,\r\n//   payload: value,\r\n//   index\r\n// }); <-- might not need while using autocomplete\r\n\r\n// export const pinFile = () => ({\r\n//   type: PIN_FILE\r\n// });\r\n\r\n// export const pinFileFailure = () => ({\r\n//   type: PIN_FILE_FAILURE,\r\n//   payload: 'Failed to pin file'\r\n// });\r\n\r\nexport const pinFileSuccess = (filename: string) => ({\r\n  type: PIN_FILE_SUCCESS,\r\n  payload: filename\r\n});\r\n\r\nexport const setFileSource = (index: number, value: string) => ({\r\n  type: SET_FILE_SOURCE,\r\n  index,\r\n  payload: value\r\n});","export const SHOW_ERROR = 'SHOW_ERROR';\r\nexport const HIDE_ERROR = 'HIDE_ERROR';\r\nexport const SHOW_SUCCESS = 'SHOW_SUCCESS';\r\nexport const HIDE_SUCCESS = 'HIDE_SUCCESS';\r\n\r\nexport const showError = (errorMessage: string) => ({\r\n  type: SHOW_ERROR,\r\n  payload: errorMessage\r\n});\r\n\r\nexport const hideError = () => ({\r\n  type: HIDE_ERROR\r\n});\r\n\r\nexport const showSucess = (successMessage: string) => ({\r\n  type: SHOW_SUCCESS,\r\n  payload: successMessage\r\n});\r\n\r\nexport const hideSuccess = () => ({\r\n  type: HIDE_ERROR\r\n});","const acceptedFileTypes = ['xls', 'xlsx', 'csv'];\r\n\r\nexport const checkIsValidFileType = (fileName: string): boolean => {\r\n  const fileNameArray: Array<string> = fileName.split('.');\r\n  const fileExtension: string = fileNameArray[fileNameArray.length - 1];\r\n  return acceptedFileTypes.includes(fileExtension.toLowerCase());\r\n}","import { WorkSheet, WorkBook, utils, read, writeFile } from 'xlsx';\r\nimport axios from 'axios';\r\n\r\nexport const createJSONFromSpreadsheet = async (document: any) => {\r\n  const data = await document.arrayBuffer();\r\n  const workbook = read(data);\r\n  const sheetName: string = workbook.SheetNames[0];\r\n  const worksheet: WorkSheet | null = workbook && workbook.Sheets ?\r\n    workbook.Sheets[sheetName as any] : null;\r\n\r\n  if (worksheet) {\r\n    return utils.sheet_to_json(worksheet);\r\n  }\r\n  return [];\r\n}\r\n\r\nexport const downloadSpreadsheetFromJSON = async (data: Array<any>) => {\r\n  const worksheetData: Array<Array<any>> = [];\r\n  let columns: Array<string> = [];\r\n  data.forEach((row: any, index: number) => {\r\n    if (index === 0) {\r\n      columns = Array.from(Object.keys(row));\r\n      worksheetData.push(columns);\r\n    }\r\n    const rowArr = columns.map((rowProp: string) => row[rowProp]);\r\n    worksheetData.push(rowArr);\r\n  });\r\n  const worksheet: WorkSheet = utils.aoa_to_sheet(worksheetData);\r\n  const workbook: WorkBook = utils.book_new();\r\n  utils.book_append_sheet(workbook, worksheet, 'Sheet1');\r\n  writeFile(workbook, 'account-mapping.xls');\r\n}\r\n\r\nexport const createFileLink = (data: any, pinnedFile: any) => {\r\n  const url = window.URL.createObjectURL(new Blob([data]));\r\n  const link = document.createElement('a');\r\n  link.href = url;\r\n  link.setAttribute('download', pinnedFile);\r\n  document.body.appendChild(link);\r\n  link.click();\r\n}\r\n\r\nexport const getPinnedFile = (filename: string) => {\r\n  return axios.get('/api/v1/viewpinnedfile',\r\n    {\r\n      responseType: 'blob',\r\n      params: { filename }\r\n    }\r\n  );\r\n}","import React, { SyntheticEvent, useRef } from 'react';\r\nimport { AttachFile } from '@mui/icons-material';\r\nimport {\r\n  Fab,\r\n  Typography,\r\n  FormControlLabel,\r\n  FormControl,\r\n  Radio,\r\n  RadioGroup,\r\n  Chip,\r\n  TextField,\r\n  Autocomplete\r\n} from '@mui/material';\r\nimport { Attachment } from '@mui/icons-material';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  setFileSource,\r\n  changeComparisonColumn,\r\n  selectDocument,\r\n  setIsLoading\r\n} from '../../state/actions/document';\r\nimport {\r\n  showError, hideError\r\n} from '../../state/actions/alert';\r\nimport { UserState } from '../../state/reducers/user';\r\nimport { checkIsValidFileType } from '../../utils/validate-file-type';\r\nimport {\r\n  createJSONFromSpreadsheet,\r\n  createFileLink,\r\n  getPinnedFile\r\n} from '../../utils/spreadsheet.utils';\r\n\r\ninterface UploadDocumentColumnProps {\r\n  dispatch: any;\r\n  selectedDocument: any;\r\n  comparisonColumn: Array<string>;\r\n  fileSource: string;\r\n  index: number;\r\n  user: UserState;\r\n}\r\n\r\nconst UploadDocumentColumn = ({\r\n  dispatch,\r\n  selectedDocument,\r\n  comparisonColumn,\r\n  fileSource,\r\n  index,\r\n  user\r\n}: UploadDocumentColumnProps) => {\r\n  const inputFileRef: any = useRef( null );\r\n\r\n  /**\r\n   * As the user types in the Column field, update its value\r\n   * @param event\r\n   */\r\n  const handleComparisonColumnFieldChange = (\r\n    event: SyntheticEvent<Element, Event>,\r\n    newValue: Array<string>\r\n  ) => {\r\n     console.log('handleComparisonColumnFieldChange', newValue);\r\n    dispatch(changeComparisonColumn(newValue, index));\r\n  };\r\n\r\n  /**\r\n   * When the user selects a document, validate the file type\r\n   * @param event \r\n   */\r\n  const validateFileSelection = async (event: any) => {\r\n    dispatch(setIsLoading(true));\r\n    const document: any = event && event.target && event.target.files ?\r\n      event.target.files[0] :\r\n      null;\r\n    const isValidDocType: boolean = document && document.name ?\r\n      checkIsValidFileType(document.name) : false;\r\n\r\n    if (isValidDocType) {\r\n      dispatch(hideError());\r\n      const wsDataObj: Array<any> = await createJSONFromSpreadsheet(document);\r\n      dispatch(selectDocument(wsDataObj, index, document.name));\r\n      dispatch(setIsLoading(false));\r\n    } else {\r\n      dispatch(showError('Invalid file type. Only .xls, .xlsx, or .csv files can be processed.'));\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Triggers the clicking of the hidden input (type=file) button\r\n   */\r\n  const handleFileSelectionBtnClick = () => {\r\n    /*Collecting node-element and performing click*/\r\n    if (inputFileRef&& inputFileRef.current) {\r\n      inputFileRef.current.click();\r\n    }\r\n  }\r\n\r\n  const handleFileTypeChange = async (event: any) => {\r\n    dispatch(setFileSource(index, event.target.value));\r\n    if (event.target.value === 'pinned') {\r\n      dispatch(setIsLoading(true));\r\n      try {\r\n        const pinnedFileBlob = await getPinnedFile(user.pinnedFile);\r\n        const wsDataObj: Array<any> = await createJSONFromSpreadsheet(pinnedFileBlob.data);\r\n        dispatch(selectDocument(wsDataObj, index, user.pinnedFile));\r\n        dispatch(setIsLoading(false));\r\n      } catch (err: any) {\r\n        console.log('err', err);\r\n        dispatch(setIsLoading(false));\r\n      }\r\n    } else {\r\n      dispatch(selectDocument([], index, ''));\r\n    }\r\n  }\r\n\r\n  const handlePinnedFileClick = async () => {\r\n    try {\r\n      const pinnedFileData = await getPinnedFile(user.pinnedFile);\r\n      createFileLink(pinnedFileData.data, user.pinnedFile);\r\n    } catch (err: any) {\r\n      console.log('err', err);\r\n    }\r\n  };\r\n  console.log('upload docs', selectedDocument);\r\n\r\n  const autocompleteOptions: Array<string> = selectedDocument && selectedDocument.data && selectedDocument.data[0] ?\r\n    Array.from(Object.keys(selectedDocument.data[0])) :\r\n    [];\r\n\r\n  return (\r\n    <form style={{ width: '100%', marginTop: '1.5rem' }}>\r\n      {/* <Grid\r\n        container\r\n        spacing={2}\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        sx={{ height: '80%' }}\r\n      >\r\n        <Grid\r\n          item\r\n          container\r\n          xs={6}\r\n          p={0}\r\n          sx={{ height: '100%' }}\r\n          direction=\"column\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n        > */}\r\n          <div style={{ height: '100px' }}>\r\n            {!!user.pinnedFile && index === 0 && <FormControl>\r\n              <RadioGroup\r\n                aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n                name=\"controlled-radio-buttons-group\"\r\n                value={fileSource}\r\n                onChange={handleFileTypeChange}\r\n                sx={{ marginBottom: '1rem' }}\r\n              >\r\n                <FormControlLabel value=\"upload\" control={<Radio />} label=\"Upload a file\" />\r\n                <FormControlLabel value=\"pinned\" control={<Radio />} label=\"Use your pinned file\" />\r\n              </RadioGroup>\r\n            </FormControl>}\r\n          </div>\r\n          {fileSource === 'upload' ?\r\n            <div style={{ height: '80px' }}>\r\n              <Fab\r\n                variant=\"extended\"\r\n                aria-label=\"add\"\r\n                sx={{ margin: '0 auto' }}\r\n                onClick={handleFileSelectionBtnClick}\r\n              >\r\n                <AttachFile sx={{ mr: 1 }} />\r\n                Select File\r\n              </Fab>\r\n              <input\r\n                type=\"file\"\r\n                ref={inputFileRef}\r\n                className=\"file-input\"\r\n                onChange={validateFileSelection}\r\n                name=\"sales_file\"\r\n              />\r\n              <div style={{ height: '2rem', marginTop: '1rem' }}>\r\n                {selectedDocument && selectedDocument.name &&\r\n                  <Typography variant=\"subtitle1\">\r\n                    {selectedDocument.name}\r\n                  </Typography>\r\n                }\r\n              </div>\r\n            </div> :\r\n            <div style={{ height: '80px' }}>\r\n              <Typography variant=\"subtitle1\">Pinned File:</Typography>\r\n              <Chip onClick={handlePinnedFileClick} icon={<Attachment />} label={user.pinnedFile} />\r\n            </div>\r\n          }\r\n          {/* <TextField\r\n            required\r\n            id=\"standard-basic\"\r\n            label=\"Column to find duplicate values in\"\r\n            variant=\"standard\"\r\n            sx={{ width: '100%', margin: '1.5rem 0' }}\r\n            onChange={handleComparisonColumnFieldChange}\r\n            value={comparisonColumn}\r\n          /> */}\r\n          <Autocomplete\r\n            multiple={true}\r\n            options={autocompleteOptions}\r\n            onChange={handleComparisonColumnFieldChange}\r\n            value={comparisonColumn}\r\n            sx={{ width: '100%', margin: '1.5rem 0' }}\r\n            renderInput={(params) => (<TextField\r\n              {...params}\r\n              variant=\"standard\"\r\n              helperText={`Columns from file ${index === 0 ? 'A' : 'B'} that will be compared with columns\r\n              from file ${index === 0 ? 'B' : 'A'} to determine match. Hint: the more unique a column's value is\r\n              to a company, the better (DUNS number, company website, etc.).`}\r\n            />)}\r\n          />\r\n    </form>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  activeStep: state.stepProgress.step,\r\n  user: state.user\r\n});\r\n\r\nexport default connect(mapStateToProps)(UploadDocumentColumn);","export const CHANGE_STEP = 'CHANGE_STEP';\r\n\r\nexport const changeStep = (newStep: number) => ({\r\n  type: CHANGE_STEP,\r\n  payload: newStep\r\n});","export const SET_IS_LOADING = 'SET_IS_LOADING';\r\n\r\nexport const setIsLoading = (isLoading: boolean) => ({\r\n  type: SET_IS_LOADING,\r\n  payload: isLoading\r\n});","import React, { useRef, useEffect } from 'react';\r\nimport {\r\n  Grid,\r\n  Fab\r\n} from '@mui/material';\r\nimport axios from 'axios';\r\nimport DataGrid, { ColumnChooser, ColumnFixing, Paging, Pager } from 'devextreme-react/data-grid';\r\nimport { Upload } from '@mui/icons-material';\r\nimport { connect } from 'react-redux';\r\nimport UploadDocumentColumn from '../upload-document-column';\r\nimport { uploadDocumentSuccess } from '../../state/actions/document';\r\nimport { changeStep } from '../../state/actions/step-progress';\r\nimport { showError, hideError } from '../../state/actions/alert';\r\nimport { setIsLoading } from '../../state/actions/loading';\r\n\r\ninterface UploadDocumentFormProps {\r\n  dispatch: any;\r\n  activeStep: number;\r\n  selectedDocument1: any;\r\n  selectedDocument2: any;\r\n  comparisonColumn1: Array<string>;\r\n  comparisonColumn2: Array<string>;\r\n  resultColumns1: Array<string>;\r\n  resultColumns2: Array<string>;\r\n  fileSource1: string;\r\n  fileSource2: string;\r\n}\r\n\r\nconst UploadDocumentForm = ({\r\n  dispatch,\r\n  activeStep,\r\n  selectedDocument1,\r\n  selectedDocument2,\r\n  comparisonColumn1,\r\n  comparisonColumn2,\r\n  resultColumns1,\r\n  resultColumns2,\r\n  fileSource1,\r\n  fileSource2,\r\n}: UploadDocumentFormProps): any => {\r\n  const dataGrid1 = useRef<any>(null);\r\n  const dataGrid2 = useRef<any>(null);\r\n\r\n  useEffect(() => {\r\n    // `current.instance` points to the UI component instance\r\n    if (dataGrid1 && dataGrid1.current && dataGrid1.current.instance && selectedDocument1.data.length) {\r\n      dataGrid1.current.instance.showColumnChooser();\r\n    }\r\n    if (dataGrid2 && dataGrid2.current && dataGrid2.current.instance && selectedDocument2.data.length) {\r\n      dataGrid2.current.instance.showColumnChooser();\r\n    }\r\n  }, [selectedDocument1.data.length, selectedDocument2.data.length]);\r\n\r\n  /**\r\n   * Puts the selected file and column name into a FormData instance,\r\n   * sends it to the server, and then changes to the next step where\r\n   * the duplicates will be displayed\r\n   */\r\n  const handleUpload = () => {\r\n    dispatch(setIsLoading(true));\r\n    const formData = new FormData();\r\n    if (selectedDocument1 && selectedDocument1.name) {\r\n      const docBlob1 = new Blob([JSON.stringify(selectedDocument1.data)], { type: 'application/json' });\r\n      formData.append(\"sales_file1\", docBlob1, selectedDocument1.name);\r\n    }\r\n\r\n    if (selectedDocument2 && selectedDocument2.name) {\r\n      const docBlob2 = new Blob([JSON.stringify(selectedDocument2.data)], { type: 'application/json' });\r\n      formData.append(\"sales_file2\", docBlob2, selectedDocument2.name);\r\n    }\r\n    // let resultColumns1;\r\n    // let resultColumns2;\r\n    // if (dataGrid1 && dataGrid1.current && dataGrid1.current.instance) {\r\n    //   resultColumns1 = dataGrid1.current.instance.getVisibleColumns().map((col: any) => col.dataField);\r\n    // }\r\n    // if (dataGrid1 && dataGrid2.current && dataGrid2.current.instance) {\r\n    //   resultColumns2 = dataGrid2.current.instance.getVisibleColumns().map((col: any) => col.dataField);\r\n    // }\r\n    formData.append('comparisonColumn1', comparisonColumn1.join());\r\n    formData.append('comparisonColumn2', comparisonColumn2.join());\r\n    formData.append('resultColumns1', resultColumns1.join());\r\n    formData.append('resultColumns2', resultColumns2.join());\r\n\r\n    axios.post('/api/v1/uploadfile', formData)\r\n      .then((res) => {\r\n        dispatch(hideError());\r\n        console.log('res', res.data);\r\n        dispatch(uploadDocumentSuccess(res.data));\r\n        dispatch(setIsLoading(false));\r\n        dispatch(changeStep(activeStep += 1));\r\n      })\r\n      .catch((err: any) => {\r\n        dispatch(setIsLoading(false));\r\n        dispatch(showError(`File upload and comparison failed. ${err}`));\r\n      });\r\n  };\r\n\r\n  const isSubmitBtnEnabled = selectedDocument1 && selectedDocument2 &&\r\n    comparisonColumn1 && comparisonColumn2;\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        spacing={2}\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        // sx={{ height: '90%' }}\r\n      >\r\n        <Grid\r\n          item\r\n          container\r\n          xs={4}\r\n          p={0}\r\n          sx={{ height: '100%' }}\r\n          direction=\"column\"\r\n          justifyContent=\"start\"\r\n          alignItems=\"center\"\r\n        >\r\n          <UploadDocumentColumn\r\n            comparisonColumn={comparisonColumn1}\r\n            index={0}\r\n            selectedDocument={selectedDocument1}\r\n            fileSource={fileSource1}\r\n          />\r\n          {/* <div style={{ width: '100%'}}>\r\n            <DataGrid\r\n              id=\"gridContainer\"\r\n              dataSource={selectedDocument1.data}\r\n              allowColumnReordering={true}\r\n              allowColumnResizing={true}\r\n              columnAutoWidth={true}\r\n              showBorders={true}\r\n              ref={dataGrid1}\r\n            >\r\n              <ColumnChooser enabled={true} height={150} />\r\n              <ColumnFixing enabled={true} />\r\n              <Paging defaultPageSize={2} />\r\n              <Pager\r\n                visible={true}\r\n                displayMode={\"full\"}\r\n                showPageSizeSelector={false}\r\n                showInfo={true}\r\n                showNavigationButtons={true}\r\n              />\r\n            </DataGrid>\r\n          </div> */}\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          container\r\n          xs={4}\r\n          p={0}\r\n          sx={{ height: '100%' }}\r\n          direction=\"column\"\r\n          justifyContent=\"start\"\r\n          alignItems=\"center\"\r\n        >\r\n          <UploadDocumentColumn\r\n            comparisonColumn={comparisonColumn2}\r\n            index={1}\r\n            selectedDocument={selectedDocument2}\r\n            fileSource={fileSource2}\r\n          />\r\n          {/* <div style={{ width: '100%'}}>\r\n            <DataGrid\r\n              id=\"gridContainer\"\r\n              dataSource={selectedDocument2.data}\r\n              allowColumnReordering={true}\r\n              allowColumnResizing={true}\r\n              columnAutoWidth={true}\r\n              showBorders={true}\r\n              ref={dataGrid2}\r\n            >\r\n              <ColumnChooser enabled={true} height={150} />\r\n              <ColumnFixing enabled={true} />\r\n              <Paging defaultPageSize={2} />\r\n              <Pager\r\n                visible={true}\r\n                displayMode={\"full\"}\r\n                showPageSizeSelector={false}\r\n                showInfo={true}\r\n                showNavigationButtons={true}\r\n              />\r\n            </DataGrid>\r\n          </div> */}\r\n        </Grid>\r\n      </Grid>\r\n      <Grid\r\n        container\r\n        justifyContent=\"space-around\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Grid\r\n          item\r\n          container\r\n          xs={4}\r\n          direction=\"column\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Fab\r\n            variant=\"extended\"\r\n            color=\"primary\"\r\n            aria-label=\"add\"\r\n            sx={{ marginTop: '2rem' }}\r\n            disabled={!isSubmitBtnEnabled}\r\n            onClick={handleUpload}\r\n          >\r\n            <Upload sx={{ mr: 1 }} />\r\n            Upload and Compare\r\n          </Fab>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  activeStep: state.stepProgress.step,\r\n  selectedDocument1: state.document.selectedDocument1,\r\n  selectedDocument2: state.document.selectedDocument2,\r\n  comparisonColumn1: state.document.comparisonColumn1,\r\n  comparisonColumn2: state.document.comparisonColumn2,\r\n  resultColumns1: state.document.resultColumns1,\r\n  resultColumns2: state.document.resultColumns2,\r\n  fileSource1: state.document.fileSource1,\r\n  fileSource2: state.document.fileSource2,\r\n  user: state.user\r\n});\r\n\r\nexport default connect(mapStateToProps)(UploadDocumentForm);","import React from 'react';\r\nimport DataGrid, { Paging, Pager, Column } from 'devextreme-react/data-grid';\r\nimport { connect } from 'react-redux';\r\nimport { Grid } from '@mui/material';\r\n\r\nconst DuplicatesTable = ({ duplicatesData }: any) => {\r\n  return (\r\n    <Grid\r\n      container\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      sx={{ height: '90%', marginTop: '3.5rem', padding: '0 2rem' }}\r\n    >\r\n      <Grid\r\n        item\r\n        container\r\n        xs={12}\r\n        md={12}\r\n        p={0}\r\n        sx={{ height: '95%', width: '100%' }}\r\n        direction=\"column\"\r\n        justifyContent=\"start\"\r\n        alignItems=\"center\"\r\n      >\r\n        <DataGrid\r\n          id=\"gridContainer\"\r\n          dataSource={duplicatesData}\r\n          allowColumnReordering={true}\r\n          allowColumnResizing={true}\r\n          columnAutoWidth={true}\r\n          showBorders={true}\r\n          width=\"100%\"\r\n          rowAlternationEnabled={true}\r\n        >\r\n          <Column dataField=\"precision\" groupIndex={0} sortOrder=\"desc\"/>\r\n          {duplicatesData && duplicatesData[0] && Array.from(Object.keys(duplicatesData[0]))\r\n            .map((colName: string, index: number) => <Column dataField={colName} key={index} />)}\r\n          <Paging defaultPageSize={25} />\r\n          <Pager\r\n            visible={true}\r\n            displayMode={\"full\"}\r\n            showPageSizeSelector={false}\r\n            showInfo={true}\r\n            showNavigationButtons={true}\r\n          />\r\n        </DataGrid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  duplicatesData: state.document.duplicatesData\r\n});\r\n\r\nexport default connect(mapStateToProps)(DuplicatesTable);","export const UPDATE_EMAIL_TEMPLATE = 'UPDATE_EMAIL_TEMPLATE';\r\n\r\nexport const updateEmailTemplate = (updatedTemplate: string) => ({\r\n  type: UPDATE_EMAIL_TEMPLATE,\r\n  payload: updatedTemplate\r\n});","import React, { useRef, ChangeEvent } from 'react';\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Fab\r\n} from '@mui/material';\r\nimport { Download, ContentCopy } from '@mui/icons-material';\r\nimport { connect } from 'react-redux';\r\nimport { downloadSpreadsheetFromJSON } from '../../utils/spreadsheet.utils';\r\nimport { updateEmailTemplate } from '../../state/actions/email-template';\r\n\r\ninterface Props {\r\n  duplicatesData: Array<any>;\r\n  template: string;\r\n  dispatch: any;\r\n}\r\n\r\nconst EmailTemplate = ({ duplicatesData, template, dispatch }: Props) => {\r\n  const textAreaRef = useRef<any>(null);\r\n\r\n  const handleTemplateChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    dispatch(updateEmailTemplate(event.target.value));\r\n  }\r\n\r\n  const handleResultsDownload = () => {\r\n    downloadSpreadsheetFromJSON(duplicatesData);\r\n  }\r\n\r\n  const handleCopyEmailTemplate = async (event: any) => {\r\n    try {\r\n      await navigator.clipboard.writeText(template);\r\n      console.log('Page URL copied to clipboard');\r\n    } catch (err) {\r\n      console.error('Failed to copy: ', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={2}\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      sx={{ height: '100%', width: '100%', marginTop: '3.5rem' }}\r\n    >\r\n      <Grid\r\n        item\r\n        container\r\n        xs={8}\r\n        sx={{ height: '100%', width: '100%' }}\r\n        direction=\"column\"\r\n        justifyContent=\"start\"\r\n        alignItems=\"center\"\r\n      >\r\n        <TextField\r\n          id=\"email-template-multiline\"\r\n          label=\"Modify and then Copy/Paste this email template\"\r\n          multiline\r\n          ref={textAreaRef}\r\n          rows={9}\r\n          defaultValue={template}\r\n          variant=\"filled\"\r\n          sx={{ width: '100%' }}\r\n          onChange={handleTemplateChange}\r\n        />\r\n        <Fab\r\n          variant=\"extended\"\r\n          aria-label=\"add\"\r\n          sx={{ marginTop: '2.5rem' }}\r\n          onClick={handleCopyEmailTemplate}\r\n        >\r\n          <ContentCopy sx={{ mr: 1 }} />\r\n          Copy Template\r\n        </Fab>\r\n        <Fab\r\n          variant=\"extended\"\r\n          aria-label=\"add\"\r\n          sx={{ marginTop: '2.5rem' }}\r\n          onClick={handleResultsDownload}\r\n        >\r\n          <Download sx={{ mr: 1 }} />\r\n          Download Results\r\n        </Fab>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  duplicatesData: state.document.duplicatesData,\r\n  template: state.emailTemplate.template\r\n});\r\n\r\nexport default connect(mapStateToProps)(EmailTemplate);","import React from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n} from '@mui/material';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { changeStep } from '../../state/actions/step-progress';\r\n\r\ninterface StepperFooterProps {\r\n  steps: Array<string>;\r\n  activeStep: number;\r\n  dispatch: any;\r\n}\r\n\r\nconst StepperFooter = ({ steps, activeStep, dispatch }: StepperFooterProps) => {\r\n  const handleNext = () => {\r\n    dispatch(changeStep(activeStep += 1));\r\n  };\r\n\r\n  const handleBack = () => {\r\n    dispatch(changeStep(activeStep -= 1));\r\n  };\r\n\r\n  return (\r\n    <Box sx={{\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      pt: 2,\r\n      paddingBottom: '1rem',\r\n      margin: '0 24px',\r\n      // position: 'fixed',\r\n      bottom: 0,\r\n      right: 0,\r\n      left: 0\r\n    }}>\r\n      <Button\r\n        disabled={activeStep === 0}\r\n        onClick={handleBack}\r\n        sx={{ mr: 1 }}\r\n      >\r\n        Back\r\n      </Button>\r\n      <Box sx={{ flex: '1 1 auto' }} />\r\n      <Button\r\n        disabled={activeStep === steps.length - 1}\r\n        onClick={handleNext}\r\n      >\r\n        Next\r\n      </Button>\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  activeStep: state.stepProgress.step\r\n});\r\n\r\nexport default connect(mapStateToProps)(StepperFooter);","import * as React from 'react';\r\nimport {\r\n  Box,\r\n  Stepper,\r\n  Step,\r\n  StepLabel,\r\n  Container\r\n} from '@mui/material';\r\nimport { connect } from 'react-redux';\r\n\r\nimport UploadDocumentForm from '../upload-document-form';\r\nimport DuplicatesTable from '../duplicates-table';\r\nimport EmailTemplate from '../email-template';\r\nimport StepperFooter from '../stepper-footer';\r\n\r\nconst steps = ['Upload document', 'View duplicates', 'Email customers'];\r\n\r\ninterface Props {\r\n  activeStep: number;\r\n}\r\n\r\nconst HorizontalLinearStepper = ({ activeStep }: Props) => {\r\n  return (\r\n    <>\r\n      <Box sx={{ width: '100%', height: '85vh', marginTop: '3.5vh' }}>\r\n        <Stepper activeStep={activeStep} sx={{ marginLeft: '25%', marginRight: '25%'}}>\r\n          {steps.map((label: string) => {\r\n            const stepProps: { completed?: boolean } = {};\r\n            const labelProps: {\r\n              optional?: React.ReactNode;\r\n            } = {};\r\n            return (\r\n              <Step key={label} {...stepProps}>\r\n                <StepLabel {...labelProps}>{label}</StepLabel>\r\n              </Step>\r\n            );\r\n          })}\r\n        </Stepper>\r\n        {activeStep === 0 &&\r\n          <React.Fragment>\r\n            <Container sx={{ height: '100%' }}>\r\n              <UploadDocumentForm />\r\n            </Container>\r\n          </React.Fragment>\r\n        }\r\n        {activeStep === 1 &&\r\n          <React.Fragment>\r\n            <Container sx={{ height: '100%', width: '100%', maxWidth: '100%' }} maxWidth={false}>\r\n              <DuplicatesTable />\r\n            </Container>\r\n          </React.Fragment>\r\n        }\r\n        {activeStep === 2 &&\r\n          <React.Fragment>\r\n            <Container sx={{ height: '100%', width: '100%' }}>\r\n              <EmailTemplate />\r\n            </Container>\r\n          </React.Fragment>\r\n        }\r\n      </Box>\r\n      <StepperFooter steps={steps} />\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  activeStep: state.stepProgress.step\r\n});\r\n\r\nexport default connect(mapStateToProps)(HorizontalLinearStepper);","import * as React from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  AppBar,\r\n  Box,\r\n  Toolbar,\r\n  Typography,\r\n  IconButton,\r\n  Menu,\r\n  MenuItem,\r\n  Button\r\n} from '@mui/material';\r\nimport { Handshake, AccountCircle } from '@mui/icons-material';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { UserState } from '../../state/reducers/user';\r\n\r\ninterface NavBarProps {\r\n  user: UserState\r\n}\r\n\r\nconst NavBar = ({ user }: NavBarProps) => {\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const history = useHistory();\r\n\r\n  const handleMenu = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    axios.post('/api/v1/logout')\r\n      .then(() => {\r\n        handleClose();\r\n        history.push('/');\r\n      })\r\n      .catch((err) => console.log('logout err', err));\r\n  }\r\n\r\n  const handleHomeClick = () => {\r\n    history.push('/home');\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            size=\"large\"\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            sx={{ mr: 2 }}\r\n            onClick={handleHomeClick}\r\n          >\r\n            <Handshake />\r\n          </IconButton>\r\n          <Button variant=\"text\" onClick={handleHomeClick}>\r\n            <Typography variant=\"h6\" sx={{ flexGrow: 1, color: 'white' }}>\r\n              Salesdap\r\n            </Typography>\r\n          </Button>\r\n\r\n          {user && user.email && <>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls=\"menu-appbar\"\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMenu}\r\n              color=\"inherit\"\r\n              sx={{ marginLeft: 'auto' }}\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n            <Menu\r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorEl}\r\n              anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n              }}\r\n              open={Boolean(anchorEl)}\r\n              onClose={handleClose}\r\n            >\r\n              <MenuItem>\r\n                <Link style={{ color: 'black', textDecoration: 'none' }} to=\"/profile\">Profile</Link>\r\n              </MenuItem>\r\n              <MenuItem onClick={handleLogout}>Logout</MenuItem>\r\n            </Menu>\r\n          </>}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  user: state.user\r\n});\r\n\r\nexport default connect(mapStateToProps)(NavBar);","import React from 'react';\r\nimport Stepper from '../../components/stepper';\r\nimport NavBar from '../../components/nav-bar';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <Stepper />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;","export const UPDATE_USER = 'UPDATE_USER';\r\n\r\nexport const updateUser = (user: any) => ({\r\n  type: UPDATE_USER,\r\n  payload: user\r\n});","import React from 'react';\r\nimport {\r\n  Box,\r\n  Fab,\r\n  TextField,\r\n  Grid,\r\n  Typography,\r\n} from '@mui/material';\r\nimport axios from 'axios';\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport { useFormik } from 'formik';\r\nimport { connect } from 'react-redux';\r\nimport NavBar from '../../components/nav-bar';\r\nimport { updateUser } from '../../state/actions/user';\r\nimport { showError, hideError } from '../../state/actions/alert';\r\nimport { setIsLoading } from '../../state/actions/loading';\r\n\r\nconst Register = ({ dispatch }: any) => {\r\n  const history = useHistory();\r\n\r\n  const validate = (values: any) => {\r\n    const errors: any = {};\r\n    if (!values.password) {\r\n      errors.password = 'Required';\r\n    } else if (values.password.length < 8) {\r\n      errors.password = 'Must be 8 characters or more';\r\n    }\r\n  \r\n    if (!values.confirmPassword) {\r\n      errors.confirmPassword = 'Required';\r\n    } else if (values.confirmPassword !== values.password) {\r\n      errors.confirmPassword = 'Must match password';\r\n    }\r\n  \r\n    if (!values.email) {\r\n      errors.email = 'Required';\r\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n      errors.email = 'Invalid email address';\r\n    }\r\n  \r\n    return errors;\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n      password: '',\r\n      confirmPassword: '',\r\n      firstName: '',\r\n      lastName: '',\r\n      company: ''\r\n    },\r\n    validate,\r\n    onSubmit: (values: any) => {\r\n      dispatch(setIsLoading(true));\r\n      const formData = new FormData();\r\n      formData.append('email', values.email);\r\n      formData.append('password', values.password);\r\n      formData.append('firstname', values.firstName);\r\n      formData.append('lastname', values.lastName);\r\n      formData.append('company', values.company);\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      };\r\n      axios.post('/api/v1/register', formData, config)\r\n        .then((res) => {\r\n          dispatch(hideError());\r\n          dispatch(updateUser(res.data));\r\n          dispatch(setIsLoading(false));\r\n          history.push('/home');\r\n        })\r\n        .catch((err: any) => {\r\n          console.log('err', err);\r\n          dispatch(setIsLoading(false));\r\n          dispatch(showError(`Registration failed. Please try again. ${err}`));\r\n        });\r\n    },\r\n  });\r\n\r\n  const { values, errors, touched, handleBlur, handleChange, handleSubmit } = formik;\r\n\r\n  const isSubmitButtonDisabled = !!errors.email || !!errors.password || !!errors.confirmPassword\r\n    || !values.email || !values.password || !values.confirmPassword;\r\n\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <Box sx={{ width: '100%', height: '80vh', marginTop: '3.5vh' }}>\r\n        <Grid\r\n          container\r\n          spacing={2}\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          sx={{ height: '100%' }}\r\n        >\r\n          <Grid\r\n            item\r\n            container\r\n            xs={4}\r\n            p={0}\r\n            sx={{ height: '100%' }}\r\n            direction=\"column\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Typography variant=\"h5\" sx={{ marginBottom: '2rem' }}>Register</Typography>\r\n            <form onSubmit={handleSubmit}>\r\n              <TextField\r\n                required\r\n                id=\"standard-basic\"\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                variant=\"standard\"\r\n                sx={{ width: '100%', marginBottom: '1.5rem' }}\r\n                error={touched.email && !!errors.email}\r\n                helperText={errors.email ? errors.email : null}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                value={values.email}\r\n              />\r\n              <TextField\r\n                required\r\n                id=\"standard-basic\"\r\n                label=\"Password\"\r\n                name=\"password\"\r\n                variant=\"standard\"\r\n                type=\"password\"\r\n                sx={{ width: '100%', marginBottom: '1.5rem' }}\r\n                error={touched.password && !!errors.password}\r\n                helperText={errors.password ? errors.password : null}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                value={values.password}\r\n              />\r\n              <TextField\r\n                required\r\n                id=\"standard-basic\"\r\n                label=\"Confirm Password\"\r\n                name=\"confirmPassword\"\r\n                variant=\"standard\"\r\n                type=\"password\"\r\n                sx={{ width: '100%', marginBottom: '1.5rem' }}\r\n                error={touched.confirmPassword && !!errors.confirmPassword}\r\n                helperText={errors.confirmPassword ? errors.confirmPassword : null}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                value={values.confirmPassword}\r\n              />\r\n              <TextField\r\n                id=\"standard-basic\"\r\n                label=\"First Name\"\r\n                name=\"firstName\"\r\n                variant=\"standard\"\r\n                sx={{ width: '100%', marginBottom: '1.5rem' }}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                value={values.firstName}\r\n              />\r\n              <TextField\r\n                id=\"standard-basic\"\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                variant=\"standard\"\r\n                sx={{ width: '100%', marginBottom: '1.5rem' }}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                value={values.lastName}\r\n              />\r\n              <TextField\r\n                id=\"standard-basic\"\r\n                label=\"Company\"\r\n                name=\"company\"\r\n                variant=\"standard\"\r\n                sx={{ width: '100%' }}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                value={values.company}\r\n              />\r\n              <Grid\r\n                container\r\n                spacing={2}\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Grid\r\n                  item\r\n                  container\r\n                  xs={4}\r\n                  p={0}\r\n                  direction=\"column\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\"\r\n                >\r\n                  <Fab\r\n                    variant=\"extended\"\r\n                    aria-label=\"add\"\r\n                    sx={{ marginTop: '2.5rem', marginLeft: 'auto', marginRight: 'auto' }}\r\n                    type=\"submit\"\r\n                    disabled={isSubmitButtonDisabled}\r\n                  >\r\n                    Submit\r\n                  </Fab>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n            <Typography sx={{ marginTop: '2rem' }}>\r\n              Already have an account? <Link to=\"/login\">Sign in</Link>\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect()(Register);","import React from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Typography,\r\n  TextField,\r\n  Fab,\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n} from '@mui/material';\r\nimport { Close } from '@mui/icons-material';\r\nimport { connect } from 'react-redux';\r\nimport { useFormik } from 'formik';\r\nimport { setIsLoading } from '../../state/actions/loading';\r\nimport { showError, hideError } from '../../state/actions/alert';\r\n\r\ninterface EmailCaptureProps {\r\n  onClose: any;\r\n  dispatch: any;\r\n}\r\n\r\nconst EmailCapture = ({ onClose, dispatch }: EmailCaptureProps) => {\r\n\r\n  const validate = (values: any) => {\r\n    const errors: any = {};\r\n\r\n    if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n      errors.email = 'Invalid email address';\r\n    }\r\n  \r\n    return errors;\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: ''\r\n    },\r\n    validate,\r\n    onSubmit: (values: any) => {\r\n      dispatch(setIsLoading(true));\r\n      const formData = new FormData();\r\n      formData.append('email', values.email);\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      };\r\n\r\n      axios.post('/api/v1/email', formData, config)\r\n        .then(() => {\r\n          dispatch(hideError());\r\n          dispatch(setIsLoading(false));\r\n          onClose();\r\n        })\r\n        .catch((err: any) => {\r\n          console.log('email err', err);\r\n          dispatch(setIsLoading(false));\r\n          dispatch(showError('Waitlist registration failed. Please try again.'))\r\n        });\r\n    }\r\n  });\r\n\r\n  const { values, errors, touched, handleBlur, handleChange, handleSubmit } = formik;\r\n\r\n  return (\r\n    <Box sx={{ width: '100%', height: '100%', padding: '0 0 3rem 0' }}>\r\n      <AppBar sx={{ position: 'relative', marginBottom: '3rem' }}>\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"end\"\r\n            color=\"inherit\"\r\n            onClick={onClose}\r\n            aria-label=\"close\"\r\n          >\r\n            <Close />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Grid\r\n        container\r\n        spacing={3}\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        sx={{ height: '100%', width: '100%' }}\r\n      >\r\n        <Grid\r\n          item\r\n          container\r\n          xs={10}\r\n          p={0}\r\n          sx={{ height: '100%' }}\r\n          direction=\"column\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <form onSubmit={handleSubmit}>\r\n            <Typography variant=\"h5\" sx={{ marginBottom: '2rem' }}>Join the waitlist for Salesdap</Typography>\r\n            <TextField\r\n              label=\"email address\"\r\n              variant=\"standard\"\r\n              name=\"email\"\r\n              sx={{ width: '100%' }}\r\n              error={touched.email && !!errors.email}\r\n              helperText={errors.email ? errors.email : null}\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              value={values.email}\r\n            />\r\n            <Fab\r\n              variant=\"extended\"\r\n              aria-label=\"add\"\r\n              sx={{ marginTop: '2.5rem' }}\r\n              type=\"submit\"\r\n            >\r\n              submit\r\n            </Fab>\r\n          </form>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default connect()(EmailCapture);","import React, { useState } from 'react';\r\nimport {\r\n  Box,\r\n  Fab,\r\n  TextField,\r\n  Grid,\r\n  Typography,\r\n  Dialog\r\n} from '@mui/material';\r\nimport axios from 'axios';\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport { useFormik } from 'formik';\r\nimport { connect } from 'react-redux';\r\nimport NavBar from '../../components/nav-bar';\r\nimport { updateUser } from '../../state/actions/user';\r\nimport EmailCapture from '../email-capture';\r\nimport { showError, hideError } from '../../state/actions/alert';\r\nimport { setIsLoading } from '../../state/actions/loading';\r\n\r\nconst Login = ({ dispatch }: any) => {\r\n  const [isEmailCaptureModalOpen, setIsEmailCaptureModalOpen] = useState(true);\r\n\r\n  const history = useHistory();\r\n\r\n  const handleClose = (event: any) => {\r\n    setIsEmailCaptureModalOpen(false);\r\n  }\r\n\r\n  const validate = (values: any) => {\r\n    const errors: any = {};\r\n    if (!values.password) {\r\n      errors.password = 'Required';\r\n    }\r\n  \r\n    if (!values.email) {\r\n      errors.email = 'Required';\r\n    }\r\n  \r\n    return errors;\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n      password: ''\r\n    },\r\n    validate,\r\n    onSubmit: (values: any) => {\r\n      dispatch(setIsLoading(true));\r\n      const formData = new FormData();\r\n      formData.append('email', values.email);\r\n      formData.append('password', values.password);\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      };\r\n\r\n      axios.post('/api/v1/login', formData, config)\r\n        .then((res: any) => {\r\n          dispatch(hideError());\r\n          dispatch(updateUser(res.data));\r\n          dispatch(setIsLoading(false));\r\n          history.push('/home');\r\n        })\r\n        .catch((err: any) => {\r\n          console.log('err', err);\r\n          dispatch(setIsLoading(false));\r\n          dispatch(showError('Wrong email or password'));\r\n        });\r\n    },\r\n  });\r\n\r\n  const { values, errors, touched, handleBlur, handleChange, handleSubmit } = formik;\r\n\r\n  const isSubmitButtonDisabled = !!errors.email || !!errors.password ||\r\n    !values.email || !values.password;\r\n\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <Box sx={{ width: '100%', height: '80vh', marginTop: '3.5vh' }}>\r\n        <Grid\r\n          container\r\n          spacing={2}\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          sx={{ height: '100%' }}\r\n        >\r\n          <Grid\r\n            item\r\n            container\r\n            xs={4}\r\n            p={0}\r\n            sx={{ height: '100%' }}\r\n            direction=\"column\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Typography variant=\"h5\" sx={{ marginBottom: '2rem' }}>Login</Typography>\r\n            <form onSubmit={handleSubmit}>\r\n              <TextField\r\n                required\r\n                id=\"standard-basic\"\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                variant=\"standard\"\r\n                sx={{ width: '100%', marginBottom: '1.5rem' }}\r\n                error={touched.email && !!errors.email}\r\n                helperText={errors.email ? errors.email : null}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                value={values.email}\r\n              />\r\n              <TextField\r\n                required\r\n                id=\"standard-basic\"\r\n                label=\"Password\"\r\n                name=\"password\"\r\n                variant=\"standard\"\r\n                type=\"password\"\r\n                sx={{ width: '100%', marginBottom: '1.5rem' }}\r\n                error={touched.password && !!errors.password}\r\n                helperText={errors.password ? errors.password : null}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                value={values.password}\r\n              />\r\n              <Grid\r\n                container\r\n                spacing={2}\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Grid\r\n                  item\r\n                  container\r\n                  xs={4}\r\n                  p={0}\r\n                  direction=\"column\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\"\r\n                >\r\n                  <Fab\r\n                    variant=\"extended\"\r\n                    aria-label=\"add\"\r\n                    sx={{ marginTop: '2.5rem', marginLeft: 'auto', marginRight: 'auto' }}\r\n                    type=\"submit\"\r\n                    disabled={isSubmitButtonDisabled}\r\n                  >\r\n                    Submit\r\n                  </Fab>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n            <Typography sx={{ marginTop: '2rem' }}>\r\n              Don't have an account?  <Link to=\"/register\">Sign up now!</Link>\r\n            </Typography>\r\n            <Typography sx={{ marginTop: '0.5rem' }}>\r\n              Forgot your password?  <Link to=\"/forgot-password\">Reset your password</Link>\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n\r\n      <Dialog open={isEmailCaptureModalOpen} onClose={handleClose}>\r\n        <EmailCapture onClose={handleClose} />\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect()(Login);","import React, { useRef } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Typography,\r\n  Paper,\r\n  Chip,\r\n  Fab,\r\n} from '@mui/material';\r\nimport { Attachment, Upload } from '@mui/icons-material';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  pinFileSuccess,\r\n} from '../../state/actions/document';\r\nimport NavBar from '../../components/nav-bar';\r\nimport { UserState } from '../../state/reducers/user';\r\nimport { checkIsValidFileType } from '../../utils/validate-file-type';\r\nimport {\r\n  createFileLink,\r\n  getPinnedFile\r\n} from '../../utils/spreadsheet.utils';\r\nimport { showError, hideError } from '../../state/actions/alert';\r\nimport { setIsLoading } from '../../state/actions/loading';\r\n\r\ninterface Props {\r\n  user: UserState;\r\n  dispatch: any;\r\n}\r\n\r\nconst Profile = ({ user, dispatch }: Props) => {\r\n  const inputFileRef: any = useRef(null);\r\n\r\n  const handlePinnedFileClick = async () => {\r\n    try {\r\n      dispatch(setIsLoading(true));\r\n      const pinnedFileData = await getPinnedFile(user.pinnedFile);\r\n      dispatch(setIsLoading(false));\r\n      createFileLink(pinnedFileData.data, user.pinnedFile);\r\n    } catch (err: any) {\r\n      console.log('err', err);\r\n      dispatch(setIsLoading(false));\r\n      dispatch(showError(`Failed to download pinned file. ${err}`));\r\n    }\r\n  };\r\n\r\n  const handleFileSelectionBtnClick = () => {\r\n    /*Collecting node-element and performing click*/\r\n    if (inputFileRef&& inputFileRef.current) {\r\n      inputFileRef.current.click();\r\n    }\r\n  }\r\n\r\n  const validateFileSelection = (event: any) => {\r\n    const document: any = event && event.target && event.target.files ?\r\n      event.target.files[0] :\r\n      null;\r\n    const isValidDocType: boolean = document && document.name ?\r\n      checkIsValidFileType(document.name) : false;\r\n\r\n    if (isValidDocType) {\r\n      dispatch(hideError());\r\n      handleFilePinning(document);\r\n    } else {\r\n      dispatch(showError('Invalid file type. Only pin .xls, .xlsx, or .csv'));\r\n    }\r\n  };\r\n\r\n  const handleFilePinning = (file: any) => {\r\n    dispatch(setIsLoading(true));\r\n    const formData = new FormData();\r\n    if (\r\n      file &&\r\n      file.name\r\n    ) {\r\n      formData.append(\r\n        'sales_file',\r\n        file,\r\n        file.name\r\n      );\r\n      formData.append(\r\n        'email',\r\n        user.email\r\n      );\r\n    }\r\n    axios.post('/api/v1/pinfile', formData)\r\n      .then(() => {\r\n        dispatch(pinFileSuccess(file.name));\r\n        dispatch(hideError());\r\n        dispatch(setIsLoading(false));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        dispatch(setIsLoading(false));\r\n        dispatch(showError(`Failed to pin file. ${err}`));\r\n      });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <Box sx={{ width: '100%', height: '80vh', marginTop: '3.5vh' }}>\r\n        <Grid\r\n          container\r\n          spacing={2}\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          sx={{ height: '100%' }}\r\n        >\r\n          <Grid\r\n            item\r\n            container\r\n            xs={8}\r\n            p={0}\r\n            sx={{ height: '100%' }}\r\n            direction=\"column\"\r\n            justifyContent=\"start\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Paper elevation={3} sx={{ width: '100%', padding: '3rem 0 3rem 3rem', marginTop: '3rem' }}>\r\n              <Typography variant=\"h5\" sx={{ marginBottom: '2rem' }}>Profile</Typography>\r\n              <Typography variant=\"subtitle1\" sx={{ marginBottom: '2rem' }}>Name: {user.firstname} {user.lastname}</Typography>\r\n              <Typography variant=\"subtitle1\" sx={{ marginBottom: '2rem' }}>Email: {user.email}</Typography>\r\n              <Typography variant=\"subtitle1\" sx={{ marginBottom: '2rem' }}>Company: {user.company}</Typography>\r\n              <Typography variant=\"subtitle1\">Pinned File:</Typography>\r\n              <Chip onClick={handlePinnedFileClick} icon={<Attachment />} label={user.pinnedFile} />\r\n              <Grid\r\n                item\r\n                container\r\n                xs={6}\r\n                p={0}\r\n                direction=\"column\"\r\n                justifyContent=\"start\"\r\n                alignItems=\"start\"\r\n              >\r\n                <Fab\r\n                  variant=\"extended\"\r\n                  aria-label=\"add\"\r\n                  sx={{ marginTop: '2.5rem' }}\r\n                  onClick={handleFileSelectionBtnClick}\r\n                >\r\n                  <Upload sx={{ mr: 1 }} />\r\n                  Select New Pinned File\r\n                </Fab>\r\n                <input\r\n                  type=\"file\"\r\n                  ref={inputFileRef}\r\n                  className=\"file-input\"\r\n                  onChange={validateFileSelection}\r\n                  name=\"sales_file\"\r\n                />\r\n              </Grid>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  user: state.user\r\n});\r\n\r\nexport default connect(mapStateToProps)(Profile);","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Fab,\r\n  TextField,\r\n  CircularProgress,\r\n  Backdrop,\r\n  Grid,\r\n  Typography,\r\n  Alert,\r\n} from '@mui/material';\r\nimport axios from 'axios';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { useFormik } from 'formik';\r\nimport NavBar from '../../components/nav-bar';\r\n\r\nconst PasswordReset = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [passwordResetError, setPasswordResetError] = useState('');\r\n  const history = useHistory();\r\n  const params: any = useParams();\r\n\r\n  useEffect(() => {\r\n    axios.post('/api/v1/resetpassword', { token: params.token })\r\n      .catch((err) => {\r\n        history.push('/login');\r\n      });\r\n  }, [params, history]);\r\n\r\n  const validate = (values: any) => {\r\n    const errors: any = {};\r\n    if (!values.email) {\r\n      errors.email = 'Required';\r\n    }\r\n\r\n    if (!values.password) {\r\n      errors.password = 'Required';\r\n    } else if (values.password.length < 8) {\r\n      errors.password = 'Must be 8 characters or more';\r\n    }\r\n  \r\n    if (!values.confirmPassword) {\r\n      errors.confirmPassword = 'Required';\r\n    } else if (values.confirmPassword !== values.password) {\r\n      errors.confirmPassword = 'Must match password';\r\n    }\r\n  \r\n    return errors;\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n      password: '',\r\n      confirmPassword: '',\r\n    },\r\n    validate,\r\n    onSubmit: (values: any) => {\r\n      const formData = new FormData();\r\n      formData.append('email', values.email);\r\n      formData.append('password', values.password);\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      };\r\n      setLoading(true);\r\n      axios.post('/api/v1/updatepassword', formData, config)\r\n        .then((res) => {\r\n          setLoading(false);\r\n          setPasswordResetError('');\r\n          history.push('/login');\r\n        })\r\n        .catch((err: any) => {\r\n          setLoading(false);\r\n          setPasswordResetError('Password reset failed. Please try again.')\r\n        });\r\n    },\r\n  });\r\n\r\n  const { values, errors, touched, handleBlur, handleChange, handleSubmit } = formik;\r\n\r\n  const isSubmitButtonDisabled = !!errors.email || !!errors.password || !!errors.confirmPassword\r\n    || !values.email || !values.password || !values.confirmPassword;\r\n\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <Box sx={{ width: '100%', height: '80vh', marginTop: '3.5vh' }}>\r\n        <Grid\r\n          container\r\n          spacing={2}\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          sx={{ height: '100%' }}\r\n        >\r\n          <Grid\r\n            item\r\n            container\r\n            xs={4}\r\n            p={0}\r\n            sx={{ height: '100%' }}\r\n            direction=\"column\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Typography variant=\"h5\" sx={{ marginBottom: '2rem' }}>Reset your password</Typography>\r\n            <form onSubmit={handleSubmit}>\r\n              <TextField\r\n                required\r\n                id=\"standard-basic\"\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                variant=\"standard\"\r\n                sx={{ width: '100%', marginBottom: '1.5rem' }}\r\n                error={touched.email && !!errors.email}\r\n                helperText={errors.email ? errors.email : null}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                value={values.email}\r\n              />\r\n              <TextField\r\n                required\r\n                id=\"standard-basic\"\r\n                label=\"Password\"\r\n                name=\"password\"\r\n                variant=\"standard\"\r\n                type=\"password\"\r\n                sx={{ width: '100%', marginBottom: '1.5rem' }}\r\n                error={touched.password && !!errors.password}\r\n                helperText={errors.password ? errors.password : null}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                value={values.password}\r\n              />\r\n              <TextField\r\n                required\r\n                id=\"standard-basic\"\r\n                label=\"Confirm Password\"\r\n                name=\"confirmPassword\"\r\n                variant=\"standard\"\r\n                type=\"password\"\r\n                sx={{ width: '100%', marginBottom: '1.5rem' }}\r\n                error={touched.confirmPassword && !!errors.confirmPassword}\r\n                helperText={errors.confirmPassword ? errors.confirmPassword : null}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                value={values.confirmPassword}\r\n              />\r\n              <Grid\r\n                container\r\n                spacing={2}\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Grid\r\n                  item\r\n                  container\r\n                  xs={8}\r\n                  p={0}\r\n                  direction=\"column\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\"\r\n                >\r\n                  <Fab\r\n                    variant=\"extended\"\r\n                    aria-label=\"add\"\r\n                    sx={{ marginTop: '2.5rem', marginLeft: 'auto', marginRight: 'auto' }}\r\n                    type=\"submit\"\r\n                    disabled={isSubmitButtonDisabled}\r\n                  >\r\n                    Reset Password\r\n                  </Fab>\r\n\r\n                  {!!passwordResetError &&\r\n                    <Alert\r\n                      severity=\"error\"\r\n                      variant=\"standard\"\r\n                      sx={{ marginTop: '2rem', borderRadius: '10px', width: '100%' }}\r\n                    >\r\n                      {passwordResetError}\r\n                    </Alert>\r\n                  }\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n\r\n      <Backdrop open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PasswordReset;","import React, { useState } from 'react';\r\nimport {\r\n  Box,\r\n  Fab,\r\n  TextField,\r\n  CircularProgress,\r\n  Backdrop,\r\n  Grid,\r\n  Typography,\r\n  Alert,\r\n} from '@mui/material';\r\nimport axios from 'axios';\r\nimport { useFormik } from 'formik';\r\nimport NavBar from '../../components/nav-bar';\r\n\r\nconst ForgotPassword = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [forgotPasswordError, setForgotPasswordError] = useState('');\r\n\r\n  const validate = (values: any) => {\r\n    const errors: any = {};\r\n  \r\n    if (!values.email) {\r\n      errors.email = 'Required';\r\n    }\r\n  \r\n    return errors;\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n    },\r\n    validate,\r\n    onSubmit: (values: any) => {\r\n      const formData = new FormData();\r\n      formData.append('email', values.email);\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      };\r\n      setLoading(true);\r\n      axios.post('/api/v1/forgotpassword', formData, config)\r\n        .then(() => {\r\n          setLoading(false);\r\n          setForgotPasswordError('');\r\n        })\r\n        .catch((err: any) => {\r\n          console.log('err', err);\r\n          setLoading(false);\r\n          setForgotPasswordError('Wrong email or password');\r\n        });\r\n    },\r\n  });\r\n\r\n  const { values, errors, touched, handleBlur, handleChange, handleSubmit } = formik;\r\n\r\n  const isSubmitButtonDisabled = !!errors.email || !values.email;\r\n\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <Box sx={{ width: '100%', height: '80vh', marginTop: '3.5vh' }}>\r\n        <Grid\r\n          container\r\n          spacing={2}\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          sx={{ height: '100%' }}\r\n        >\r\n          <Grid\r\n            item\r\n            container\r\n            xs={4}\r\n            p={0}\r\n            sx={{ height: '100%' }}\r\n            direction=\"column\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Typography variant=\"h5\" sx={{ marginBottom: '0.5rem' }}>Forgot my password</Typography>\r\n            <Typography variant=\"subtitle1\" sx={{ marginBottom: '2rem' }}>\r\n              Enter your email, and then you'll receive a verification code at that address. Use that code to reset your password.\r\n            </Typography>\r\n            <form onSubmit={handleSubmit}>\r\n              <TextField\r\n                required\r\n                id=\"standard-basic\"\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                variant=\"standard\"\r\n                sx={{ width: '100%', marginBottom: '1.5rem' }}\r\n                error={touched.email && !!errors.email}\r\n                helperText={errors.email ? errors.email : null}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                value={values.email}\r\n              />\r\n              <Grid\r\n                container\r\n                spacing={2}\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Grid\r\n                  item\r\n                  container\r\n                  xs={12}\r\n                  p={0}\r\n                  direction=\"column\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\"\r\n                >\r\n                  <Fab\r\n                    variant=\"extended\"\r\n                    aria-label=\"add\"\r\n                    sx={{ marginTop: '2.5rem', marginLeft: 'auto', marginRight: 'auto' }}\r\n                    type=\"submit\"\r\n                    disabled={isSubmitButtonDisabled}\r\n                  >\r\n                    Send Password Reset Email\r\n                  </Fab>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n\r\n            {!!forgotPasswordError &&\r\n              <Alert\r\n                severity=\"error\"\r\n                variant=\"standard\"\r\n                sx={{ marginTop: '2rem', borderRadius: '10px', width: '100%' }}\r\n              >\r\n                {forgotPasswordError}\r\n              </Alert>\r\n            }\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n\r\n      <Backdrop open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;","import React from 'react';\r\nimport { Route, Redirect, useLocation } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nconst PrivateRoute = (props: any) => {\r\n  const location = useLocation();\r\n\r\n  return props.user && props.user.email ? (\r\n    <Route {...props} />\r\n  ) : (\r\n    <Redirect\r\n      to={{\r\n        pathname: \"/login\",\r\n        state: { from: location }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  user: state.user\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","import './App.css';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport {\r\n  Alert,\r\n  Backdrop,\r\n  CircularProgress\r\n} from '@mui/material';\r\nimport { connect } from 'react-redux';\r\nimport Home from './pages/home';\r\nimport Register from './pages/register';\r\nimport Login from './pages/login';\r\nimport Profile from './pages/profile';\r\nimport PasswordReset from './pages/password-reset';\r\nimport ForgotPassword from './pages/forgot-password';\r\nimport PrivateRoute from './components/private-route'; // set everything to private after testing\r\nimport { AlertState } from './state/reducers/alert';\r\n\r\ninterface Props {\r\n  alert: AlertState;\r\n  loading: boolean;\r\n}\r\n\r\nconst Routes = ({ alert, loading }: Props) => {\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <main>\r\n        {/* <PrimaryAppBarContainer /> */}\r\n        <Switch>\r\n          <Route exact path=\"/home\" component={Home} />\r\n          <Route exact path=\"/login\" component={Login} />\r\n          <Route exact path=\"/register\" component={Register} />\r\n          <PrivateRoute exact path=\"/profile\" component={Profile} />\r\n          <Route exact path=\"/forgot-password\" component={ForgotPassword} />\r\n          <Route path=\"/password-reset/:token\" component={PasswordReset} />\r\n        </Switch>\r\n        {alert.isOpen && <Alert\r\n          variant=\"standard\"\r\n          severity={alert.alertType || \"error\"}\r\n          sx={{\r\n            margin: '2rem auto 0 auto',\r\n            borderRadius: '10px',\r\n            width: 'fit-content',\r\n            maxWidth: '50%',\r\n            flexWrap: 'wrap'\r\n          }}\r\n        >\r\n          {alert.message}\r\n        </Alert>}\r\n        <Backdrop open={loading}>\r\n          <CircularProgress color=\"inherit\" />\r\n        </Backdrop>\r\n      </main>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  alert: state.alert,\r\n  loading: state.loading.isLoading\r\n});\r\n\r\nexport default connect(mapStateToProps)(Routes);\r\n","import {\r\n  SET_IS_LOADING,\r\n  UPLOAD_DOCUMENT_SUCCESS,\r\n  SELECT_DOCUMENT,\r\n  CHANGE_COMPARISON_COLUMN,\r\n  CHANGE_RESULT_COLUMNS,\r\n  SET_FILE_SOURCE\r\n} from '../../actions/document';\r\n\r\ninterface SelectedDocument {\r\n  data: Array<any>;\r\n  name: string;\r\n}\r\n\r\ninterface DocumentState {\r\n  duplicatesData: Array<any>;\r\n  selectedDocument1: SelectedDocument;\r\n  selectedDocument2: SelectedDocument;\r\n  comparisonColumn1: Array<string>;\r\n  comparisonColumn2: Array<string>;\r\n  resultColumns1: Array<string>;\r\n  resultColumns2: Array<string>;\r\n  fileSource1: string;\r\n  fileSource2: string;\r\n  loading: boolean;\r\n}\r\n\r\nconst initialState: DocumentState = {\r\n  duplicatesData: [],\r\n  selectedDocument1: { data: [], name: '' },\r\n  selectedDocument2: { data: [], name: '' },\r\n  comparisonColumn1: [],\r\n  comparisonColumn2: [],\r\n  resultColumns1: [],\r\n  resultColumns2: [],\r\n  fileSource1: 'upload',\r\n  fileSource2: 'upload',\r\n  loading: false,\r\n};\r\n\r\nexport const documentReducer = (state = initialState, action: any) => {\r\n  switch (action.type) {\r\n    case CHANGE_COMPARISON_COLUMN:\r\n      if (action.index === 0) {\r\n        return { ...state, comparisonColumn1: action.payload, resultColumns1: action.payload };\r\n      } else {\r\n        return { ...state, comparisonColumn2: action.payload, resultColumns2: action.payload}\r\n      }\r\n    case CHANGE_RESULT_COLUMNS:\r\n      if (action.index === 0) {\r\n        return { ...state, resultColumns1: action.payload };\r\n      } else {\r\n        return { ...state, resultColumns2: action.payload}\r\n      }\r\n    case SELECT_DOCUMENT:\r\n      if (action.index === 0) {\r\n        return {\r\n          ...state,\r\n          selectedDocument1: {\r\n            data: action.payload,\r\n            name: action.name\r\n          }\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          selectedDocument2: {\r\n            data: action.payload,\r\n            name: action.name\r\n          }\r\n        };\r\n      }\r\n    case SET_FILE_SOURCE:\r\n      if (action.index === 0) {\r\n        return {\r\n          ...state,\r\n          fileSource1: action.payload\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          fileSource2: action.payload\r\n        };\r\n      }\r\n    case SET_IS_LOADING:\r\n      return { ...state, loading: action.payload };\r\n    case UPLOAD_DOCUMENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        duplicatesData: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}","import { CHANGE_STEP } from '../../actions/step-progress';\r\n\r\ninterface StepProgressState {\r\n  step: number;\r\n}\r\n\r\nconst initialState: StepProgressState = {\r\n  step: 0\r\n}\r\n\r\nexport const stepProgressReducer = (state = initialState, action: any) => {\r\n  switch (action.type) {\r\n    case CHANGE_STEP:\r\n      return {\r\n        ...state,\r\n        step: action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}","import { UPDATE_USER } from '../../actions/user';\r\nimport { PIN_FILE_SUCCESS } from '../../actions/document';\r\n\r\nexport interface UserState {\r\n  firstname: string;\r\n  lastname: string;\r\n  email: string;\r\n  company: string;\r\n  pinnedFile: string;\r\n}\r\n\r\nconst initialState: UserState = {\r\n  firstname: '',\r\n  lastname: '',\r\n  email: '',\r\n  company: '',\r\n  pinnedFile: ''\r\n}\r\n\r\nexport const userReducer = (state = initialState, action: any) => {\r\n  switch (action.type) {\r\n    case UPDATE_USER:\r\n      return {\r\n        ...state,\r\n        email: action.payload.email,\r\n        firstname: action.payload.firstname,\r\n        lastname: action.payload.lastname,\r\n        company: action.payload.company,\r\n        pinnedFile: action.payload.pinned_filename\r\n      };\r\n    case PIN_FILE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        pinnedFile: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}","import { UPDATE_EMAIL_TEMPLATE } from '../../actions/email-template';\r\n\r\nconst EMAIL_DEFAULT_TEXT = `[insert name],\r\n\r\nThanks for sending over your account list.\r\n\r\nAttached you’ll find a list that maps both our account teams to one another. \r\n\r\nRegards,\r\n\r\n[insert your signature]\r\n`;\r\n\r\nconst initialState = {\r\n  template: EMAIL_DEFAULT_TEXT\r\n};\r\n\r\nexport const emailTemplateReducer = (state = initialState, action: any) => {\r\n  switch(action.type) {\r\n    case UPDATE_EMAIL_TEMPLATE:\r\n      return { ...state, template: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}","import { SHOW_ERROR, HIDE_ERROR, SHOW_SUCCESS, HIDE_SUCCESS } from '../../actions/alert';\r\nimport { CHANGE_STEP } from '../../actions/step-progress';\r\n\r\nexport interface AlertState {\r\n  isOpen: boolean;\r\n  alertType: any;\r\n  message: string;\r\n};\r\n\r\nconst initialState = {\r\n  isOpen: false,\r\n  alertType: '',\r\n  message: ''\r\n}\r\n\r\nexport const alertReducer = (state: AlertState = initialState, action: any) => {\r\n  switch(action.type) {\r\n    case SHOW_ERROR:\r\n      return {\r\n        ...state,\r\n        isOpen: true,\r\n        alertType: 'error',\r\n        message: action.payload\r\n      };\r\n    case HIDE_ERROR:\r\n    case CHANGE_STEP:\r\n      return {\r\n        ...state,\r\n        isOpen: false,\r\n        alertType: '',\r\n        message: ''\r\n      };\r\n    case SHOW_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isOpen: true,\r\n        alertType: 'error',\r\n        message: action.payload\r\n      };\r\n    case HIDE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isOpen: false,\r\n        alertType: '',\r\n        message: ''\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}","import { SET_IS_LOADING } from '../../actions/loading';\r\n\r\nexport interface LoadingState {\r\n  isLoading: boolean;\r\n};\r\n\r\nconst initialState = {\r\n  isLoading: false\r\n}\r\n\r\nexport const loadingReducer = (state: LoadingState = initialState, action: any) => {\r\n  switch(action.type) {\r\n    case SET_IS_LOADING:\r\n      return { ...state, isLoading: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from 'redux';\r\nimport { documentReducer } from './document';\r\nimport { stepProgressReducer } from './step-progress';\r\nimport { userReducer } from './user';\r\nimport { emailTemplateReducer } from './email-template';\r\nimport { alertReducer } from './alert';\r\nimport { loadingReducer } from './loading';\r\n\r\nexport const rootReducer = combineReducers({\r\n  stepProgress: stepProgressReducer,\r\n  document: documentReducer,\r\n  user: userReducer,\r\n  emailTemplate: emailTemplateReducer,\r\n  alert: alertReducer,\r\n  loading: loadingReducer\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport logger from 'redux-logger';\r\nimport { applyMiddleware, createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport 'devextreme/dist/css/dx.light.css';\r\nimport Routes from './Routes';\r\nimport { rootReducer } from './state/reducers';\r\nimport './index.css';\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(logger));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Routes />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}